11:02:47,056 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b3d6750
11:02:47,056 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@21067998
11:02:47,056 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@21067998
11:02:47,057 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6ebbed1d
11:02:47,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6ebbed1d
11:02:47,058 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26a631e
11:02:47,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26a631e
11:02:47,058 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1d57639d
11:02:47,060 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@39752b13
11:02:47,060 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@39752b13
11:02:47,060 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@39752b13
11:02:47,061 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c78f6d6
11:02:47,061 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c78f6d6
11:02:47,062 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c78f6d6
11:02:47,062 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@59c50a77
11:02:47,063 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@14bcd88a
11:02:47,063 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@14bcd88a
11:02:47,063 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@14bcd88a
11:02:47,064 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@510bfb36
11:02:47,064 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@510bfb36
11:02:47,064 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@510bfb36
11:02:47,064 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1d1d03fd
11:02:47,065 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ce3a75
11:02:47,067 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3e8fcdf8
11:02:47,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e8fcdf8
11:02:47,067 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71e3262d
11:02:47,070 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5492ceb7
11:02:47,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5492ceb7
11:02:47,072 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5a882419
11:02:47,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5a882419
11:02:47,072 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44348ed9
11:02:47,073 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39a1a9a8
11:02:47,073 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@41c8496b
11:02:47,076 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@4d6025e4
11:02:47,076 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4d6025e4
11:02:47,076 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bcf8251
11:02:47,076 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@47ccd9c9
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7f6d792e
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@46ca1cf6
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@31e0c374
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10434610
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@473e93f
11:02:47,077 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@124878eb
11:02:47,248  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
11:02:47,271  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
11:02:48,134  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:02:46 PDT 2015]; root of context hierarchy
11:02:48,163  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:02:46 PDT 2015]; root of context hierarchy
11:02:48,219  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:02:46 PDT 2015]; root of context hierarchy
11:02:48,262  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2094 ms
11:02:49,162  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 11:02:46 PDT 2015]; root of context hierarchy
11:02:49,173  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
11:03:01,296  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
11:03:01,350  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 11:03:01 PDT 2015]; root of context hierarchy
11:03:01,372  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
11:03:01,636  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
11:03:01,637  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
11:03:01,701  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:03:01,750  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
11:03:01,773  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
11:03:01,792  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
11:03:01,839  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:03:01,841  INFO Environment:213 - HHH000206: hibernate.properties not found
11:03:01,842  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:03:01,868  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:03:01,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
11:03:01,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
11:03:01,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
11:03:01,942 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
11:03:01,942 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
11:03:01,943 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
11:03:01,944 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
11:03:01,944 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
11:03:01,944 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
11:03:01,945 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
11:03:01,945 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
11:03:01,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
11:03:01,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
11:03:01,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
11:03:01,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
11:03:01,947 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
11:03:01,947 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
11:03:01,947 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
11:03:01,948 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
11:03:01,948 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
11:03:01,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
11:03:01,949 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
11:03:01,950 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
11:03:01,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
11:03:01,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
11:03:01,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
11:03:01,951 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
11:03:01,952 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
11:03:01,952 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
11:03:01,953 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
11:03:01,953 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
11:03:01,954 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
11:03:01,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
11:03:01,954 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
11:03:01,955 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
11:03:01,956 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
11:03:01,956 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
11:03:01,957 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
11:03:01,957 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
11:03:01,959 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
11:03:01,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
11:03:01,960 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
11:03:01,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
11:03:01,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
11:03:01,961 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
11:03:01,962 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
11:03:01,962 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
11:03:01,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
11:03:01,963 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
11:03:01,964 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
11:03:01,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
11:03:01,964 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
11:03:01,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
11:03:01,965 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
11:03:01,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
11:03:01,966 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
11:03:01,966 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
11:03:01,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
11:03:01,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
11:03:01,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
11:03:01,968 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
11:03:01,968 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
11:03:01,968 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
11:03:01,969 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
11:03:01,969 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
11:03:01,969 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
11:03:01,970 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
11:03:01,971 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
11:03:01,971 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
11:03:01,971 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
11:03:01,972 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
11:03:01,972 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
11:03:01,972 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
11:03:01,973 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
11:03:01,973 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
11:03:01,975 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
11:03:01,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
11:03:01,976 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
11:03:01,978 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
11:03:01,978 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
11:03:01,980 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
11:03:01,980 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
11:03:01,980 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
11:03:01,981 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
11:03:01,981 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
11:03:01,983 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
11:03:01,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
11:03:01,984 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
11:03:01,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
11:03:01,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
11:03:02,239  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
11:03:02,262  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
11:03:03,244  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:03:01 PDT 2015]; root of context hierarchy
11:03:03,273  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:03:01 PDT 2015]; root of context hierarchy
11:03:03,334  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:03:01 PDT 2015]; root of context hierarchy
11:03:03,388  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2090 ms
11:03:14,685 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4e396e0b
11:03:14,686  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:03:14,707 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias0.price=0
11:03:14,716 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'price'
          \-[NUM_INT] Node: '0'

11:03:14,716 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:14,735 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
11:03:14,751 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
11:03:14,753 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:14,755 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
11:03:14,756 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
11:03:14,758 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
11:03:14,758 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
11:03:14,759 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
11:03:14,759 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

11:03:14,759 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:14,760 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
11:03:14,760 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
11:03:14,760 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
11:03:14,760 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
11:03:14,761 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
11:03:14,761 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

11:03:14,761 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:14,764 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:14,764 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@40ef0af8
11:03:14,765 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
11:03:14,766 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
11:03:14,766 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( = ( section0_.price section0_.section_id price ) 0 ) ) )
11:03:14,771 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
11:03:14,772 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
11:03:14,772 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
11:03:14,773 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
11:03:14,773 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  \-[IDENT] IdentNode: 'price' {originalText=price}
          \-[NUM_INT] LiteralNode: '0'

11:03:14,773 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:14,779 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias0.price=0
11:03:14,780 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0
11:03:14,780 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:14,799 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0
11:03:14,830 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:03:14,834 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:03:14,844 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:03:14,845 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:03:14,846 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:03:14,848 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:03:29,425 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
11:03:29,430 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

11:03:29,431 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:29,431 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
11:03:29,432 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
11:03:29,432 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:29,433 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
11:03:29,434 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
11:03:29,434 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
11:03:29,434 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
11:03:29,435 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
11:03:29,435 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

11:03:29,436 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:29,436 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
11:03:29,436 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
11:03:29,436 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
11:03:29,436 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
11:03:29,437 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
11:03:29,437 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

11:03:29,437 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:29,438 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
11:03:29,438 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@40ef0af8
11:03:29,438 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
11:03:29,438 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
11:03:29,439 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@423a0e1d
11:03:29,439 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
11:03:29,441 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
11:03:29,441 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
11:03:29,442 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
11:03:29,442 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
11:03:29,442 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
11:03:29,443 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
11:03:29,443 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@423a0e1d}

11:03:29,443 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:29,444 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
11:03:29,444 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
11:03:29,444 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:03:29,448 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
11:03:29,454 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:03:29,455 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:04:38,597 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0
11:04:38,604 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:04:38,605 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:04:38,607 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:04:38,609 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:04:38,610 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:04:38,612 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
11:05:41,202 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
11:05:47,494 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
11:05:52,402 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
11:06:02,318 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
12:35:49,362  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 11:03:01 PDT 2015]; root of context hierarchy
12:35:49,366  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:35:50,284  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:35:50,689  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:35:50 PDT 2015]; root of context hierarchy
12:35:50,722  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:35:50,929  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:35:50,930  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:35:51,004  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:35:51,053  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:35:51,077  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:35:51,095  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:35:51,142  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:35:51,143  INFO Environment:213 - HHH000206: hibernate.properties not found
12:35:51,145  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:35:51,171  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:35:51,212 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5271c01c
12:35:51,212 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5271c01c
12:35:51,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5271c01c
12:35:51,213 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2e13c006
12:35:51,214 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@65c658d1
12:35:51,214 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@423a2a12
12:35:51,215 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@430c9589
12:35:51,215 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@430c9589
12:35:51,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@430c9589
12:35:51,216 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1438db90
12:35:51,216 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1438db90
12:35:51,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1438db90
12:35:51,217 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@55f6879d
12:35:51,217 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@55f6879d
12:35:51,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@55f6879d
12:35:51,218 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1b000d5b
12:35:51,219 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1b000d5b
12:35:51,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b000d5b
12:35:51,219 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@35714c
12:35:51,220 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@35714c
12:35:51,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35714c
12:35:51,220 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5e5dbeec
12:35:51,221 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5e5dbeec
12:35:51,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5e5dbeec
12:35:51,222 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@428c72a7
12:35:51,222 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@428c72a7
12:35:51,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@428c72a7
12:35:51,223 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ea7c10b
12:35:51,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ea7c10b
12:35:51,224 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6f0cd891
12:35:51,224 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6f0cd891
12:35:51,224 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@12f3a466
12:35:51,224 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@12f3a466
12:35:51,225 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@53363fcd
12:35:51,225 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@589280e7
12:35:51,226 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@58f251e0
12:35:51,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58f251e0
12:35:51,227 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2ececeb7
12:35:51,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ececeb7
12:35:51,228 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@62322009
12:35:51,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@62322009
12:35:51,229 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5e25644e
12:35:51,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e25644e
12:35:51,230 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e25644e
12:35:51,230 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c6401d6
12:35:51,231 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4054ae06
12:35:51,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4054ae06
12:35:51,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4054ae06
12:35:51,232 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6bba28ec
12:35:51,233 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6c9879a5
12:35:51,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c9879a5
12:35:51,233 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7f0c54c5
12:35:51,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7f0c54c5
12:35:51,234 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@329f55b9
12:35:51,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@329f55b9
12:35:51,235 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@f3402dd
12:35:51,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@f3402dd
12:35:51,236 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3545f6dc
12:35:51,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3545f6dc
12:35:51,236 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@47b43ca8
12:35:51,237 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6a0f41f5
12:35:51,237 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6a0f41f5
12:35:51,237 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6a0f41f5
12:35:51,238 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@21edb704
12:35:51,238 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@21edb704
12:35:51,238 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@21edb704
12:35:51,238 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4ab24913
12:35:51,239 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@74403dc7
12:35:51,239 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74403dc7
12:35:51,239 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@74403dc7
12:35:51,240 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@72ddfca
12:35:51,240 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@72ddfca
12:35:51,240 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@72ddfca
12:35:51,240 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1a51f6fa
12:35:51,241 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@542f828
12:35:51,243 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@a5201e6
12:35:51,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a5201e6
12:35:51,243 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@45ce77ad
12:35:51,245 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3e89a175
12:35:51,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e89a175
12:35:51,247 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5662b458
12:35:51,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5662b458
12:35:51,248 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b8ecbef
12:35:51,248 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d986cc6
12:35:51,249 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@791e3951
12:35:51,251 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3720e25e
12:35:51,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3720e25e
12:35:51,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6deab68f
12:35:51,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5de88b7e
12:35:51,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63bda0c2
12:35:51,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2816cf65
12:35:51,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@10f04a26
12:35:51,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9da803d
12:35:51,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7ef9a74
12:35:51,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@199c100b
12:35:51,445  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:35:51,469  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:35:52,226  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sectionController' defined in file [/Users/Shraddha/git/CMPE-272-CourseRegistrationSystem/target/classes/org/courseregistration/controller/SectionController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.courseregistration.controller.SectionController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.courseregistration.controller.SectionController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1098)
	... 30 more
Caused by: java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.courseregistration.controller.SectionController.<init>(SectionController.java:190)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 32 more
12:35:52,230  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:35:52,231 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sectionController' defined in file [/Users/Shraddha/git/CMPE-272-CourseRegistrationSystem/target/classes/org/courseregistration/controller/SectionController.class]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.courseregistration.controller.SectionController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1050)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:510)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.courseregistration.controller.SectionController]: Constructor threw exception; nested exception is java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:163)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:89)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1098)
	... 30 more
Caused by: java.lang.Error: Unresolved compilation problems: 
	Syntax error on token ",", ( expected
	Syntax error, insert ")" to complete Modifier

	at org.courseregistration.controller.SectionController.<init>(SectionController.java:190)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)
	... 32 more
12:36:17,471  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:36:17,514  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:36:17 PDT 2015]; root of context hierarchy
12:36:17,536  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:36:17,721  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:36:17,722  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:36:17,782  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:36:17,821  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:36:17,841  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:36:17,858  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:36:17,901  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:36:17,903  INFO Environment:213 - HHH000206: hibernate.properties not found
12:36:17,904  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:36:17,929  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:36:17,967 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@43a90cf5
12:36:17,967 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@43a90cf5
12:36:17,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@43a90cf5
12:36:17,968 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6f01b500
12:36:17,969 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7e8ba02d
12:36:17,969 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7847ee45
12:36:17,970 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@697cf42c
12:36:17,970 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@697cf42c
12:36:17,970 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@697cf42c
12:36:17,970 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@68c07b58
12:36:17,971 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@68c07b58
12:36:17,971 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68c07b58
12:36:17,971 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@64b0f566
12:36:17,972 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@64b0f566
12:36:17,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64b0f566
12:36:17,972 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6059969c
12:36:17,972 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6059969c
12:36:17,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6059969c
12:36:17,973 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@73d3ab15
12:36:17,973 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@73d3ab15
12:36:17,973 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@73d3ab15
12:36:17,974 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3900342f
12:36:17,974 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3900342f
12:36:17,974 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3900342f
12:36:17,975 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6fa0ae9f
12:36:17,975 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6fa0ae9f
12:36:17,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6fa0ae9f
12:36:17,976 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@638f8684
12:36:17,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@638f8684
12:36:17,977 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@73983641
12:36:17,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@73983641
12:36:17,977 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@25b0842a
12:36:17,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@25b0842a
12:36:17,978 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1bdf24f9
12:36:17,978 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@568b8a85
12:36:17,979 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@35346f8a
12:36:17,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@35346f8a
12:36:17,980 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@40e68a04
12:36:17,980 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@40e68a04
12:36:17,982 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1dea13ee
12:36:17,982 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1dea13ee
12:36:17,983 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@445d6068
12:36:17,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@445d6068
12:36:17,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@445d6068
12:36:17,984 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d8e4f04
12:36:17,985 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@50a3f282
12:36:17,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50a3f282
12:36:17,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50a3f282
12:36:17,985 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78c14a17
12:36:17,986 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@bd71ed4
12:36:17,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@bd71ed4
12:36:17,986 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@5dc2d1c0
12:36:17,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5dc2d1c0
12:36:17,987 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1326bfd5
12:36:17,987 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1326bfd5
12:36:17,987 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@49a2f473
12:36:17,987 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49a2f473
12:36:17,988 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3d9370c9
12:36:17,988 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3d9370c9
12:36:17,989 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@703793d7
12:36:17,989 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@203f0062
12:36:17,989 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@203f0062
12:36:17,989 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@203f0062
12:36:17,990 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b1531ec
12:36:17,990 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b1531ec
12:36:17,990 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b1531ec
12:36:17,991 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@36177f47
12:36:17,991 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4ff1444
12:36:17,991 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4ff1444
12:36:17,992 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4ff1444
12:36:17,992 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3b851e81
12:36:17,992 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3b851e81
12:36:17,992 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3b851e81
12:36:17,993 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@56fc01b8
12:36:17,993 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@26fec132
12:36:17,995 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@188f9f
12:36:17,995 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@188f9f
12:36:17,996 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@24d0e313
12:36:17,999 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@148b0161
12:36:17,999 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@148b0161
12:36:18,000 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4b1bd81b
12:36:18,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4b1bd81b
12:36:18,001 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@527090f4
12:36:18,001 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ead4e08
12:36:18,002 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7fcc8670
12:36:18,003 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7d28e187
12:36:18,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d28e187
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2fb30133
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@152de99b
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@117cf017
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2258871e
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@15d5b0ff
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6fcef2ef
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19445b49
12:36:18,004 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f425f08
12:36:18,172  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:36:18,193  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:36:19,318  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:17 PDT 2015]; root of context hierarchy
12:36:19,345  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:17 PDT 2015]; root of context hierarchy
12:36:19,411  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:17 PDT 2015]; root of context hierarchy
12:36:19,471  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1999 ms
12:36:33,913  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:36:17 PDT 2015]; root of context hierarchy
12:36:33,922  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:36:39,707  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:36:39,758  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:36:39 PDT 2015]; root of context hierarchy
12:36:39,779  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:36:40,032  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:36:40,032  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:36:40,097  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:36:40,148  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:36:40,173  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:36:40,190  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:36:40,238  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:36:40,239  INFO Environment:213 - HHH000206: hibernate.properties not found
12:36:40,240  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:36:40,268  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:36:40,343 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32120956
12:36:40,343 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32120956
12:36:40,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32120956
12:36:40,344 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3513c84c
12:36:40,345 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7066363
12:36:40,346 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2349f14d
12:36:40,347 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2cca611f
12:36:40,347 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2cca611f
12:36:40,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2cca611f
12:36:40,348 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@144ab983
12:36:40,348 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@144ab983
12:36:40,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@144ab983
12:36:40,349 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6397248c
12:36:40,349 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6397248c
12:36:40,349 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6397248c
12:36:40,350 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@38291795
12:36:40,350 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@38291795
12:36:40,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38291795
12:36:40,351 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@413bef78
12:36:40,351 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@413bef78
12:36:40,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413bef78
12:36:40,352 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5f7eee96
12:36:40,352 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5f7eee96
12:36:40,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f7eee96
12:36:40,353 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f6f3cc
12:36:40,353 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f6f3cc
12:36:40,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f6f3cc
12:36:40,355 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@183ade54
12:36:40,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@183ade54
12:36:40,356 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e26f1ed
12:36:40,356 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e26f1ed
12:36:40,357 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6a6c7f42
12:36:40,357 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6a6c7f42
12:36:40,358 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b9fdbc6
12:36:40,358 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5856dbe4
12:36:40,359 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@71aaf151
12:36:40,359 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71aaf151
12:36:40,360 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4da1f38a
12:36:40,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4da1f38a
12:36:40,361 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@16c1519e
12:36:40,361 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@16c1519e
12:36:40,362 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2001e48c
12:36:40,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2001e48c
12:36:40,363 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2001e48c
12:36:40,364 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@664632e9
12:36:40,365 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@66c9b52f
12:36:40,365 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@66c9b52f
12:36:40,365 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@66c9b52f
12:36:40,365 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7792d851
12:36:40,366 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@5a1f778
12:36:40,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a1f778
12:36:40,367 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72906e
12:36:40,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72906e
12:36:40,368 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5099c59b
12:36:40,368 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5099c59b
12:36:40,368 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3a479fda
12:36:40,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a479fda
12:36:40,369 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1095d23a
12:36:40,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1095d23a
12:36:40,370 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e39baf0
12:36:40,371 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@40709f9
12:36:40,371 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@40709f9
12:36:40,371 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@40709f9
12:36:40,373 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7d42542
12:36:40,373 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7d42542
12:36:40,373 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7d42542
12:36:40,374 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6e829e50
12:36:40,375 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@ec7b5de
12:36:40,375 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@ec7b5de
12:36:40,375 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@ec7b5de
12:36:40,376 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@10244722
12:36:40,376 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@10244722
12:36:40,376 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@10244722
12:36:40,376 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6ac4c3f7
12:36:40,377 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1150d471
12:36:40,379 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1903b5d
12:36:40,379 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1903b5d
12:36:40,380 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@627ff1b8
12:36:40,382 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@73afe2b7
12:36:40,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@73afe2b7
12:36:40,384 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4cb957b8
12:36:40,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4cb957b8
12:36:40,385 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@684e8c9d
12:36:40,385 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65514add
12:36:40,386 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@51e754e1
12:36:40,388 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@67fa5045
12:36:40,388 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67fa5045
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c134052
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69de5bed
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@750f64fe
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@996a546
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fc165f6
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@545b5ed0
12:36:40,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a7df831
12:36:40,390 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@667dcaad
12:36:40,637  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:36:40,660  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:36:41,627  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:39 PDT 2015]; root of context hierarchy
12:36:41,652  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:39 PDT 2015]; root of context hierarchy
12:36:41,711  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:36:39 PDT 2015]; root of context hierarchy
12:36:41,764  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2056 ms
12:37:01,543 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7360b50a
12:37:01,543  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
12:37:01,566 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price=0 )
12:37:01,579 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[LIKE] Node: 'like'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias2'
          |  |  \-[IDENT] Node: 'lastName'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

12:37:01,579 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:37:01,603 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:37:01,621 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:37:01,623 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:37:01,624 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:37:01,625 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:37:01,626 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:37:01,626 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:37:01,627 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:37:01,627 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:37:01,627 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:37:01,627 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:37:01,628 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:37:01,628 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:37:01,628 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:37:01,628 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:37:01,629 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:37:01,629 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:37:01,631 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
12:37:01,632 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@6a6c7f42
12:37:01,633 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
12:37:01,636 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:37:01,636 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@38291795
12:37:01,636 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:37:01,637 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:37:01,637 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ) )
12:37:01,641 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:37:01,641 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:37:01,641 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:37:01,641 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:37:01,642 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[LIKE] BinaryLogicOperatorNode: 'like'
          |  +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |  |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |  |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6a6c7f42}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

12:37:01,642 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:37:01,648 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price=0 )
12:37:01,649 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where (professor2_1_.last_name like ?) and section0_.price=0
12:37:01,649 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:37:01,673 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where (professor2_1_.last_name like ?) and section0_.price=0
12:38:08,298 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
12:38:08,301 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

12:38:08,301 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:08,302 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:38:08,303 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
12:38:08,303 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
12:38:08,304 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
12:38:08,304 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:38:08,305 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
12:38:08,305 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
12:38:08,306 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:38:08,306 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
12:38:08,306 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@6a6c7f42
12:38:08,307 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
12:38:08,307 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:38:08,307 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
12:38:08,308 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:38:08,308 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
12:38:08,308 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
12:38:08,308 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
12:38:08,309 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:38:08,309 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

12:38:08,309 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:08,310 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
12:38:08,310 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
12:38:08,310 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:08,314 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
12:38:08,339 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:38:08,344 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:38:08,356 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:38:08,357 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:38:08,358 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:38:08,360 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:38:08,361 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:38:08,363 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:38:50,257 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
12:38:50,261 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

12:38:50,261 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:50,261 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:38:50,262 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:38:50,263 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:38:50,263 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:38:50,263 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:38:50,264 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:38:50,264 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:38:50,264 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:38:50,265 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:38:50,265 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:38:50,265 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:38:50,265 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:38:50,266 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:38:50,266 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:38:50,266 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:38:50,267 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:38:50,267 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:38:50,267 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:38:50,268 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@38291795
12:38:50,268 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:38:50,268 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
12:38:50,269 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@6a6c7f42
12:38:50,269 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.name -> course1_.name
12:38:50,269 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:38:50,269 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( course1_.name course1_.course_id name ) ? ) ) ) )
12:38:50,270 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:38:50,270 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:38:50,271 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:38:50,271 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:38:50,271 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'course1_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6a6c7f42}

12:38:50,271 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:50,272 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
12:38:50,272 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:38:50,272 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:38:50,273 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:40:12,828  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:36:39 PDT 2015]; root of context hierarchy
12:40:12,834  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:40:13,685  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:40:14,071  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:40:14 PDT 2015]; root of context hierarchy
12:40:14,094  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:40:14,278  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:40:14,279  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:40:14,343  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:40:14,386  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:40:14,408  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:40:14,425  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:40:14,471  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:40:14,472  INFO Environment:213 - HHH000206: hibernate.properties not found
12:40:14,473  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:40:14,499  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:40:14,539 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@d681306
12:40:14,540 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@d681306
12:40:14,540 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@d681306
12:40:14,540 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@504dcf7
12:40:14,541 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@fd942c9
12:40:14,541 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@334f8cef
12:40:14,542 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@239345ff
12:40:14,542 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@239345ff
12:40:14,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@239345ff
12:40:14,543 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@37a4a9e4
12:40:14,543 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@37a4a9e4
12:40:14,543 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37a4a9e4
12:40:14,544 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5300f623
12:40:14,544 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5300f623
12:40:14,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5300f623
12:40:14,545 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@774dd7d5
12:40:14,545 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@774dd7d5
12:40:14,545 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@774dd7d5
12:40:14,546 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@660eb8ec
12:40:14,546 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@660eb8ec
12:40:14,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@660eb8ec
12:40:14,547 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@17067aa4
12:40:14,547 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@17067aa4
12:40:14,547 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@17067aa4
12:40:14,548 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ce6a3b5
12:40:14,548 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ce6a3b5
12:40:14,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ce6a3b5
12:40:14,549 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@516fc513
12:40:14,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@516fc513
12:40:14,549 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6be3001b
12:40:14,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6be3001b
12:40:14,550 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7ae6f4da
12:40:14,550 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7ae6f4da
12:40:14,551 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@76841307
12:40:14,551 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@617b8afa
12:40:14,552 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@28fd2e85
12:40:14,552 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28fd2e85
12:40:14,553 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7682ca74
12:40:14,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7682ca74
12:40:14,554 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3dba09d6
12:40:14,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3dba09d6
12:40:14,555 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@572236fa
12:40:14,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@572236fa
12:40:14,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@572236fa
12:40:14,556 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@28fad4aa
12:40:14,556 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4e87806b
12:40:14,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e87806b
12:40:14,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e87806b
12:40:14,557 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@16763d44
12:40:14,558 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7a63e451
12:40:14,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a63e451
12:40:14,558 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1f727914
12:40:14,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1f727914
12:40:14,559 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@485d296b
12:40:14,559 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@485d296b
12:40:14,560 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@634f57e2
12:40:14,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@634f57e2
12:40:14,560 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@372ccc45
12:40:14,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@372ccc45
12:40:14,561 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@44688dfa
12:40:14,561 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2296452f
12:40:14,561 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2296452f
12:40:14,562 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2296452f
12:40:14,562 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5aecb4cb
12:40:14,562 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5aecb4cb
12:40:14,562 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5aecb4cb
12:40:14,563 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5a8eca50
12:40:14,563 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@431f03ab
12:40:14,563 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@431f03ab
12:40:14,563 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@431f03ab
12:40:14,564 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a7c158f
12:40:14,564 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a7c158f
12:40:14,564 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a7c158f
12:40:14,565 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2c78e9c3
12:40:14,565 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@436796ba
12:40:14,567 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6a2af9bc
12:40:14,567 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6a2af9bc
12:40:14,567 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54c0262a
12:40:14,569 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7a6b769d
12:40:14,569 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7a6b769d
12:40:14,571 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3908aa6c
12:40:14,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3908aa6c
12:40:14,571 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@132ea9c5
12:40:14,571 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2126958f
12:40:14,572 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@58c6a81c
12:40:14,574 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@75b60614
12:40:14,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@75b60614
12:40:14,574 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cdaec9f
12:40:14,574 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7919dbb6
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@514b3758
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16e4ec6c
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d31443b
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4ac2e440
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42bbebb7
12:40:14,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@730df800
12:40:14,751  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:40:14,772  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:40:15,683  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:14 PDT 2015]; root of context hierarchy
12:40:15,705  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:14 PDT 2015]; root of context hierarchy
12:40:15,770  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:14 PDT 2015]; root of context hierarchy
12:40:15,826  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2140 ms
12:40:19,670  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:40:14 PDT 2015]; root of context hierarchy
12:40:19,679  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:40:24,858  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:40:24,909  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:40:24 PDT 2015]; root of context hierarchy
12:40:24,930  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:40:25,172  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:40:25,173  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:40:25,246  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:40:25,305  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:40:25,328  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:40:25,348  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:40:25,396  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:40:25,397  INFO Environment:213 - HHH000206: hibernate.properties not found
12:40:25,398  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:40:25,425  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:40:25,494 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
12:40:25,494 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
12:40:25,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
12:40:25,495 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
12:40:25,496 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
12:40:25,496 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
12:40:25,497 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
12:40:25,497 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
12:40:25,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
12:40:25,498 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
12:40:25,498 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
12:40:25,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
12:40:25,499 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
12:40:25,499 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
12:40:25,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
12:40:25,500 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
12:40:25,500 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
12:40:25,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
12:40:25,501 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
12:40:25,502 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
12:40:25,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
12:40:25,503 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
12:40:25,503 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
12:40:25,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
12:40:25,504 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
12:40:25,504 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
12:40:25,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
12:40:25,505 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
12:40:25,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
12:40:25,506 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
12:40:25,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
12:40:25,507 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
12:40:25,507 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
12:40:25,507 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
12:40:25,508 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
12:40:25,509 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
12:40:25,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
12:40:25,510 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
12:40:25,510 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
12:40:25,511 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
12:40:25,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
12:40:25,512 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
12:40:25,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
12:40:25,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
12:40:25,514 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
12:40:25,514 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
12:40:25,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
12:40:25,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
12:40:25,515 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
12:40:25,516 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
12:40:25,516 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
12:40:25,517 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
12:40:25,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
12:40:25,517 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
12:40:25,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
12:40:25,518 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
12:40:25,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
12:40:25,519 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
12:40:25,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
12:40:25,520 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
12:40:25,521 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
12:40:25,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
12:40:25,521 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
12:40:25,522 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
12:40:25,522 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
12:40:25,522 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
12:40:25,523 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
12:40:25,523 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
12:40:25,523 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
12:40:25,524 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
12:40:25,525 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
12:40:25,525 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
12:40:25,525 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
12:40:25,525 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
12:40:25,526 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
12:40:25,528 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
12:40:25,528 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
12:40:25,528 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
12:40:25,530 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
12:40:25,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
12:40:25,532 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
12:40:25,532 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
12:40:25,533 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
12:40:25,533 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
12:40:25,533 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
12:40:25,535 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
12:40:25,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
12:40:25,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
12:40:25,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
12:40:25,536 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
12:40:25,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
12:40:25,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
12:40:25,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
12:40:25,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
12:40:25,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
12:40:25,828  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:40:25,855  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:40:26,874  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:24 PDT 2015]; root of context hierarchy
12:40:26,902  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:24 PDT 2015]; root of context hierarchy
12:40:26,972  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:40:24 PDT 2015]; root of context hierarchy
12:40:27,025  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2165 ms
12:40:35,169 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1254d4bb
12:40:35,169  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
12:40:35,191 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
12:40:35,199 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

12:40:35,199 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:40:35,219 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:40:35,233 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:40:35,236 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:40:35,237 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:40:35,238 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:40:35,239 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:40:35,239 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:40:35,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:40:35,240 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:40:35,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:40:35,241 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:40:35,241 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:40:35,241 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:40:35,241 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:40:35,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:40:35,242 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:40:35,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:40:35,244 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:40:35,245 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@40ef0af8
12:40:35,245 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:40:35,246 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
12:40:35,247 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@423a0e1d
12:40:35,247 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.name -> course1_.name
12:40:35,249 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:40:35,249 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( course1_.name course1_.course_id name ) ? ) ) ) )
12:40:35,253 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:40:35,253 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:40:35,254 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:40:35,254 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:40:35,254 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'course1_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@423a0e1d}

12:40:35,255 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:40:35,260 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
12:40:35,260 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:40:35,261 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:40:35,280 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:41:16,192 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:41:16,216 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:41:16,221 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:41:16,234 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:41:33,036 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (course1_.name like ?)
12:42:14,076  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:40:24 PDT 2015]; root of context hierarchy
12:42:14,080  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:42:14,869  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:42:14,916  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:42:14 PDT 2015]; root of context hierarchy
12:42:14,938  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:42:15,123  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:42:15,124  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:42:15,188  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:42:15,234  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:42:15,258  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:42:15,281  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:42:15,331  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:42:15,332  INFO Environment:213 - HHH000206: hibernate.properties not found
12:42:15,333  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:42:15,358  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:42:15,401 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@750da888
12:42:15,401 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@750da888
12:42:15,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@750da888
12:42:15,402 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@b94f5d6
12:42:15,402 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@268b069d
12:42:15,403 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1eeff20d
12:42:15,404 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@60123290
12:42:15,404 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@60123290
12:42:15,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@60123290
12:42:15,404 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2ba4ec80
12:42:15,404 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2ba4ec80
12:42:15,405 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2ba4ec80
12:42:15,405 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7b476fda
12:42:15,406 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7b476fda
12:42:15,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7b476fda
12:42:15,406 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2c048e55
12:42:15,406 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2c048e55
12:42:15,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2c048e55
12:42:15,407 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1590bbb1
12:42:15,407 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1590bbb1
12:42:15,407 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1590bbb1
12:42:15,408 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d30114d
12:42:15,409 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d30114d
12:42:15,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d30114d
12:42:15,410 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51aaba0
12:42:15,410 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51aaba0
12:42:15,410 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51aaba0
12:42:15,411 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18ff6601
12:42:15,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18ff6601
12:42:15,412 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@215f6a6e
12:42:15,412 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@215f6a6e
12:42:15,412 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193aa49
12:42:15,412 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193aa49
12:42:15,413 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2c4ca6fd
12:42:15,413 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2e11e12f
12:42:15,414 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4e3e26e6
12:42:15,414 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4e3e26e6
12:42:15,415 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@786b340d
12:42:15,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@786b340d
12:42:15,416 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7235ed2c
12:42:15,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7235ed2c
12:42:15,417 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@82b6883
12:42:15,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@82b6883
12:42:15,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@82b6883
12:42:15,418 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@64c0f4de
12:42:15,418 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6a88ffea
12:42:15,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6a88ffea
12:42:15,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6a88ffea
12:42:15,419 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1893a293
12:42:15,420 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1291626c
12:42:15,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1291626c
12:42:15,420 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@73a58892
12:42:15,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73a58892
12:42:15,421 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1bc2ddbb
12:42:15,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1bc2ddbb
12:42:15,421 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@37f7e564
12:42:15,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@37f7e564
12:42:15,422 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6dd12aa8
12:42:15,422 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6dd12aa8
12:42:15,422 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@20d0a5b8
12:42:15,423 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7c65d93b
12:42:15,423 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7c65d93b
12:42:15,423 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7c65d93b
12:42:15,424 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19c24f9d
12:42:15,424 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19c24f9d
12:42:15,424 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19c24f9d
12:42:15,424 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@89cad97
12:42:15,425 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@67e6af5a
12:42:15,425 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@67e6af5a
12:42:15,425 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@67e6af5a
12:42:15,426 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7894092f
12:42:15,426 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7894092f
12:42:15,426 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7894092f
12:42:15,426 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4423aae8
12:42:15,427 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7710b46
12:42:15,429 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1603ea34
12:42:15,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1603ea34
12:42:15,429 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1e3996cf
12:42:15,431 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@14d5c786
12:42:15,431 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@14d5c786
12:42:15,433 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@27355e74
12:42:15,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@27355e74
12:42:15,433 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@50d151fa
12:42:15,433 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2de625b3
12:42:15,434 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@766b2f37
12:42:15,435 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2fef8789
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2fef8789
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@475dd9dc
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@145dcd71
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ed5327d
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41f6a8d2
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68cc0a09
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@12806424
12:42:15,436 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2571ead3
12:42:15,437 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51356697
12:42:15,609  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:42:15,628  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:42:16,570  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:42:14 PDT 2015]; root of context hierarchy
12:42:16,596  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:42:14 PDT 2015]; root of context hierarchy
12:42:16,661  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:42:14 PDT 2015]; root of context hierarchy
12:42:16,709  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1839 ms
12:43:30,284 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3821a40b
12:43:30,285  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
12:43:30,307 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias1.name like :param1 )
12:43:30,315 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

12:43:30,315 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:30,330 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:43:30,340 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:43:30,342 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:30,342 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:43:30,343 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:43:30,344 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:43:30,344 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:43:30,345 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:43:30,345 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:43:30,345 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:30,346 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:43:30,346 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:43:30,346 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:43:30,346 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:43:30,346 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:43:30,346 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:43:30,347 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:30,349 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:30,349 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@2c048e55
12:43:30,349 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:43:30,350 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
12:43:30,351 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193aa49
12:43:30,351 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
12:43:30,353 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
12:43:30,353 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@193aa49
12:43:30,353 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.name -> course1_.name
12:43:30,354 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:43:30,354 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ( like ( course1_.name course1_.course_id name ) ? ) ) ) )
12:43:30,357 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:43:30,357 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:43:30,357 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:43:30,357 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:43:30,358 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193aa49}
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'course1_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@193aa49}

12:43:30,358 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:30,364 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias1.name like :param1 )
12:43:30,365 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?) and (course1_.name like ?)
12:43:30,365 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:30,382 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?) and (course1_.name like ?)
12:43:30,411 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:43:30,415 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:43:48,414 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
12:43:48,418 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

12:43:48,418 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:48,418 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:43:48,419 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:43:48,419 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:48,419 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:43:48,420 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:43:48,420 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:43:48,420 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:43:48,421 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:43:48,421 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:43:48,421 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:48,422 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:43:48,422 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:43:48,422 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:43:48,422 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:43:48,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:43:48,423 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:43:48,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:48,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:43:48,423 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@2c048e55
12:43:48,424 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:43:48,424 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
12:43:48,424 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193aa49
12:43:48,424 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
12:43:48,425 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:43:48,425 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
12:43:48,425 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:43:48,425 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:43:48,426 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:43:48,426 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:43:48,426 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193aa49}

12:43:48,426 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:48,427 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
12:43:48,427 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
12:43:48,427 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:43:48,427 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
12:43:48,432 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:43:48,434 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:43:59,875 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
12:43:59,880 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:43:59,881 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:44:04,637 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=400 ) and ( generatedAlias2.lastName like :param0 )
12:44:04,641 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '400'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

12:44:04,641 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:04,642 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:44:04,642 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:44:04,643 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:04,643 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:44:04,643 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:44:04,643 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:44:04,643 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:44:04,644 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:44:04,644 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:44:04,644 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:04,644 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:44:04,644 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:44:04,644 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:44:04,645 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:44:04,645 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:44:04,645 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:44:04,645 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:04,645 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:04,646 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@2c048e55
12:44:04,646 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:44:04,646 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
12:44:04,646 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193aa49
12:44:04,646 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
12:44:04,647 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:44:04,647 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 400 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
12:44:04,647 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:44:04,647 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:44:04,647 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:44:04,647 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:44:04,648 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '400'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193aa49}

12:44:04,648 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:04,648 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=400 ) and ( generatedAlias2.lastName like :param0 )
12:44:04,648 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=400 and (professor2_1_.last_name like ?)
12:44:04,648 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:04,649 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=400 and (professor2_1_.last_name like ?)
12:44:38,744 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 )
12:44:38,746 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'code'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

12:44:38,747 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:38,747 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:44:38,747 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:44:38,747 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:38,747 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:44:38,748 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:44:38,748 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:44:38,748 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:44:38,748 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:44:38,748 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:44:38,748 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:38,749 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:44:38,749 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:44:38,749 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:44:38,749 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:44:38,749 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:44:38,749 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:44:38,750 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:38,750 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
12:44:38,750 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193aa49
12:44:38,750 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
12:44:38,750 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:44:38,751 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@2c048e55
12:44:38,751 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:44:38,751 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:44:38,751 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( course1_.code course1_.course_id code ) ? ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ) )
12:44:38,751 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:44:38,751 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:44:38,752 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:44:38,752 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:44:38,752 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193aa49}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

12:44:38,752 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:38,752 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 )
12:44:38,753 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0
12:44:38,753 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:44:38,753 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0
12:44:44,073 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0
12:44:44,078 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:44:44,079 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:44:44,081 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:45:00,265 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param1 )
12:45:00,268 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  \-[IDENT] Node: 'code'
          |  |  \-[COLON] Node: ':'
          |  |     \-[IDENT] Node: 'param0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

12:45:00,268 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:45:00,268 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
12:45:00,269 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
12:45:00,269 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:45:00,269 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
12:45:00,269 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
12:45:00,269 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
12:45:00,270 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
12:45:00,270 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
12:45:00,270 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

12:45:00,270 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:45:00,270 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
12:45:00,271 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
12:45:00,271 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
12:45:00,271 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
12:45:00,271 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
12:45:00,271 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

12:45:00,271 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:45:00,272 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
12:45:00,272 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193aa49
12:45:00,272 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
12:45:00,272 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
12:45:00,272 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@2c048e55
12:45:00,272 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
12:45:00,273 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
12:45:00,273 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193aa49
12:45:00,273 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
12:45:00,273 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
12:45:00,273 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( course1_.code course1_.course_id code ) ? ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
12:45:00,274 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
12:45:00,274 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
12:45:00,274 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
12:45:00,274 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
12:45:00,274 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193aa49}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@193aa49}

12:45:00,275 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:45:00,275 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param1 )
12:45:00,275 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and (professor2_1_.last_name like ?)
12:45:00,275 DEBUG ErrorCounter:95 - throwQueryException() : no errors
12:45:00,276 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and (professor2_1_.last_name like ?)
12:45:00,280 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
12:45:00,281 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
12:46:09,690  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:42:14 PDT 2015]; root of context hierarchy
12:46:09,694  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:46:10,345  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:46:10,388  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:46:10 PDT 2015]; root of context hierarchy
12:46:10,408  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:46:10,594  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:46:10,594  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:46:10,659  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:46:10,700  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:46:10,722  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:46:10,738  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:46:10,784  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:46:10,785  INFO Environment:213 - HHH000206: hibernate.properties not found
12:46:10,787  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:46:10,813  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:46:10,855 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@79b5b595
12:46:10,856 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@79b5b595
12:46:10,856 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@79b5b595
12:46:10,856 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23271169
12:46:10,857 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71660a01
12:46:10,857 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ebcd456
12:46:10,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5b91d2f2
12:46:10,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5b91d2f2
12:46:10,858 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b91d2f2
12:46:10,858 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@27ec17af
12:46:10,859 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@27ec17af
12:46:10,859 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@27ec17af
12:46:10,860 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bf72c1b
12:46:10,860 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bf72c1b
12:46:10,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf72c1b
12:46:10,860 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1f80c67c
12:46:10,861 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1f80c67c
12:46:10,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f80c67c
12:46:10,861 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f3c06f7
12:46:10,861 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3f3c06f7
12:46:10,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3f3c06f7
12:46:10,862 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3fdbbca1
12:46:10,862 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3fdbbca1
12:46:10,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fdbbca1
12:46:10,863 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6144abcc
12:46:10,863 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6144abcc
12:46:10,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6144abcc
12:46:10,864 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@366428dd
12:46:10,864 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@366428dd
12:46:10,865 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68657778
12:46:10,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68657778
12:46:10,865 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2b1b13fd
12:46:10,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2b1b13fd
12:46:10,866 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@73831be7
12:46:10,866 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@13a18eb9
12:46:10,867 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3094e2a4
12:46:10,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3094e2a4
12:46:10,868 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2abcd662
12:46:10,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2abcd662
12:46:10,869 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1c72373a
12:46:10,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1c72373a
12:46:10,870 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1bd95549
12:46:10,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1bd95549
12:46:10,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1bd95549
12:46:10,871 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@782c5d89
12:46:10,872 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1a2f8003
12:46:10,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a2f8003
12:46:10,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a2f8003
12:46:10,873 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d5be5d4
12:46:10,873 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@12f7c20e
12:46:10,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12f7c20e
12:46:10,874 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@75c2f905
12:46:10,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75c2f905
12:46:10,875 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dcd0e92
12:46:10,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dcd0e92
12:46:10,875 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@704388d0
12:46:10,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@704388d0
12:46:10,876 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbae1df
12:46:10,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbae1df
12:46:10,877 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25c0df24
12:46:10,878 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1599d13
12:46:10,878 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1599d13
12:46:10,878 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1599d13
12:46:10,878 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45b6e15f
12:46:10,878 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45b6e15f
12:46:10,879 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45b6e15f
12:46:10,879 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2e2e813f
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5c75754a
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c75754a
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5c75754a
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@49ce845c
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@49ce845c
12:46:10,880 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@49ce845c
12:46:10,881 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1ab4ad09
12:46:10,881 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@536cf724
12:46:10,883 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d05d298
12:46:10,883 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d05d298
12:46:10,884 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b2e9458
12:46:10,886 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5e93f8e6
12:46:10,886 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e93f8e6
12:46:10,887 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5b62fa8f
12:46:10,888 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5b62fa8f
12:46:10,888 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58a0d432
12:46:10,888 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72b53579
12:46:10,889 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ad3dd78
12:46:10,890 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@dadf8b3
12:46:10,890 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@dadf8b3
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@557492a5
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37fe90d8
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@670a9a79
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@382a3d21
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@493a713b
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a015094
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@396bdaff
12:46:10,891 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50413bc6
12:46:11,067  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:46:11,088  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:46:11,968  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:46:10 PDT 2015]; root of context hierarchy
12:46:11,992  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:46:10 PDT 2015]; root of context hierarchy
12:46:12,045  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:46:10 PDT 2015]; root of context hierarchy
12:46:12,089  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1742 ms
12:47:55,018  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:46:10 PDT 2015]; root of context hierarchy
12:47:55,024  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:47:55,825  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:47:55,864  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:47:55 PDT 2015]; root of context hierarchy
12:47:55,884  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:47:56,061  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:47:56,062  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:47:56,123  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:47:56,164  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:47:56,185  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:47:56,201  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:47:56,248  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:47:56,249  INFO Environment:213 - HHH000206: hibernate.properties not found
12:47:56,250  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:47:56,274  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:47:56,312 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@349611b1
12:47:56,313 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@349611b1
12:47:56,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@349611b1
12:47:56,313 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@594bbbb8
12:47:56,314 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@316bb8d2
12:47:56,314 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6792dd43
12:47:56,315 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f8a0453
12:47:56,315 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f8a0453
12:47:56,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f8a0453
12:47:56,316 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@79757413
12:47:56,316 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@79757413
12:47:56,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@79757413
12:47:56,317 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7cc2a8b8
12:47:56,317 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7cc2a8b8
12:47:56,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7cc2a8b8
12:47:56,317 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@29b4a2ef
12:47:56,317 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@29b4a2ef
12:47:56,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29b4a2ef
12:47:56,318 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68a78730
12:47:56,318 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68a78730
12:47:56,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68a78730
12:47:56,319 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@695495a
12:47:56,319 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@695495a
12:47:56,319 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@695495a
12:47:56,320 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@681c5078
12:47:56,320 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@681c5078
12:47:56,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@681c5078
12:47:56,321 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25419d98
12:47:56,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25419d98
12:47:56,322 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@451558ba
12:47:56,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@451558ba
12:47:56,322 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@16c77aa5
12:47:56,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@16c77aa5
12:47:56,323 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@932edfa
12:47:56,323 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c4b99f8
12:47:56,324 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3eb7a79
12:47:56,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3eb7a79
12:47:56,325 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3e1ebb64
12:47:56,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e1ebb64
12:47:56,326 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@45b9dc2e
12:47:56,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45b9dc2e
12:47:56,327 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d6959c
12:47:56,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d6959c
12:47:56,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d6959c
12:47:56,328 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a780f10
12:47:56,329 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5c37f59b
12:47:56,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c37f59b
12:47:56,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c37f59b
12:47:56,329 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71454353
12:47:56,330 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@28157424
12:47:56,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28157424
12:47:56,330 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1f4195a1
12:47:56,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1f4195a1
12:47:56,331 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7568f407
12:47:56,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7568f407
12:47:56,332 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@60025bcc
12:47:56,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@60025bcc
12:47:56,332 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40810c8d
12:47:56,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40810c8d
12:47:56,333 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@222001de
12:47:56,333 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6af1891
12:47:56,333 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6af1891
12:47:56,334 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6af1891
12:47:56,334 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d2e3aa5
12:47:56,334 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d2e3aa5
12:47:56,334 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d2e3aa5
12:47:56,335 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@45c3a087
12:47:56,335 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4982088
12:47:56,335 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4982088
12:47:56,335 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4982088
12:47:56,336 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@113469f2
12:47:56,336 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@113469f2
12:47:56,336 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@113469f2
12:47:56,336 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5fe29bf3
12:47:56,337 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4f3bb70e
12:47:56,339 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@55ff6a31
12:47:56,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@55ff6a31
12:47:56,339 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e7cc80f
12:47:56,341 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1cfd6e0a
12:47:56,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1cfd6e0a
12:47:56,343 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@21c52dd1
12:47:56,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21c52dd1
12:47:56,343 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b6d7993
12:47:56,343 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41b25346
12:47:56,344 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2d9fa3ed
12:47:56,345 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@29005221
12:47:56,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29005221
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@210aa184
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a306ede
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7865d351
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20e64ab3
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5494c9aa
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ddb1b78
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@bf2b4c9
12:47:56,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1953c4d6
12:47:56,510  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:47:56,530  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:47:57,430  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:47:55 PDT 2015]; root of context hierarchy
12:47:57,452  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:47:55 PDT 2015]; root of context hierarchy
12:47:57,504  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:47:55 PDT 2015]; root of context hierarchy
12:47:57,545  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1719 ms
12:49:20,484  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:47:55 PDT 2015]; root of context hierarchy
12:49:20,493  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:49:22,092  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:49:22,136  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:49:22 PDT 2015]; root of context hierarchy
12:49:22,158  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:49:22,347  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:49:22,348  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:49:22,411  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:49:22,451  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:49:22,471  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:49:22,488  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:49:22,531  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:49:22,533  INFO Environment:213 - HHH000206: hibernate.properties not found
12:49:22,534  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:49:22,559  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:49:22,597 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@44c8e55b
12:49:22,597 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@44c8e55b
12:49:22,597 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44c8e55b
12:49:22,597 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ce2d365
12:49:22,598 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42741c0
12:49:22,598 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@48123096
12:49:22,599 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a5e5b6d
12:49:22,599 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a5e5b6d
12:49:22,599 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3a5e5b6d
12:49:22,600 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@16ab0382
12:49:22,600 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@16ab0382
12:49:22,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16ab0382
12:49:22,601 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7d7bf108
12:49:22,601 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7d7bf108
12:49:22,601 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d7bf108
12:49:22,601 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6e0d56bf
12:49:22,601 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6e0d56bf
12:49:22,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6e0d56bf
12:49:22,602 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@10d9e71c
12:49:22,602 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@10d9e71c
12:49:22,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@10d9e71c
12:49:22,603 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7f0f3d39
12:49:22,603 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7f0f3d39
12:49:22,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f0f3d39
12:49:22,604 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e9bbd39
12:49:22,604 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e9bbd39
12:49:22,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e9bbd39
12:49:22,605 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@419ced47
12:49:22,605 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@419ced47
12:49:22,606 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1dcc8aa7
12:49:22,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1dcc8aa7
12:49:22,606 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@29789fd2
12:49:22,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@29789fd2
12:49:22,607 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13301aef
12:49:22,607 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@49b31c63
12:49:22,608 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@b6211
12:49:22,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@b6211
12:49:22,609 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@18f7779b
12:49:22,609 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@18f7779b
12:49:22,610 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7485fa10
12:49:22,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7485fa10
12:49:22,611 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dcbf09f
12:49:22,611 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dcbf09f
12:49:22,611 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dcbf09f
12:49:22,612 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f1a6a98
12:49:22,612 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4260074d
12:49:22,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4260074d
12:49:22,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4260074d
12:49:22,613 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3478725c
12:49:22,613 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@5576a3ce
12:49:22,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5576a3ce
12:49:22,614 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7fc8596f
12:49:22,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fc8596f
12:49:22,614 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@784729e
12:49:22,615 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@784729e
12:49:22,615 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@71391cc
12:49:22,615 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@71391cc
12:49:22,616 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ee15559
12:49:22,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ee15559
12:49:22,616 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@46cee6f6
12:49:22,617 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4f101585
12:49:22,617 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f101585
12:49:22,617 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4f101585
12:49:22,618 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@12e875dd
12:49:22,618 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@12e875dd
12:49:22,618 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@12e875dd
12:49:22,618 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7dbfc14d
12:49:22,619 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5ab3af8c
12:49:22,619 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5ab3af8c
12:49:22,619 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5ab3af8c
12:49:22,620 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@39cc6559
12:49:22,620 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@39cc6559
12:49:22,620 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@39cc6559
12:49:22,620 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@836dd83
12:49:22,620 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@270df589
12:49:22,623 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@32902c83
12:49:22,623 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@32902c83
12:49:22,623 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e81e026
12:49:22,625 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4aac46db
12:49:22,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4aac46db
12:49:22,627 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@78b7d928
12:49:22,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@78b7d928
12:49:22,627 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21c135f3
12:49:22,627 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53ade678
12:49:22,628 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5ad71c9b
12:49:22,629 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9fd378b
12:49:22,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9fd378b
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3840cc6b
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5861e587
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1002cf85
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@14f98e58
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ae42b38
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7dfeae3e
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b0628e3
12:49:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@23d5e295
12:49:22,805  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:49:22,825  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:49:23,717  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:49:22 PDT 2015]; root of context hierarchy
12:49:23,739  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:49:22 PDT 2015]; root of context hierarchy
12:49:23,793  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:49:22 PDT 2015]; root of context hierarchy
12:49:23,837  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1743 ms
12:55:55,999  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:49:22 PDT 2015]; root of context hierarchy
12:55:56,007  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:56:01,354  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:56:01,403  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:56:01 PDT 2015]; root of context hierarchy
12:56:01,425  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:56:01,691  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:56:01,692  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:56:01,756  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:56:01,803  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:56:01,828  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:56:01,845  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:56:01,892  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:56:01,893  INFO Environment:213 - HHH000206: hibernate.properties not found
12:56:01,894  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:56:01,921  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:56:01,995 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
12:56:01,995 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
12:56:01,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
12:56:01,997 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
12:56:01,998 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
12:56:01,999 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
12:56:02,000 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
12:56:02,000 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
12:56:02,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
12:56:02,001 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
12:56:02,001 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
12:56:02,001 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
12:56:02,002 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
12:56:02,002 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
12:56:02,002 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
12:56:02,003 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
12:56:02,003 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
12:56:02,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
12:56:02,004 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
12:56:02,004 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
12:56:02,005 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
12:56:02,005 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
12:56:02,006 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
12:56:02,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
12:56:02,007 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
12:56:02,007 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
12:56:02,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
12:56:02,009 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
12:56:02,009 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
12:56:02,009 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
12:56:02,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
12:56:02,010 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
12:56:02,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
12:56:02,011 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
12:56:02,011 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
12:56:02,012 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
12:56:02,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
12:56:02,013 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
12:56:02,014 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
12:56:02,015 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
12:56:02,015 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
12:56:02,016 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
12:56:02,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
12:56:02,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
12:56:02,017 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
12:56:02,018 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
12:56:02,018 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
12:56:02,018 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
12:56:02,019 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
12:56:02,019 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
12:56:02,020 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
12:56:02,020 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
12:56:02,020 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
12:56:02,021 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
12:56:02,021 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
12:56:02,022 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
12:56:02,022 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
12:56:02,023 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
12:56:02,023 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
12:56:02,023 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
12:56:02,024 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
12:56:02,024 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
12:56:02,024 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
12:56:02,025 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
12:56:02,025 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
12:56:02,025 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
12:56:02,026 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
12:56:02,027 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
12:56:02,027 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
12:56:02,027 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
12:56:02,028 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
12:56:02,028 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
12:56:02,028 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
12:56:02,029 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
12:56:02,029 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
12:56:02,031 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
12:56:02,031 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
12:56:02,032 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
12:56:02,034 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
12:56:02,034 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
12:56:02,036 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
12:56:02,036 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
12:56:02,037 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
12:56:02,037 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
12:56:02,038 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
12:56:02,040 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
12:56:02,040 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
12:56:02,040 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
12:56:02,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
12:56:02,296  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:56:02,319  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:56:03,299  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:56:01 PDT 2015]; root of context hierarchy
12:56:03,322  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:56:01 PDT 2015]; root of context hierarchy
12:56:03,391  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:56:01 PDT 2015]; root of context hierarchy
12:56:03,441  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2085 ms
12:59:23,544  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:56:01 PDT 2015]; root of context hierarchy
12:59:23,554  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
12:59:24,388  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
12:59:24,437  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 12:59:24 PDT 2015]; root of context hierarchy
12:59:24,460  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
12:59:24,667  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
12:59:24,667  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
12:59:24,735  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
12:59:24,781  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
12:59:24,811  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
12:59:24,839  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:59:25,254  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:59:25,256  INFO Environment:213 - HHH000206: hibernate.properties not found
12:59:25,257  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:59:25,293  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:59:25,334 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3d2a6626
12:59:25,334 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3d2a6626
12:59:25,334 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3d2a6626
12:59:25,335 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7379ab89
12:59:25,336 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b82df66
12:59:25,336 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@79dcaac2
12:59:25,337 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@15acf1e7
12:59:25,337 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@15acf1e7
12:59:25,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15acf1e7
12:59:25,338 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5c9a2a9b
12:59:25,338 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5c9a2a9b
12:59:25,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c9a2a9b
12:59:25,339 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4f8f00e7
12:59:25,339 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4f8f00e7
12:59:25,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4f8f00e7
12:59:25,340 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2aade07e
12:59:25,340 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2aade07e
12:59:25,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2aade07e
12:59:25,341 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5bb43d79
12:59:25,341 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5bb43d79
12:59:25,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5bb43d79
12:59:25,342 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e675935
12:59:25,342 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@e675935
12:59:25,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@e675935
12:59:25,343 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@303ea45
12:59:25,343 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@303ea45
12:59:25,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@303ea45
12:59:25,344 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@bc957f7
12:59:25,344 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@bc957f7
12:59:25,344 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e3ac5e5
12:59:25,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e3ac5e5
12:59:25,345 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1e003dcf
12:59:25,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e003dcf
12:59:25,346 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7944af2
12:59:25,346 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@12d2e53e
12:59:25,347 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5826971e
12:59:25,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5826971e
12:59:25,348 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4f0ba96
12:59:25,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f0ba96
12:59:25,349 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7610c912
12:59:25,349 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7610c912
12:59:25,350 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5f3987b1
12:59:25,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5f3987b1
12:59:25,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5f3987b1
12:59:25,351 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6ecb9f0c
12:59:25,352 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@3fd3db2c
12:59:25,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3fd3db2c
12:59:25,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3fd3db2c
12:59:25,352 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3cf3895d
12:59:25,353 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2bb0f46e
12:59:25,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2bb0f46e
12:59:25,353 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f62a4e7
12:59:25,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f62a4e7
12:59:25,354 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@25ff1112
12:59:25,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@25ff1112
12:59:25,354 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8540c35
12:59:25,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8540c35
12:59:25,355 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d93a77e
12:59:25,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d93a77e
12:59:25,356 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2266a253
12:59:25,356 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@399201ac
12:59:25,356 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@399201ac
12:59:25,356 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@399201ac
12:59:25,357 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3dc4fafb
12:59:25,357 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3dc4fafb
12:59:25,357 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3dc4fafb
12:59:25,358 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6902ebc1
12:59:25,358 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4818cc3a
12:59:25,358 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4818cc3a
12:59:25,358 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4818cc3a
12:59:25,359 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38d2c9b3
12:59:25,359 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38d2c9b3
12:59:25,359 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38d2c9b3
12:59:25,359 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5b64a6e5
12:59:25,360 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5473588b
12:59:25,362 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1b2d8fb0
12:59:25,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1b2d8fb0
12:59:25,363 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6a58bff8
12:59:25,365 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7fa55da5
12:59:25,365 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7fa55da5
12:59:25,366 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@39b0bba3
12:59:25,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39b0bba3
12:59:25,366 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a8f7af6
12:59:25,367 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@35da8a15
12:59:25,367 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7dbedba5
12:59:25,369 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@617cfc07
12:59:25,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@617cfc07
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11b643c3
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@172c0936
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59cd2611
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53f77924
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@707c80c2
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ee5242
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37a31100
12:59:25,370 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5f757089
12:59:25,548  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:59:25,568  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
12:59:26,432  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:59:24 PDT 2015]; root of context hierarchy
12:59:26,451  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:59:24 PDT 2015]; root of context hierarchy
12:59:26,502  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 12:59:24 PDT 2015]; root of context hierarchy
12:59:26,547  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2158 ms
13:00:13,511  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 12:59:24 PDT 2015]; root of context hierarchy
13:00:13,519  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:00:14,180  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:00:14,221  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:00:14 PDT 2015]; root of context hierarchy
13:00:14,241  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:00:14,435  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:00:14,436  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:00:14,499  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:00:14,541  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:00:14,562  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:00:14,579  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:00:14,627  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:00:14,628  INFO Environment:213 - HHH000206: hibernate.properties not found
13:00:14,629  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:00:14,657  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:00:14,695 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f7e20f6
13:00:14,696 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f7e20f6
13:00:14,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f7e20f6
13:00:14,697 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e149903
13:00:14,697 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35dcef31
13:00:14,698 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@71e5f7f1
13:00:14,698 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65d13c0d
13:00:14,698 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65d13c0d
13:00:14,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65d13c0d
13:00:14,699 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7dea68b8
13:00:14,699 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7dea68b8
13:00:14,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7dea68b8
13:00:14,700 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@562c14f0
13:00:14,700 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@562c14f0
13:00:14,700 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@562c14f0
13:00:14,701 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7eaaecf7
13:00:14,701 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7eaaecf7
13:00:14,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7eaaecf7
13:00:14,702 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4ad3ece9
13:00:14,702 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4ad3ece9
13:00:14,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4ad3ece9
13:00:14,703 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7c16fb73
13:00:14,703 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7c16fb73
13:00:14,703 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c16fb73
13:00:14,704 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41752b85
13:00:14,704 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41752b85
13:00:14,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41752b85
13:00:14,705 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e0f2e58
13:00:14,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e0f2e58
13:00:14,706 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1070f5d8
13:00:14,706 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1070f5d8
13:00:14,707 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@112a1839
13:00:14,707 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@112a1839
13:00:14,707 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2be66785
13:00:14,707 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@c053b64
13:00:14,708 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1e1f14c5
13:00:14,708 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e1f14c5
13:00:14,709 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@269e4ed7
13:00:14,709 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@269e4ed7
13:00:14,710 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3cd3840d
13:00:14,710 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3cd3840d
13:00:14,711 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@420213d2
13:00:14,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@420213d2
13:00:14,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@420213d2
13:00:14,712 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@52673362
13:00:14,713 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5f593368
13:00:14,713 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f593368
13:00:14,713 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f593368
13:00:14,713 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68a6ec97
13:00:14,714 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4fd4445d
13:00:14,714 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fd4445d
13:00:14,714 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4651d6ef
13:00:14,714 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4651d6ef
13:00:14,715 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7873955a
13:00:14,715 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7873955a
13:00:14,715 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@28313bd3
13:00:14,715 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28313bd3
13:00:14,716 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@9d23ddc
13:00:14,716 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@9d23ddc
13:00:14,716 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c35f5ea
13:00:14,717 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@432b3ac3
13:00:14,717 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@432b3ac3
13:00:14,717 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@432b3ac3
13:00:14,718 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6db7e3b6
13:00:14,718 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6db7e3b6
13:00:14,718 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6db7e3b6
13:00:14,718 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@126a9704
13:00:14,719 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5fac7b46
13:00:14,719 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5fac7b46
13:00:14,719 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5fac7b46
13:00:14,720 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b14ee68
13:00:14,720 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b14ee68
13:00:14,720 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b14ee68
13:00:14,720 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@728d7b38
13:00:14,720 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@49f76800
13:00:14,722 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4bbd8225
13:00:14,723 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4bbd8225
13:00:14,723 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73f33260
13:00:14,724 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77bf3da4
13:00:14,725 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77bf3da4
13:00:14,726 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@259addfc
13:00:14,726 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@259addfc
13:00:14,726 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6cce3ff2
13:00:14,726 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e517232
13:00:14,727 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7ad02087
13:00:14,729 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@15fe1b56
13:00:14,729 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@15fe1b56
13:00:14,729 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a28766c
13:00:14,729 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3fe9f2d4
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f8d859d
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2fd60d79
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@365495f9
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@46dbaeb5
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65596a9e
13:00:14,730 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7afb1e89
13:00:14,908  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:00:14,933  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:00:16,051  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:00:14 PDT 2015]; root of context hierarchy
13:00:16,071  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:00:14 PDT 2015]; root of context hierarchy
13:00:16,124  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:00:14 PDT 2015]; root of context hierarchy
13:00:16,166  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1985 ms
13:04:46,223  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:00:14 PDT 2015]; root of context hierarchy
13:04:46,230  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:04:46,862  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:04:46,904  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:04:46 PDT 2015]; root of context hierarchy
13:04:46,925  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:04:47,147  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:04:47,147  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:04:47,239  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:04:47,294  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:04:47,318  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:04:47,334  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:04:47,380  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:04:47,381  INFO Environment:213 - HHH000206: hibernate.properties not found
13:04:47,382  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:04:47,409  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:04:47,447 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e6abda1
13:04:47,448 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2e6abda1
13:04:47,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2e6abda1
13:04:47,448 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5bb474b2
13:04:47,449 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@65c9c3f
13:04:47,449 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@67992ac
13:04:47,450 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@135f201c
13:04:47,450 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@135f201c
13:04:47,450 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@135f201c
13:04:47,451 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1c43595d
13:04:47,451 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1c43595d
13:04:47,451 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c43595d
13:04:47,451 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@43a80204
13:04:47,452 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@43a80204
13:04:47,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@43a80204
13:04:47,452 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@37fca8cd
13:04:47,452 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@37fca8cd
13:04:47,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@37fca8cd
13:04:47,453 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c3a79ac
13:04:47,453 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c3a79ac
13:04:47,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c3a79ac
13:04:47,454 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9fa5eb0
13:04:47,454 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9fa5eb0
13:04:47,454 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9fa5eb0
13:04:47,455 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f5fa8c7
13:04:47,455 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f5fa8c7
13:04:47,455 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f5fa8c7
13:04:47,456 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ca5454d
13:04:47,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ca5454d
13:04:47,456 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@c9d7687
13:04:47,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@c9d7687
13:04:47,457 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@291f4e03
13:04:47,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@291f4e03
13:04:47,458 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c570767
13:04:47,458 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18d4327a
13:04:47,458 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@48e7a2b0
13:04:47,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48e7a2b0
13:04:47,460 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@16614cf
13:04:47,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@16614cf
13:04:47,460 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@725f443a
13:04:47,461 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@725f443a
13:04:47,461 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d120fcd
13:04:47,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d120fcd
13:04:47,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d120fcd
13:04:47,462 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16da2392
13:04:47,463 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@39f473ab
13:04:47,463 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@39f473ab
13:04:47,463 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@39f473ab
13:04:47,464 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1f6019d8
13:04:47,464 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6da946f1
13:04:47,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6da946f1
13:04:47,465 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@f54ce31
13:04:47,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f54ce31
13:04:47,465 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@66cfd65a
13:04:47,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66cfd65a
13:04:47,466 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@245188da
13:04:47,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@245188da
13:04:47,467 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4e78def5
13:04:47,467 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4e78def5
13:04:47,467 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@bc4d08c
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7cb30457
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7cb30457
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7cb30457
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@15573127
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@15573127
13:04:47,468 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@15573127
13:04:47,469 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2ece0d29
13:04:47,469 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5c35243e
13:04:47,470 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c35243e
13:04:47,470 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5c35243e
13:04:47,470 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5716c706
13:04:47,470 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5716c706
13:04:47,470 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5716c706
13:04:47,471 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3b071d40
13:04:47,471 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4215c2c1
13:04:47,473 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@221653bf
13:04:47,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@221653bf
13:04:47,474 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@22f40e4a
13:04:47,475 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7085e53a
13:04:47,476 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7085e53a
13:04:47,477 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3a39227a
13:04:47,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3a39227a
13:04:47,478 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ae0efb6
13:04:47,478 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@140a89b1
13:04:47,478 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7e4c046c
13:04:47,480 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6fc7597b
13:04:47,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6fc7597b
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c48f4ac
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79116cdf
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37b27c71
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@127794d2
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7971efa4
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b7413c1
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2f01a72a
13:04:47,481 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@17e671c
13:04:47,661  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:04:47,680  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:04:48,549  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:04:46 PDT 2015]; root of context hierarchy
13:04:48,573  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:04:46 PDT 2015]; root of context hierarchy
13:04:48,629  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:04:46 PDT 2015]; root of context hierarchy
13:04:48,671  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1808 ms
13:05:04,202  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:04:46 PDT 2015]; root of context hierarchy
13:05:04,212  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:05:09,368  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:05:09,421  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:05:09 PDT 2015]; root of context hierarchy
13:05:09,444  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:05:09,698  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:05:09,698  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:05:09,761  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:05:09,809  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:05:09,836  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:05:09,853  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:05:09,901  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:05:09,902  INFO Environment:213 - HHH000206: hibernate.properties not found
13:05:09,903  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:05:09,929  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:05:10,000 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:05:10,000 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:05:10,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
13:05:10,001 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
13:05:10,002 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
13:05:10,002 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
13:05:10,003 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:05:10,003 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:05:10,004 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
13:05:10,004 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
13:05:10,004 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
13:05:10,005 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
13:05:10,005 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:05:10,006 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:05:10,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
13:05:10,006 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
13:05:10,007 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
13:05:10,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
13:05:10,008 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:05:10,008 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:05:10,008 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
13:05:10,009 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:05:10,009 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:05:10,009 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
13:05:10,010 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:05:10,010 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:05:10,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
13:05:10,011 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:05:10,011 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:05:10,012 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
13:05:10,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
13:05:10,013 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
13:05:10,013 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
13:05:10,013 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
13:05:10,014 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
13:05:10,015 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
13:05:10,015 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
13:05:10,016 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
13:05:10,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
13:05:10,017 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
13:05:10,017 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
13:05:10,018 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:05:10,019 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:05:10,019 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
13:05:10,020 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
13:05:10,021 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
13:05:10,021 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
13:05:10,021 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
13:05:10,021 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
13:05:10,022 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
13:05:10,022 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
13:05:10,023 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
13:05:10,023 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
13:05:10,024 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
13:05:10,024 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
13:05:10,024 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
13:05:10,025 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
13:05:10,025 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
13:05:10,026 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
13:05:10,026 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
13:05:10,027 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
13:05:10,027 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
13:05:10,027 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
13:05:10,028 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
13:05:10,028 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
13:05:10,028 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
13:05:10,029 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
13:05:10,030 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
13:05:10,030 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
13:05:10,030 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
13:05:10,030 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
13:05:10,031 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
13:05:10,031 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
13:05:10,031 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
13:05:10,032 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
13:05:10,035 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
13:05:10,036 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
13:05:10,036 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
13:05:10,038 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
13:05:10,038 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
13:05:10,040 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
13:05:10,040 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
13:05:10,041 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
13:05:10,041 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
13:05:10,042 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
13:05:10,043 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
13:05:10,043 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
13:05:10,044 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
13:05:10,044 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
13:05:10,044 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
13:05:10,044 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
13:05:10,044 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
13:05:10,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
13:05:10,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
13:05:10,045 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
13:05:10,309  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:05:10,332  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:05:11,317  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:05:09 PDT 2015]; root of context hierarchy
13:05:11,342  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:05:09 PDT 2015]; root of context hierarchy
13:05:11,414  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:05:09 PDT 2015]; root of context hierarchy
13:05:11,466  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2096 ms
13:12:30,550  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:05:09 PDT 2015]; root of context hierarchy
13:12:30,558  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:12:31,423  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:12:31,465  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:12:31 PDT 2015]; root of context hierarchy
13:12:31,486  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:12:31,680  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:12:31,681  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:12:31,744  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:12:31,787  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:12:31,807  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:12:32,048  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:12:32,105  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:12:32,107  INFO Environment:213 - HHH000206: hibernate.properties not found
13:12:32,108  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:12:32,133  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:12:32,173 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e5b32a
13:12:32,173 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1e5b32a
13:12:32,173 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1e5b32a
13:12:32,174 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6dabd599
13:12:32,174 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@43fd3e7
13:12:32,175 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@95ccc7c
13:12:32,175 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@62d4838
13:12:32,176 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@62d4838
13:12:32,176 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@62d4838
13:12:32,177 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@29b65a36
13:12:32,177 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@29b65a36
13:12:32,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@29b65a36
13:12:32,178 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5871a7e9
13:12:32,178 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5871a7e9
13:12:32,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5871a7e9
13:12:32,179 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@aa18244
13:12:32,179 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@aa18244
13:12:32,179 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@aa18244
13:12:32,180 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b49d442
13:12:32,180 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@b49d442
13:12:32,181 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@b49d442
13:12:32,181 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d7ce66a
13:12:32,182 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@d7ce66a
13:12:32,182 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@d7ce66a
13:12:32,182 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6eed487
13:12:32,183 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6eed487
13:12:32,183 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6eed487
13:12:32,183 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9c781cc
13:12:32,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9c781cc
13:12:32,184 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@517bca4c
13:12:32,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@517bca4c
13:12:32,185 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@369c805c
13:12:32,185 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@369c805c
13:12:32,185 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10bd87b1
13:12:32,186 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@205ba4d3
13:12:32,187 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@638e839b
13:12:32,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@638e839b
13:12:32,188 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@ac03f84
13:12:32,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@ac03f84
13:12:32,189 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2724e956
13:12:32,189 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2724e956
13:12:32,190 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15a7e02
13:12:32,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15a7e02
13:12:32,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15a7e02
13:12:32,191 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7021c7d2
13:12:32,192 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@60050a4f
13:12:32,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@60050a4f
13:12:32,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@60050a4f
13:12:32,192 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4c06f7d0
13:12:32,193 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@753c2a3b
13:12:32,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@753c2a3b
13:12:32,193 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@cccf8f6
13:12:32,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@cccf8f6
13:12:32,194 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@569fce19
13:12:32,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@569fce19
13:12:32,195 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3ccd0e40
13:12:32,195 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3ccd0e40
13:12:32,195 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@66494b43
13:12:32,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@66494b43
13:12:32,196 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22f2b45c
13:12:32,196 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1f9a57cc
13:12:32,197 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1f9a57cc
13:12:32,197 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1f9a57cc
13:12:32,197 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3353b422
13:12:32,197 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3353b422
13:12:32,197 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3353b422
13:12:32,198 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@398dcfae
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6f95ebff
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6f95ebff
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6f95ebff
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@780a7e0a
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@780a7e0a
13:12:32,199 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@780a7e0a
13:12:32,200 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@31a2f3d0
13:12:32,200 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@bf45818
13:12:32,202 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@36501445
13:12:32,202 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36501445
13:12:32,203 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53ef3a0a
13:12:32,205 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77c55f2d
13:12:32,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77c55f2d
13:12:32,206 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2c0d30ca
13:12:32,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2c0d30ca
13:12:32,207 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3353f54
13:12:32,207 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@fbbfe0c
13:12:32,207 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5d4a2ce5
13:12:32,210 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@528b3ba1
13:12:32,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@528b3ba1
13:12:32,210 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7320e2d2
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@787d8924
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b49cc00
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@113514ec
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6577526a
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@71d7c349
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@444b38bf
13:12:32,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d60d6ae
13:12:32,377  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:12:32,395  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:12:33,232  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:31 PDT 2015]; root of context hierarchy
13:12:33,253  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:31 PDT 2015]; root of context hierarchy
13:12:33,305  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:31 PDT 2015]; root of context hierarchy
13:12:33,352  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1928 ms
13:36:36,269  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:12:31 PDT 2015]; root of context hierarchy
13:36:36,275  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:36:37,046  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:36:37,089  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:36:37 PDT 2015]; root of context hierarchy
13:36:37,110  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:36:37,500  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:36:37,500  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:36:37,574  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:36:37,618  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:36:37,640  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:36:37,656  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:36:37,707  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:36:37,708  INFO Environment:213 - HHH000206: hibernate.properties not found
13:36:37,709  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:36:37,736  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:36:37,777 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@bac09a2
13:36:37,777 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@bac09a2
13:36:37,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@bac09a2
13:36:37,778 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@40cfe817
13:36:37,778 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@349ce727
13:36:37,779 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2cc2644e
13:36:37,779 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@30cb01f2
13:36:37,779 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@30cb01f2
13:36:37,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@30cb01f2
13:36:37,780 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5c4a03d0
13:36:37,780 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5c4a03d0
13:36:37,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c4a03d0
13:36:37,781 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@336e9de9
13:36:37,781 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@336e9de9
13:36:37,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@336e9de9
13:36:37,782 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@782dd97f
13:36:37,782 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@782dd97f
13:36:37,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@782dd97f
13:36:37,783 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5b37799d
13:36:37,783 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5b37799d
13:36:37,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b37799d
13:36:37,784 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@56dc1d16
13:36:37,784 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@56dc1d16
13:36:37,784 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56dc1d16
13:36:37,785 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4d208ba9
13:36:37,785 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4d208ba9
13:36:37,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4d208ba9
13:36:37,786 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e4cf6c4
13:36:37,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e4cf6c4
13:36:37,787 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5ae4d3e8
13:36:37,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5ae4d3e8
13:36:37,788 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4779712a
13:36:37,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4779712a
13:36:37,788 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@103ed9c2
13:36:37,789 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@b61b6d2
13:36:37,789 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@6af0013c
13:36:37,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6af0013c
13:36:37,790 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4fd976a0
13:36:37,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fd976a0
13:36:37,791 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@388831b5
13:36:37,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@388831b5
13:36:37,792 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@77b9827c
13:36:37,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77b9827c
13:36:37,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77b9827c
13:36:37,793 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@67371754
13:36:37,794 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2fd8d314
13:36:37,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2fd8d314
13:36:37,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2fd8d314
13:36:37,795 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c31e809
13:36:37,795 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@27b78672
13:36:37,795 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@27b78672
13:36:37,796 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e1639f5
13:36:37,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e1639f5
13:36:37,796 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68d9f59c
13:36:37,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68d9f59c
13:36:37,797 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3793fcfc
13:36:37,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3793fcfc
13:36:37,798 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7e13c388
13:36:37,798 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7e13c388
13:36:37,798 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4047f530
13:36:37,799 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2e253c58
13:36:37,799 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2e253c58
13:36:37,800 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2e253c58
13:36:37,800 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@e316494
13:36:37,800 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@e316494
13:36:37,801 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@e316494
13:36:37,801 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4f7b7601
13:36:37,802 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4fe5a032
13:36:37,802 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4fe5a032
13:36:37,802 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4fe5a032
13:36:37,802 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@57a584f5
13:36:37,802 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@57a584f5
13:36:37,803 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@57a584f5
13:36:37,803 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3e4cd72e
13:36:37,803 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6767a5d7
13:36:37,805 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@62d02383
13:36:37,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62d02383
13:36:37,806 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15c8437a
13:36:37,808 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6dd1fd44
13:36:37,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6dd1fd44
13:36:37,809 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@6060de05
13:36:37,810 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6060de05
13:36:37,810 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b16876f
13:36:37,810 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d027ffa
13:36:37,811 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@53d039d6
13:36:37,812 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1da2cc2d
13:36:37,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1da2cc2d
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4656ba28
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d1ec56b
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@255662fe
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cda23a2
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6f2e4deb
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54a0f8f8
13:36:37,813 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42772100
13:36:37,814 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@ffdcddf
13:36:37,997  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:36:38,017  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:36:38,903  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:37 PDT 2015]; root of context hierarchy
13:36:38,923  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:37 PDT 2015]; root of context hierarchy
13:36:38,978  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:37 PDT 2015]; root of context hierarchy
13:36:39,028  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1981 ms
13:36:44,502  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:36:37 PDT 2015]; root of context hierarchy
13:36:44,511  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:36:50,175  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:36:50,228  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:36:50 PDT 2015]; root of context hierarchy
13:36:50,254  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:36:50,517  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:36:50,518  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:36:50,594  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:36:50,646  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:36:50,676  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:36:50,700  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:36:50,765  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:36:50,767  INFO Environment:213 - HHH000206: hibernate.properties not found
13:36:50,768  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:36:50,795  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:36:50,869 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:36:50,869 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:36:50,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
13:36:50,870 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
13:36:50,871 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
13:36:50,872 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
13:36:50,872 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:36:50,873 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:36:50,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
13:36:50,873 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
13:36:50,874 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
13:36:50,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
13:36:50,875 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:36:50,875 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:36:50,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
13:36:50,876 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
13:36:50,876 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
13:36:50,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
13:36:50,877 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:36:50,877 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:36:50,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
13:36:50,878 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:36:50,878 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:36:50,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
13:36:50,879 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:36:50,880 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:36:50,880 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
13:36:50,881 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:36:50,881 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:36:50,882 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
13:36:50,882 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
13:36:50,883 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
13:36:50,883 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
13:36:50,884 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
13:36:50,884 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
13:36:50,885 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
13:36:50,885 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
13:36:50,886 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
13:36:50,886 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
13:36:50,888 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
13:36:50,888 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
13:36:50,889 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:36:50,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:36:50,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
13:36:50,891 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
13:36:50,891 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
13:36:50,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
13:36:50,892 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
13:36:50,892 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
13:36:50,893 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
13:36:50,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
13:36:50,893 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
13:36:50,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
13:36:50,894 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
13:36:50,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
13:36:50,895 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
13:36:50,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
13:36:50,896 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
13:36:50,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
13:36:50,897 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
13:36:50,898 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
13:36:50,898 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
13:36:50,898 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
13:36:50,899 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
13:36:50,899 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
13:36:50,899 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
13:36:50,900 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
13:36:50,900 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
13:36:50,901 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
13:36:50,901 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
13:36:50,901 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
13:36:50,902 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
13:36:50,902 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
13:36:50,902 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
13:36:50,903 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
13:36:50,905 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
13:36:50,905 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
13:36:50,906 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
13:36:50,908 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
13:36:50,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
13:36:50,910 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
13:36:50,910 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
13:36:50,910 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
13:36:50,911 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
13:36:50,911 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
13:36:50,913 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
13:36:50,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
13:36:50,914 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
13:36:50,914 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
13:36:50,914 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
13:36:50,914 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
13:36:50,914 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
13:36:50,915 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
13:36:50,915 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
13:36:50,915 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
13:36:51,180  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:36:51,204  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:36:52,241  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:50 PDT 2015]; root of context hierarchy
13:36:52,268  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:50 PDT 2015]; root of context hierarchy
13:36:52,334  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:36:50 PDT 2015]; root of context hierarchy
13:36:52,385  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2208 ms
13:37:01,902 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
13:37:01,951 DEBUG SQL:92 - select section0_.section_id as section_1_5_3_, section0_.class_end_time as class_en2_5_3_, section0_.class_start_time as class_st3_5_3_, section0_.course_id as course_13_5_3_, section0_.day_of_week as day_of_w4_5_3_, section0_.class_end_date as class_en5_5_3_, section0_.mode_of_instruction as mode_of_6_5_3_, section0_.price as price7_5_3_, section0_.professor_id as profess14_5_3_, section0_.room_number as room_num8_5_3_, section0_.semester as semester9_5_3_, section0_.class_start_date as class_s10_5_3_, section0_.total_capacity as total_c11_5_3_, section0_.wait_list_capacity as wait_li12_5_3_, course1_.course_id as course_i1_1_0_, course1_.code as code2_1_0_, course1_.department as departme3_1_0_, course1_.description as descript4_1_0_, course1_.name as name5_1_0_, course1_.no_of_credits as no_of_cr6_1_0_, course1_.pre_requisite_course as pre_requ7_1_0_, course1_.program as program8_1_0_, professor2_.user_id as user_id1_8_1_, professor2_1_.address_id as address10_8_1_, professor2_1_.college_id as college_2_8_1_, professor2_1_.date_of_birth as date_of_3_8_1_, professor2_1_.email_id as email_id4_8_1_, professor2_1_.first_name as first_na5_8_1_, professor2_1_.password as password6_8_1_, professor2_1_.last_name as last_nam7_8_1_, professor2_1_.middle_name as middle_n8_8_1_, professor2_1_.phone_number as phone_nu9_8_1_, professor2_.faculty_type as faculty_1_3_1_, professor2_.office_hours_from_time as office_h2_3_1_, professor2_.office_hours_to_time as office_h3_3_1_, professor2_.years_of_experience as years_of4_3_1_, address3_.address_id as address_1_0_2_, address3_.apt_no as apt_no2_0_2_, address3_.city as city3_0_2_, address3_.state as state4_0_2_, address3_.street_name as street_n5_0_2_, address3_.zip_code as zip_code6_0_2_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id where section0_.section_id=?
13:37:01,953 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:37:58,435 ERROR GenericExceptionMapper:21 - HTTP 415 Unsupported Media Type
javax.ws.rs.WebApplicationException: HTTP 415 Unsupported Media Type
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:38:05,525 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:39:34,955 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:40:13,191 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:40:13,194 ERROR GenericExceptionMapper:21 - 
java.lang.NullPointerException
	at org.courseregistration.model.Section.toString(Section.java:262)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:41:03,474 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:41:16,260 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@f91f78c[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:41:23,710  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:36:50 PDT 2015]; root of context hierarchy
13:41:23,716  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:41:28,610  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:41:28,661  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:41:28 PDT 2015]; root of context hierarchy
13:41:28,683  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:41:28,970  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:41:28,971  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:41:29,038  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:41:29,095  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:41:29,124  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:41:29,150  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:41:29,207  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:41:29,209  INFO Environment:213 - HHH000206: hibernate.properties not found
13:41:29,210  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:41:29,243  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:41:29,332 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:41:29,333 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:41:29,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
13:41:29,334 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
13:41:29,335 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
13:41:29,336 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
13:41:29,337 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:41:29,337 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:41:29,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
13:41:29,338 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
13:41:29,338 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
13:41:29,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
13:41:29,340 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:41:29,340 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:41:29,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
13:41:29,342 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
13:41:29,342 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
13:41:29,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
13:41:29,343 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:41:29,344 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:41:29,344 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
13:41:29,345 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:41:29,346 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:41:29,346 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
13:41:29,347 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:41:29,347 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:41:29,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
13:41:29,349 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:41:29,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:41:29,351 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
13:41:29,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
13:41:29,352 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
13:41:29,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
13:41:29,353 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
13:41:29,354 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
13:41:29,355 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
13:41:29,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
13:41:29,356 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
13:41:29,357 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
13:41:29,358 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
13:41:29,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
13:41:29,360 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:41:29,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:41:29,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
13:41:29,363 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
13:41:29,364 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
13:41:29,364 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
13:41:29,364 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
13:41:29,365 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
13:41:29,366 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
13:41:29,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
13:41:29,367 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
13:41:29,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
13:41:29,367 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
13:41:29,368 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
13:41:29,368 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
13:41:29,369 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
13:41:29,370 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
13:41:29,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
13:41:29,371 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
13:41:29,372 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
13:41:29,372 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
13:41:29,372 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
13:41:29,373 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
13:41:29,373 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
13:41:29,373 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
13:41:29,374 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
13:41:29,375 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
13:41:29,375 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
13:41:29,375 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
13:41:29,376 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
13:41:29,376 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
13:41:29,376 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
13:41:29,377 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
13:41:29,377 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
13:41:29,381 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
13:41:29,381 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
13:41:29,381 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
13:41:29,384 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
13:41:29,384 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
13:41:29,387 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
13:41:29,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
13:41:29,388 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
13:41:29,388 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
13:41:29,389 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
13:41:29,391 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
13:41:29,391 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
13:41:29,391 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
13:41:29,391 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
13:41:29,392 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
13:41:29,392 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
13:41:29,392 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
13:41:29,392 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
13:41:29,392 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
13:41:29,393 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
13:41:29,666  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:41:29,692  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:41:30,689  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:41:28 PDT 2015]; root of context hierarchy
13:41:30,714  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:41:28 PDT 2015]; root of context hierarchy
13:41:30,775  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:41:28 PDT 2015]; root of context hierarchy
13:41:30,822  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2210 ms
13:41:35,997 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:42:42,586 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 3, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:43:10,388 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=399,s=STREAM]; line: 2, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=399,s=STREAM]; line: 2, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:43:26,199 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=413,s=STREAM]; line: 14, column: 23] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=413,s=STREAM]; line: 14, column: 23] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:44:54,322 ERROR GenericExceptionMapper:21 - Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
org.codehaus.jackson.map.JsonMappingException: Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
	at org.codehaus.jackson.map.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:286)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromNumber(BeanDeserializer.java:776)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:587)
	at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)
	at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:45:01,943 ERROR GenericExceptionMapper:21 - Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
org.codehaus.jackson.map.JsonMappingException: Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
	at org.codehaus.jackson.map.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:286)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromNumber(BeanDeserializer.java:776)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:587)
	at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)
	at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:45:44,277 ERROR GenericExceptionMapper:21 - Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@2021f22f[c=364,s=STREAM]; line: 14, column: 4]
org.codehaus.jackson.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@2021f22f[c=364,s=STREAM]; line: 14, column: 4]
	at org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1432)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:385)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:306)
	at org.codehaus.jackson.impl.Utf8StreamParser._handleUnusualFieldName(Utf8StreamParser.java:1531)
	at org.codehaus.jackson.impl.Utf8StreamParser._parseFieldName(Utf8StreamParser.java:1221)
	at org.codehaus.jackson.impl.Utf8StreamParser.nextToken(Utf8StreamParser.java:489)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:690)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:45:58,528 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:45:58,533 ERROR GenericExceptionMapper:21 - 
java.lang.NullPointerException
	at org.courseregistration.model.Section.toString(Section.java:262)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:46:36,678 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:46:36,680 ERROR GenericExceptionMapper:21 - 
java.lang.NullPointerException
	at org.courseregistration.model.Section.toString(Section.java:262)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:46:42,273 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:46:42,275 ERROR GenericExceptionMapper:21 - 
java.lang.NullPointerException
	at org.courseregistration.model.Section.toString(Section.java:262)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:48:22,123 ERROR GenericExceptionMapper:21 - Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 14, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field "professor_id" (Class org.courseregistration.model.Section), not marked as ignorable
 at [Source: HttpInputOverHTTP@2021f22f[c=417,s=STREAM]; line: 14, column: 27] (through reference chain: org.courseregistration.model.Section["professor_id"])
	at org.codehaus.jackson.map.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:53)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.unknownFieldException(StdDeserializationContext.java:267)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.reportUnknownProperty(StdDeserializer.java:649)
	at org.codehaus.jackson.map.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:635)
	at org.codehaus.jackson.map.deser.BeanDeserializer.handleUnknownProperty(BeanDeserializer.java:1355)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:717)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:48:44,938 ERROR GenericExceptionMapper:21 - Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
org.codehaus.jackson.map.JsonMappingException: Can not instantiate value of type [simple type, class org.courseregistration.model.Professor] from JSON integral number; no single-int-arg constructor/factory method (through reference chain: org.courseregistration.model.Section["professor"])
	at org.codehaus.jackson.map.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:286)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromNumber(BeanDeserializer.java:776)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:587)
	at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)
	at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:49:26,785 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:50:07,972 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@72e1a281
13:50:07,972  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:50:07,997 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
13:50:08,006 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

13:50:08,006 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:50:08,025 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:50:08,040 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
13:50:08,041 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:50:08,042 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@423a0e1d
13:50:08,043 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
13:50:08,043 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:50:08,043 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
13:50:08,046 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:50:08,051 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
13:50:08,051 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:50:08,052 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

13:50:08,052 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:50:08,058 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
13:50:08,058 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:50:08,058 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:50:08,075 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:50:08,106 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,117 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,118 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,118 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,119 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,120 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:50:08,122 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:08,125 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:08,126 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:08,127 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:08,128 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:08,128 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:50:55,157 ERROR GenericExceptionMapper:21 - HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/sections/
com.sun.jersey.api.NotFoundException: HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/sections/
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1543)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:51:06,807 ERROR GenericExceptionMapper:21 - Unexpected character ('{' (code 123)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@2021f22f[c=1275,s=STREAM]; line: 3, column: 6]
org.codehaus.jackson.JsonParseException: Unexpected character ('{' (code 123)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@2021f22f[c=1275,s=STREAM]; line: 3, column: 6]
	at org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1432)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:385)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:306)
	at org.codehaus.jackson.impl.Utf8StreamParser._handleUnusualFieldName(Utf8StreamParser.java:1531)
	at org.codehaus.jackson.impl.Utf8StreamParser._parseFieldName(Utf8StreamParser.java:1221)
	at org.codehaus.jackson.impl.Utf8StreamParser.nextToken(Utf8StreamParser.java:489)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:690)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:51:36,566 ERROR GenericExceptionMapper:21 - Can not construct instance of java.util.Date from String value '11:15:00': not a valid representation (error: Can not parse date "11:15:00": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSZ", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))
 at [Source: HttpInputOverHTTP@2021f22f[c=1288,s=STREAM]; line: 22, column: 28] (through reference chain: org.courseregistration.model.Section["professor"]->org.courseregistration.model.Professor["officeHoursFromTime"])
org.codehaus.jackson.map.JsonMappingException: Can not construct instance of java.util.Date from String value '11:15:00': not a valid representation (error: Can not parse date "11:15:00": not compatible with any of standard forms ("yyyy-MM-dd'T'HH:mm:ss.SSSZ", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", "EEE, dd MMM yyyy HH:mm:ss zzz", "yyyy-MM-dd"))
 at [Source: HttpInputOverHTTP@2021f22f[c=1288,s=STREAM]; line: 22, column: 28] (through reference chain: org.courseregistration.model.Section["professor"]->org.courseregistration.model.Professor["officeHoursFromTime"])
	at org.codehaus.jackson.map.JsonMappingException.from(JsonMappingException.java:163)
	at org.codehaus.jackson.map.deser.StdDeserializationContext.weirdStringException(StdDeserializationContext.java:243)
	at org.codehaus.jackson.map.deser.std.StdDeserializer._parseDate(StdDeserializer.java:553)
	at org.codehaus.jackson.map.deser.std.DateDeserializer.deserialize(DateDeserializer.java:28)
	at org.codehaus.jackson.map.deser.std.DateDeserializer.deserialize(DateDeserializer.java:19)
	at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)
	at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)
	at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:52:09,544 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
13:53:08,228  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:41:28 PDT 2015]; root of context hierarchy
13:53:08,231  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:53:13,755  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:53:13,805  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:53:13 PDT 2015]; root of context hierarchy
13:53:13,826  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:53:14,072  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:53:14,072  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:53:14,134  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:53:14,182  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:53:14,205  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:53:14,223  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:53:14,273  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:53:14,274  INFO Environment:213 - HHH000206: hibernate.properties not found
13:53:14,275  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:53:14,302  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:53:14,376 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:53:14,376 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
13:53:14,376 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
13:53:14,378 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
13:53:14,378 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
13:53:14,379 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
13:53:14,380 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:53:14,380 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
13:53:14,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
13:53:14,381 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
13:53:14,381 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
13:53:14,381 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
13:53:14,382 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:53:14,382 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
13:53:14,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
13:53:14,383 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
13:53:14,383 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
13:53:14,383 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
13:53:14,384 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:53:14,384 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
13:53:14,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
13:53:14,385 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:53:14,386 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
13:53:14,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
13:53:14,387 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:53:14,387 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
13:53:14,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
13:53:14,388 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:53:14,388 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
13:53:14,389 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
13:53:14,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
13:53:14,390 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
13:53:14,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
13:53:14,391 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
13:53:14,391 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
13:53:14,392 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
13:53:14,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
13:53:14,394 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
13:53:14,394 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
13:53:14,395 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
13:53:14,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
13:53:14,396 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:53:14,396 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
13:53:14,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
13:53:14,398 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
13:53:14,399 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
13:53:14,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
13:53:14,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
13:53:14,399 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
13:53:14,400 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
13:53:14,400 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
13:53:14,401 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
13:53:14,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
13:53:14,402 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
13:53:14,402 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
13:53:14,402 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
13:53:14,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
13:53:14,403 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
13:53:14,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
13:53:14,404 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
13:53:14,405 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
13:53:14,405 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
13:53:14,405 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
13:53:14,408 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
13:53:14,408 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
13:53:14,409 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
13:53:14,409 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
13:53:14,410 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
13:53:14,410 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
13:53:14,410 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
13:53:14,411 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
13:53:14,411 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
13:53:14,411 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
13:53:14,411 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
13:53:14,412 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
13:53:14,414 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
13:53:14,414 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
13:53:14,414 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
13:53:14,417 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
13:53:14,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
13:53:14,418 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
13:53:14,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
13:53:14,419 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
13:53:14,419 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
13:53:14,420 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
13:53:14,422 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
13:53:14,422 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
13:53:14,423 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
13:53:14,424 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
13:53:14,424 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
13:53:14,749  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:53:14,772  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:53:15,758  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:53:13 PDT 2015]; root of context hierarchy
13:53:15,786  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:53:13 PDT 2015]; root of context hierarchy
13:53:15,889  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:53:13 PDT 2015]; root of context hierarchy
13:53:15,966  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2209 ms
13:53:19,264 ERROR GenericDAO:95 - Error saving object of type: org.courseregistration.model.Section
javax.persistence.PersistenceException: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1692)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy63.persist(Unknown Source)
	at org.courseregistration.dao.GenericDAO.save(GenericDAO.java:93)
	at org.courseregistration.dao.GenericDAO$$FastClassBySpringCGLIB$$58b2a287.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:653)
	at org.courseregistration.dao.SectionDAO$$EnhancerBySpringCGLIB$$580b59fe.save(<generated>)
	at org.courseregistration.service.SectionService.addSection(SectionService.java:48)
	at org.courseregistration.controller.SectionController.addSection(SectionController.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.PersistentObjectException: detached entity passed to persist: org.courseregistration.model.Section
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:124)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:58)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:774)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:747)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:752)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1146)
	... 63 more
14:05:49,105  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:53:13 PDT 2015]; root of context hierarchy
14:05:49,110  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
14:05:49,937  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:05:49,978  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:05:49 PDT 2015]; root of context hierarchy
14:05:49,998  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:05:50,489  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:05:50,490  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:05:50,562  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:05:50,612  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:05:50,634  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:05:50,651  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:05:50,697  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:05:50,699  INFO Environment:213 - HHH000206: hibernate.properties not found
14:05:50,700  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:05:50,727  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:05:50,767 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f1fb830
14:05:50,767 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3f1fb830
14:05:50,767 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f1fb830
14:05:50,767 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@67adfd56
14:05:50,768 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@42aa0952
14:05:50,768 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27f8204c
14:05:50,770 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@478ad459
14:05:50,770 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@478ad459
14:05:50,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@478ad459
14:05:50,770 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3242225a
14:05:50,771 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3242225a
14:05:50,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3242225a
14:05:50,771 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2f33e16b
14:05:50,772 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2f33e16b
14:05:50,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f33e16b
14:05:50,772 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7b72a1f
14:05:50,772 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7b72a1f
14:05:50,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b72a1f
14:05:50,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@28d649d8
14:05:50,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@28d649d8
14:05:50,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@28d649d8
14:05:50,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a5c8b3f
14:05:50,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a5c8b3f
14:05:50,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a5c8b3f
14:05:50,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@19d00860
14:05:50,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@19d00860
14:05:50,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@19d00860
14:05:50,777 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@53163b71
14:05:50,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@53163b71
14:05:50,777 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2cee1944
14:05:50,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2cee1944
14:05:50,778 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1e698cd8
14:05:50,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1e698cd8
14:05:50,779 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2230bba8
14:05:50,779 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@43f63e7e
14:05:50,780 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@26814770
14:05:50,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@26814770
14:05:50,781 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@8acc1fe
14:05:50,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@8acc1fe
14:05:50,782 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@40f32ad3
14:05:50,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@40f32ad3
14:05:50,783 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6de43a4
14:05:50,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6de43a4
14:05:50,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6de43a4
14:05:50,784 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6764db3e
14:05:50,785 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@7c2090a0
14:05:50,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7c2090a0
14:05:50,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7c2090a0
14:05:50,786 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6da92b9c
14:05:50,786 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@664cae45
14:05:50,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@664cae45
14:05:50,787 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2f754ac8
14:05:50,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f754ac8
14:05:50,787 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e799775
14:05:50,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e799775
14:05:50,788 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@563be2b7
14:05:50,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@563be2b7
14:05:50,789 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@43805acc
14:05:50,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@43805acc
14:05:50,790 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39283dd6
14:05:50,791 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@143e8341
14:05:50,791 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@143e8341
14:05:50,791 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@143e8341
14:05:50,792 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@10ed3b1e
14:05:50,792 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@10ed3b1e
14:05:50,793 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@10ed3b1e
14:05:50,793 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@b0824
14:05:50,794 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@68c85dab
14:05:50,794 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68c85dab
14:05:50,794 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@68c85dab
14:05:50,794 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@61f76672
14:05:50,795 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@61f76672
14:05:50,795 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@61f76672
14:05:50,795 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1b0b95de
14:05:50,796 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1c5f98ee
14:05:50,798 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@132d84c2
14:05:50,798 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@132d84c2
14:05:50,798 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77f62d23
14:05:50,800 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@443e2f6c
14:05:50,801 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@443e2f6c
14:05:50,803 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@703c6b88
14:05:50,803 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@703c6b88
14:05:50,803 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@74ce0e23
14:05:50,804 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@28d9c1af
14:05:50,804 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@eb579d0
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1b7a6963
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b7a6963
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f088d42
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5771deb1
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c5f739
14:05:50,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ccb7bc1
14:05:50,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@77728187
14:05:50,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2eaf4d8e
14:05:50,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@27f1b5d
14:05:50,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@751d7da0
14:05:50,984  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:05:51,005  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:05:51,882  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:05:49 PDT 2015]; root of context hierarchy
14:05:51,909  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:05:49 PDT 2015]; root of context hierarchy
14:05:51,965  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:05:49 PDT 2015]; root of context hierarchy
14:05:52,019  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2081 ms
14:06:00,737  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 14:05:49 PDT 2015]; root of context hierarchy
14:06:00,745  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
14:06:05,552  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:06:05,603  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:06:05 PDT 2015]; root of context hierarchy
14:06:05,624  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:06:05,870  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:06:05,871  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:06:05,935  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:06:05,983  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:06:06,006  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:06:06,022  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:06:06,069  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:06:06,070  INFO Environment:213 - HHH000206: hibernate.properties not found
14:06:06,071  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:06:06,097  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:06:06,173 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
14:06:06,173 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@553da911
14:06:06,173 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@553da911
14:06:06,174 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bc6935c
14:06:06,175 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47248a48
14:06:06,175 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7edb6fca
14:06:06,176 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
14:06:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6fc0bbc6
14:06:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6fc0bbc6
14:06:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@609319c3
14:06:06,178 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@609319c3
14:06:06,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@609319c3
14:06:06,179 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
14:06:06,179 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@72bd2871
14:06:06,179 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@72bd2871
14:06:06,180 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@40ef0af8
14:06:06,180 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@40ef0af8
14:06:06,181 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40ef0af8
14:06:06,182 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
14:06:06,182 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7f7c420c
14:06:06,182 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7f7c420c
14:06:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
14:06:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@53f0d09c
14:06:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53f0d09c
14:06:06,184 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
14:06:06,184 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@733c464f
14:06:06,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@733c464f
14:06:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5974b7e8
14:06:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5974b7e8
14:06:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@25c2a9e3
14:06:06,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@25c2a9e3
14:06:06,187 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@423a0e1d
14:06:06,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@423a0e1d
14:06:06,188 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@52ae997b
14:06:06,188 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5a058be5
14:06:06,189 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@32d418a9
14:06:06,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@32d418a9
14:06:06,191 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4dadd690
14:06:06,191 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4dadd690
14:06:06,192 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5eabff6b
14:06:06,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5eabff6b
14:06:06,193 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@306c7bf6
14:06:06,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@306c7bf6
14:06:06,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@306c7bf6
14:06:06,195 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f379769
14:06:06,196 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@36776c32
14:06:06,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36776c32
14:06:06,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36776c32
14:06:06,196 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e1ffe70
14:06:06,197 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@574059d5
14:06:06,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@574059d5
14:06:06,198 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@14447be
14:06:06,198 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@14447be
14:06:06,198 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d620a1
14:06:06,199 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d620a1
14:06:06,199 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@472d0f4
14:06:06,199 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@472d0f4
14:06:06,200 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2accaec2
14:06:06,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2accaec2
14:06:06,201 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25a94b55
14:06:06,203 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6393bf8b
14:06:06,203 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6393bf8b
14:06:06,204 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6393bf8b
14:06:06,204 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f87607c
14:06:06,205 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f87607c
14:06:06,205 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f87607c
14:06:06,205 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@307e4c44
14:06:06,206 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@373e6b9d
14:06:06,206 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@373e6b9d
14:06:06,206 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@373e6b9d
14:06:06,207 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@721d8ab5
14:06:06,207 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@721d8ab5
14:06:06,207 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@721d8ab5
14:06:06,208 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1e3ff233
14:06:06,208 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@654e6a90
14:06:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5cff6b74
14:06:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5cff6b74
14:06:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@29a33620
14:06:06,213 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5700c9db
14:06:06,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5700c9db
14:06:06,215 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@7364eed1
14:06:06,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7364eed1
14:06:06,216 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31973858
14:06:06,216 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@773014d3
14:06:06,217 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@34451ed8
14:06:06,220 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5974b233
14:06:06,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5974b233
14:06:06,220 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@750f64fe
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@996a546
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4fc165f6
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@545b5ed0
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5a7df831
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@667dcaad
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22d7fd41
14:06:06,221 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c748a15
14:06:06,506  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:06:06,528  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:06:07,521  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:06:05 PDT 2015]; root of context hierarchy
14:06:07,546  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:06:05 PDT 2015]; root of context hierarchy
14:06:07,617  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:06:05 PDT 2015]; root of context hierarchy
14:06:07,676  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2122 ms
14:06:28,674 DEBUG SQL:92 - select section0_.section_id as section_1_5_3_, section0_.class_end_time as class_en2_5_3_, section0_.class_start_time as class_st3_5_3_, section0_.course_id as course_13_5_3_, section0_.day_of_week as day_of_w4_5_3_, section0_.class_end_date as class_en5_5_3_, section0_.mode_of_instruction as mode_of_6_5_3_, section0_.price as price7_5_3_, section0_.professor_id as profess14_5_3_, section0_.room_number as room_num8_5_3_, section0_.semester as semester9_5_3_, section0_.class_start_date as class_s10_5_3_, section0_.total_capacity as total_c11_5_3_, section0_.wait_list_capacity as wait_li12_5_3_, course1_.course_id as course_i1_1_0_, course1_.code as code2_1_0_, course1_.department as departme3_1_0_, course1_.description as descript4_1_0_, course1_.name as name5_1_0_, course1_.no_of_credits as no_of_cr6_1_0_, course1_.pre_requisite_course as pre_requ7_1_0_, course1_.program as program8_1_0_, professor2_.user_id as user_id1_8_1_, professor2_1_.address_id as address10_8_1_, professor2_1_.college_id as college_2_8_1_, professor2_1_.date_of_birth as date_of_3_8_1_, professor2_1_.email_id as email_id4_8_1_, professor2_1_.first_name as first_na5_8_1_, professor2_1_.password as password6_8_1_, professor2_1_.last_name as last_nam7_8_1_, professor2_1_.middle_name as middle_n8_8_1_, professor2_1_.phone_number as phone_nu9_8_1_, professor2_.faculty_type as faculty_1_3_1_, professor2_.office_hours_from_time as office_h2_3_1_, professor2_.office_hours_to_time as office_h3_3_1_, professor2_.years_of_experience as years_of4_3_1_, address3_.address_id as address_1_0_2_, address3_.apt_no as apt_no2_0_2_, address3_.city as city3_0_2_, address3_.state as state4_0_2_, address3_.street_name as street_n5_0_2_, address3_.zip_code as zip_code6_0_2_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id where section0_.section_id=?
14:06:28,688 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
14:06:28,696 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_1_, professor0_1_.address_id as address10_8_1_, professor0_1_.college_id as college_2_8_1_, professor0_1_.date_of_birth as date_of_3_8_1_, professor0_1_.email_id as email_id4_8_1_, professor0_1_.first_name as first_na5_8_1_, professor0_1_.password as password6_8_1_, professor0_1_.last_name as last_nam7_8_1_, professor0_1_.middle_name as middle_n8_8_1_, professor0_1_.phone_number as phone_nu9_8_1_, professor0_.faculty_type as faculty_1_3_1_, professor0_.office_hours_from_time as office_h2_3_1_, professor0_.office_hours_to_time as office_h3_3_1_, professor0_.years_of_experience as years_of4_3_1_, address1_.address_id as address_1_0_0_, address1_.apt_no as apt_no2_0_0_, address1_.city as city3_0_0_, address1_.state as state4_0_0_, address1_.street_name as street_n5_0_0_, address1_.zip_code as zip_code6_0_0_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id where professor0_.user_id=?
14:06:28,709 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:06:28,724 DEBUG SQL:92 - select next_val as id_val from sequence for update
14:06:28,725 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
14:06:28,746 DEBUG SQL:92 - insert into section_info (class_end_time, class_start_time, course_id, day_of_week, class_end_date, mode_of_instruction, price, professor_id, room_number, semester, class_start_date, total_capacity, wait_list_capacity, section_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
14:06:28,751 DEBUG SQL:92 - update users set address_id=?, college_id=?, date_of_birth=?, email_id=?, first_name=?, password=?, last_name=?, middle_name=?, phone_number=? where user_id=?
14:06:28,752 DEBUG SQL:92 - update professor_details set faculty_type=?, office_hours_from_time=?, office_hours_to_time=?, years_of_experience=? where user_id=?
14:06:28,754 DEBUG SQL:92 - delete from user_role where user_id=?
14:08:21,687 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
14:09:15,290 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
14:09:15,298 DEBUG SQL:92 - delete from section_info where section_id=?
16:35:45,652 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@24fa7e52
16:35:45,652  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
16:35:45,680 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
16:35:45,686 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

16:35:45,687 DEBUG ErrorCounter:95 - throwQueryException() : no errors
16:35:45,704 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
16:35:45,718 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
16:35:45,719 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
16:35:45,720 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@423a0e1d
16:35:45,721 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
16:35:45,721 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
16:35:45,721 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
16:35:45,724 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
16:35:45,728 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
16:35:45,729 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
16:35:45,729 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

16:35:45,730 DEBUG ErrorCounter:95 - throwQueryException() : no errors
16:35:45,736 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
16:35:45,736 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
16:35:45,736 DEBUG ErrorCounter:95 - throwQueryException() : no errors
16:35:45,749 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
16:35:45,756 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,757 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,759 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,759 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,760 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,761 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
16:35:45,763 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:35:45,763 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:35:45,764 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:35:45,765 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:35:45,767 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:35:45,767 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:38:09,315 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:04:52,570  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 14:06:05 PDT 2015]; root of context hierarchy
18:04:52,576  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:25:42,353  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:25:42,407  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:25:42 PDT 2015]; root of context hierarchy
18:25:42,427  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:25:42,628  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:25:42,630  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:25:42,648  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:25:42,658  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:25:42,747  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:25:42,747  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:25:42,816  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:25:42,862  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:25:42,886  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:25:42,903  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:25:42,950  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:25:42,951  INFO Environment:213 - HHH000206: hibernate.properties not found
18:25:42,952  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:25:42,980  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:25:43,053 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@467e7793
18:25:43,054 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@467e7793
18:25:43,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@467e7793
18:25:43,054 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bbc11ed
18:25:43,055 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bede349
18:25:43,055 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fbed6fc
18:25:43,056 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7afac89a
18:25:43,056 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7afac89a
18:25:43,056 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7afac89a
18:25:43,057 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@627cb3ed
18:25:43,057 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@627cb3ed
18:25:43,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@627cb3ed
18:25:43,058 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@488c608a
18:25:43,059 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@488c608a
18:25:43,059 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@488c608a
18:25:43,060 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@d03cdc7
18:25:43,060 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@d03cdc7
18:25:43,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@d03cdc7
18:25:43,061 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4d4337f9
18:25:43,061 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4d4337f9
18:25:43,061 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d4337f9
18:25:43,062 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@481eb705
18:25:43,062 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@481eb705
18:25:43,062 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@481eb705
18:25:43,063 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@390e814c
18:25:43,063 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@390e814c
18:25:43,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@390e814c
18:25:43,065 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@397f9672
18:25:43,065 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@397f9672
18:25:43,065 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@507187c1
18:25:43,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@507187c1
18:25:43,066 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6888746c
18:25:43,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6888746c
18:25:43,067 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1f3310fc
18:25:43,067 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a4e1ca7
18:25:43,068 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5432be12
18:25:43,068 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5432be12
18:25:43,069 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@213c812a
18:25:43,069 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@213c812a
18:25:43,070 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@280e4390
18:25:43,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@280e4390
18:25:43,071 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6f5f892c
18:25:43,071 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6f5f892c
18:25:43,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6f5f892c
18:25:43,073 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@698daff6
18:25:43,073 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@44ec6637
18:25:43,074 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@44ec6637
18:25:43,074 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@44ec6637
18:25:43,074 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@69d9d322
18:25:43,075 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@94b5fe3
18:25:43,075 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@94b5fe3
18:25:43,076 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@732fa176
18:25:43,076 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@732fa176
18:25:43,076 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1644cc2d
18:25:43,076 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1644cc2d
18:25:43,077 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2e17a9e6
18:25:43,077 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2e17a9e6
18:25:43,078 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@cda988
18:25:43,078 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@cda988
18:25:43,078 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@65cf8da0
18:25:43,079 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@373fb666
18:25:43,079 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@373fb666
18:25:43,079 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@373fb666
18:25:43,080 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1db7a4ae
18:25:43,080 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1db7a4ae
18:25:43,081 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1db7a4ae
18:25:43,081 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@18356d9e
18:25:43,082 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f31cf8f
18:25:43,082 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f31cf8f
18:25:43,082 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f31cf8f
18:25:43,083 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4830c979
18:25:43,083 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4830c979
18:25:43,083 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4830c979
18:25:43,083 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3c6e407
18:25:43,084 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3fe59f84
18:25:43,086 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@257da215
18:25:43,086 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@257da215
18:25:43,087 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@52c2d1e8
18:25:43,089 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@62075e3d
18:25:43,089 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@62075e3d
18:25:43,090 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@455cb6d9
18:25:43,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@455cb6d9
18:25:43,091 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bd6bfb0
18:25:43,091 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@536f389
18:25:43,092 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@29767156
18:25:43,094 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@78c91d2a
18:25:43,094 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@78c91d2a
18:25:43,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ed74d03
18:25:43,094 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ec729be
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f7da3a2
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24ea71d
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76055d02
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31c800a5
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@130ad58d
18:25:43,095 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@648bfebe
18:25:43,289  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:25:43,312  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:25:44,468  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:25:42 PDT 2015]; root of context hierarchy
18:25:44,490  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:25:42 PDT 2015]; root of context hierarchy
18:25:44,618  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@11c82829, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@34c21c34, org.springframework.security.web.header.HeaderWriterFilter@353ac1ef, org.springframework.security.web.csrf.CsrfFilter@72c8de78, org.courseregistration.auth.CustomRestSecurityFilter@22912968, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@616b2b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65402e26, org.springframework.security.web.access.ExceptionTranslationFilter@51cf17e8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7abeaed0]
18:25:44,658  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:25:42 PDT 2015]; root of context hierarchy
18:25:44,708  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2353 ms
18:28:43,803 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@53c34cd4
18:28:43,804  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:28:43,827 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:28:43,834 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:28:43,834 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,850 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:28:43,864 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:28:43,865 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:28:43,867 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:28:43,868 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@4d4337f9
18:28:43,869 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:28:43,870 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:28:43,870 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:28:43,876 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:28:43,876 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:28:43,876 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@4d4337f9}

18:28:43,877 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,882 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:28:43,882 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:28:43,882 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,902 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:28:43,935 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:28:43,944 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:28:43,973 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
18:28:43,974 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

18:28:43,975 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,975 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:28:43,975 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
18:28:43,976 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
18:28:43,976 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@6888746c
18:28:43,977 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
18:28:43,977 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:28:43,977 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
18:28:43,978 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
18:28:43,978 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
18:28:43,978 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:28:43,979 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

18:28:43,979 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,979 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
18:28:43,979 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
18:28:43,980 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:28:43,980 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
18:29:47,775  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:25:42 PDT 2015]; root of context hierarchy
18:29:47,782  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:29:48,701  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:29:48,742  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:29:48 PDT 2015]; root of context hierarchy
18:29:48,762  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:29:48,890  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:29:48,892  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:29:48,910  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:29:48,919  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:29:49,001  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:29:49,002  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:29:49,064  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:29:49,106  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:29:49,129  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:29:49,145  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:29:49,191  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:29:49,192  INFO Environment:213 - HHH000206: hibernate.properties not found
18:29:49,193  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:29:49,218  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:29:49,258 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@60da0cd6
18:29:49,258 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@60da0cd6
18:29:49,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60da0cd6
18:29:49,259 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cc46588
18:29:49,259 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7c886d78
18:29:49,260 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6efaedf1
18:29:49,260 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7522e624
18:29:49,261 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7522e624
18:29:49,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7522e624
18:29:49,261 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@68e622d8
18:29:49,261 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@68e622d8
18:29:49,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@68e622d8
18:29:49,262 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1956b200
18:29:49,262 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1956b200
18:29:49,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1956b200
18:29:49,263 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@15f2fdb0
18:29:49,263 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@15f2fdb0
18:29:49,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@15f2fdb0
18:29:49,264 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@718f58b8
18:29:49,264 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@718f58b8
18:29:49,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@718f58b8
18:29:49,265 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@424cc43d
18:29:49,265 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@424cc43d
18:29:49,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@424cc43d
18:29:49,266 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@502e4e2
18:29:49,266 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@502e4e2
18:29:49,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@502e4e2
18:29:49,267 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e3e3e26
18:29:49,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e3e3e26
18:29:49,268 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4ea4531
18:29:49,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4ea4531
18:29:49,268 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7a1b0892
18:29:49,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7a1b0892
18:29:49,269 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6ff90a07
18:29:49,269 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@619851fd
18:29:49,270 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7e0e63e8
18:29:49,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7e0e63e8
18:29:49,271 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4322b95
18:29:49,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4322b95
18:29:49,272 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3e51f0aa
18:29:49,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3e51f0aa
18:29:49,273 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a2b221f
18:29:49,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a2b221f
18:29:49,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a2b221f
18:29:49,274 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a754292
18:29:49,274 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@407e9cd0
18:29:49,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@407e9cd0
18:29:49,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@407e9cd0
18:29:49,275 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c9dc0fc
18:29:49,276 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@98b69f1
18:29:49,276 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@98b69f1
18:29:49,276 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4266a59e
18:29:49,276 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4266a59e
18:29:49,277 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@528b8f60
18:29:49,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@528b8f60
18:29:49,277 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@77145193
18:29:49,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@77145193
18:29:49,278 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ae318c
18:29:49,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ae318c
18:29:49,279 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7ae81258
18:29:49,279 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5e2fc3b7
18:29:49,279 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e2fc3b7
18:29:49,280 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5e2fc3b7
18:29:49,280 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7accd057
18:29:49,280 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7accd057
18:29:49,280 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7accd057
18:29:49,281 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3eaac7f7
18:29:49,281 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3de6bc2c
18:29:49,281 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3de6bc2c
18:29:49,281 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3de6bc2c
18:29:49,282 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@405940ac
18:29:49,282 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@405940ac
18:29:49,282 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@405940ac
18:29:49,283 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@a0eb91
18:29:49,283 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4734485a
18:29:49,285 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1a2f3b4
18:29:49,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a2f3b4
18:29:49,286 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c76db64
18:29:49,287 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7343edd7
18:29:49,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7343edd7
18:29:49,289 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@17b29c5b
18:29:49,289 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@17b29c5b
18:29:49,289 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@102db5d7
18:29:49,290 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@77e3ee29
18:29:49,290 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2bf97767
18:29:49,292 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@728797c
18:29:49,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@728797c
18:29:49,292 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c5e9732
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48f9fc5c
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@166f11b
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@42d78080
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a4878ef
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d5468e6
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b8cb87e
18:29:49,293 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7521fa0f
18:29:49,464  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:29:49,483  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:29:50,537  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:29:48 PDT 2015]; root of context hierarchy
18:29:50,560  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:29:48 PDT 2015]; root of context hierarchy
18:29:50,685  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5f16d121, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19a9078, org.springframework.security.web.header.HeaderWriterFilter@557a5eee, org.springframework.security.web.csrf.CsrfFilter@486f0836, org.courseregistration.auth.CustomRestSecurityFilter@219957c3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@74550ad8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@735fa792, org.springframework.security.web.access.ExceptionTranslationFilter@43c12f77, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@288d4f83]
18:29:50,724  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:29:48 PDT 2015]; root of context hierarchy
18:29:50,772  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2070 ms
18:34:37,702  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:29:48 PDT 2015]; root of context hierarchy
18:34:37,712  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:34:38,532  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:34:38,573  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:34:38 PDT 2015]; root of context hierarchy
18:34:38,594  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:34:38,721  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:34:38,723  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:34:38,742  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:34:38,751  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:34:38,837  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:34:38,838  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:34:38,902  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:34:38,946  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:34:38,968  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:34:38,985  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:34:39,031  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:34:39,032  INFO Environment:213 - HHH000206: hibernate.properties not found
18:34:39,034  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:34:39,060  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:34:39,102 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9c0032
18:34:39,102 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7f9c0032
18:34:39,102 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7f9c0032
18:34:39,102 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@62fdb220
18:34:39,103 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ca39f90
18:34:39,103 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e47b8d
18:34:39,104 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7f1aea92
18:34:39,104 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7f1aea92
18:34:39,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f1aea92
18:34:39,105 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@55782ca
18:34:39,105 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@55782ca
18:34:39,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@55782ca
18:34:39,106 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@48b62826
18:34:39,106 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@48b62826
18:34:39,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@48b62826
18:34:39,107 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@57399c46
18:34:39,107 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@57399c46
18:34:39,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57399c46
18:34:39,108 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67deccf6
18:34:39,108 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67deccf6
18:34:39,108 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67deccf6
18:34:39,109 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@23acf743
18:34:39,109 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@23acf743
18:34:39,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23acf743
18:34:39,110 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@62928cf4
18:34:39,110 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@62928cf4
18:34:39,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@62928cf4
18:34:39,111 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@c57b47b
18:34:39,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@c57b47b
18:34:39,112 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7725b1db
18:34:39,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7725b1db
18:34:39,113 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@466a6cb
18:34:39,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@466a6cb
18:34:39,113 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@644f8bac
18:34:39,113 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@45c69f96
18:34:39,114 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@25fcb878
18:34:39,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25fcb878
18:34:39,115 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4cbe21c2
18:34:39,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4cbe21c2
18:34:39,116 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@606523aa
18:34:39,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@606523aa
18:34:39,117 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@32b344a0
18:34:39,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@32b344a0
18:34:39,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@32b344a0
18:34:39,118 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@168cda72
18:34:39,119 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5e236e9a
18:34:39,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e236e9a
18:34:39,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e236e9a
18:34:39,119 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d89012f
18:34:39,120 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@31d73a46
18:34:39,120 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@31d73a46
18:34:39,120 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@3c7ec0d2
18:34:39,120 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3c7ec0d2
18:34:39,121 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7881d237
18:34:39,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7881d237
18:34:39,121 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@12c5d3f
18:34:39,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@12c5d3f
18:34:39,122 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@62ef4a41
18:34:39,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@62ef4a41
18:34:39,123 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1b3ceabd
18:34:39,123 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@3bc0d4aa
18:34:39,124 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3bc0d4aa
18:34:39,124 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@3bc0d4aa
18:34:39,124 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2cfef6e5
18:34:39,124 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2cfef6e5
18:34:39,124 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2cfef6e5
18:34:39,125 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3510dea0
18:34:39,125 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@300ccd03
18:34:39,125 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@300ccd03
18:34:39,126 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@300ccd03
18:34:39,126 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2389166b
18:34:39,126 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2389166b
18:34:39,127 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2389166b
18:34:39,127 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@326c4328
18:34:39,127 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@768ae53d
18:34:39,130 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1d711905
18:34:39,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1d711905
18:34:39,130 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ef47a20
18:34:39,132 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7ba78a8d
18:34:39,132 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7ba78a8d
18:34:39,134 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5943fb9c
18:34:39,134 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5943fb9c
18:34:39,134 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25dabb04
18:34:39,134 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c3287da
18:34:39,135 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@232dc7f1
18:34:39,137 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@20f9f5db
18:34:39,137 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20f9f5db
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3da77d7
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c621d5a
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46c15df3
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4079e817
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@104d4b00
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6cb90c9e
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@205bea3f
18:34:39,138 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fed9773
18:34:39,316  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:34:39,337  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:34:40,275  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:34:38 PDT 2015]; root of context hierarchy
18:34:40,296  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:34:38 PDT 2015]; root of context hierarchy
18:34:40,420  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@18438fe3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3925c45c, org.springframework.security.web.header.HeaderWriterFilter@10d33156, org.springframework.security.web.csrf.CsrfFilter@12dafd33, org.courseregistration.auth.CustomRestSecurityFilter@16e2541c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@17275b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@822bd41, org.springframework.security.web.access.ExceptionTranslationFilter@4dd4fa13, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@49920501]
18:34:40,464  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:34:38 PDT 2015]; root of context hierarchy
18:34:40,521  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1988 ms
18:36:32,463 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4746aeb
18:36:32,464  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:36:32,483 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:36:32,489 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:36:32,489 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:36:32,502 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:36:32,512 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:36:32,513 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:36:32,515 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:36:32,516 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@67deccf6
18:36:32,516 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:36:32,517 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:36:32,517 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:36:32,521 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:36:32,522 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:36:32,522 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@67deccf6}

18:36:32,522 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:36:32,528 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:36:32,528 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:36:32,528 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:36:32,547 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:36:32,576 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:36:32,585 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:36:32,621 ERROR GenericExceptionMapper:21 - HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/section/
com.sun.jersey.api.NotFoundException: HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/section/
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1543)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:36:39,474  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:34:38 PDT 2015]; root of context hierarchy
18:36:39,479  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:36:44,834  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:36:44,886  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:36:44 PDT 2015]; root of context hierarchy
18:36:44,907  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:36:45,101  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:36:45,103  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:36:45,124  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:36:45,134  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:36:45,223  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:36:45,224  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:36:45,290  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:36:45,338  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:36:45,361  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:36:45,378  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:36:45,424  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:36:45,425  INFO Environment:213 - HHH000206: hibernate.properties not found
18:36:45,426  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:36:45,454  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:36:45,529 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:36:45,530 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:36:45,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:36:45,530 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:36:45,531 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:36:45,531 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:36:45,532 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:36:45,532 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:36:45,532 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:36:45,533 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:36:45,533 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:36:45,533 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:36:45,534 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:36:45,534 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:36:45,534 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:36:45,535 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:36:45,535 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:36:45,535 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:36:45,536 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:36:45,537 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:36:45,537 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:36:45,538 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:36:45,538 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:36:45,538 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:36:45,539 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:36:45,539 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:36:45,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:36:45,541 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:36:45,541 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:36:45,542 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:36:45,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:36:45,542 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:36:45,543 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:36:45,543 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:36:45,544 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:36:45,544 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:36:45,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:36:45,546 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:36:45,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:36:45,547 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:36:45,547 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:36:45,548 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:36:45,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:36:45,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:36:45,550 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:36:45,551 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:36:45,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:36:45,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:36:45,552 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:36:45,552 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:36:45,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:36:45,553 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:36:45,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:36:45,554 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:36:45,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:36:45,555 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:36:45,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:36:45,556 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:36:45,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:36:45,556 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:36:45,558 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:36:45,558 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:36:45,559 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:36:45,559 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:36:45,560 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:36:45,560 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:36:45,560 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:36:45,561 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:36:45,561 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:36:45,561 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:36:45,562 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:36:45,562 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:36:45,562 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:36:45,563 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:36:45,563 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:36:45,565 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:36:45,566 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:36:45,566 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:36:45,569 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:36:45,569 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:36:45,570 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:36:45,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:36:45,571 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:36:45,571 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:36:45,572 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:36:45,574 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:36:45,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:36:45,574 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:36:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:36:45,837  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:36:45,860  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:36:46,897  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:36:44 PDT 2015]; root of context hierarchy
18:36:46,924  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:36:44 PDT 2015]; root of context hierarchy
18:36:47,072  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:36:47,111  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:36:44 PDT 2015]; root of context hierarchy
18:36:47,165  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2329 ms
18:37:23,270 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@788175ad
18:37:23,270  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:37:23,292 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:37:23,300 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:37:23,300 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,318 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:37:23,331 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:37:23,332 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:37:23,334 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:37:23,336 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:37:23,336 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:37:23,337 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:37:23,338 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:37:23,343 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:37:23,343 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:37:23,344 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:37:23,344 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,350 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:37:23,350 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:37:23,351 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,370 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:37:23,403 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:37:23,413 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:37:23,453 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:37:23,455 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:37:23,455 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,455 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:37:23,456 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:37:23,456 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:37:23,456 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:37:23,457 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:37:23,457 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:37:23,458 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:37:23,458 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:37:23,459 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:37:23,459 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:37:23,459 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:37:23,459 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:37:23,460 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:37:23,460 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:37:23,460 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:37:23,461 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:37:23,461 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:37:23,461 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:37:23,462 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:37:23,462 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,462 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:37:23,462 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:37:23,462 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:37:23,463 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:37:23,469 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:23,470 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:23,474 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:23,475 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:23,476 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:23,478 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:23,479 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:23,480 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:23,500 ERROR GenericExceptionMapper:21 - URI must not be null
java.lang.IllegalArgumentException: URI must not be null
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.springframework.web.util.UriComponentsBuilder.fromUriString(UriComponentsBuilder.java:186)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:70)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:54)
	at org.courseregistration.controller.SectionController.findSections(SectionController.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:37:32,472 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:37:32,476 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:37:32,477 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:37:32,480 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:37:32,487 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:32,489 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:32,491 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:32,492 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:32,493 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:32,495 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:37:32,497 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:32,499 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:37:32,503 ERROR GenericExceptionMapper:21 - URI must not be null
java.lang.IllegalArgumentException: URI must not be null
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.springframework.web.util.UriComponentsBuilder.fromUriString(UriComponentsBuilder.java:186)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:70)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:54)
	at org.courseregistration.controller.SectionController.findSections(SectionController.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:37:51,299  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:36:44 PDT 2015]; root of context hierarchy
18:37:51,305  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:37:56,830  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:37:56,880  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:37:56 PDT 2015]; root of context hierarchy
18:37:56,900  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:37:57,092  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:37:57,094  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:37:57,114  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:37:57,123  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:37:57,212  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:37:57,212  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:37:57,278  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:37:57,328  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:37:57,351  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:37:57,368  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:37:57,415  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:37:57,416  INFO Environment:213 - HHH000206: hibernate.properties not found
18:37:57,417  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:37:57,445  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:37:57,518 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:37:57,518 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:37:57,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:37:57,519 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:37:57,520 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:37:57,520 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:37:57,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:37:57,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:37:57,521 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:37:57,522 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:37:57,522 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:37:57,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:37:57,523 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:37:57,523 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:37:57,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:37:57,524 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:37:57,524 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:37:57,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:37:57,525 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:37:57,526 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:37:57,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:37:57,527 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:37:57,527 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:37:57,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:37:57,528 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:37:57,528 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:37:57,528 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:37:57,529 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:37:57,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:37:57,530 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:37:57,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:37:57,531 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:37:57,531 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:37:57,532 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:37:57,532 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:37:57,534 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:37:57,534 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:37:57,535 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:37:57,535 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:37:57,536 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:37:57,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:37:57,537 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:37:57,538 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:37:57,538 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:37:57,539 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:37:57,540 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:37:57,540 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:37:57,540 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:37:57,541 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:37:57,541 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:37:57,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:37:57,542 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:37:57,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:37:57,543 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:37:57,543 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:37:57,544 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:37:57,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:37:57,545 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:37:57,545 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:37:57,545 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:37:57,546 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:37:57,546 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:37:57,547 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:37:57,547 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:37:57,548 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:37:57,548 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:37:57,548 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:37:57,549 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:37:57,549 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:37:57,549 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:37:57,550 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:37:57,550 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:37:57,550 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:37:57,551 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:37:57,551 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:37:57,553 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:37:57,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:37:57,554 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:37:57,556 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:37:57,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:37:57,558 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:37:57,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:37:57,559 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:37:57,559 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:37:57,560 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:37:57,561 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:37:57,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:37:57,562 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:37:57,563 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:37:57,563 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:37:57,818  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:37:57,841  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:37:58,859  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:37:56 PDT 2015]; root of context hierarchy
18:37:58,883  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:37:56 PDT 2015]; root of context hierarchy
18:37:59,016  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:37:59,056  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:37:56 PDT 2015]; root of context hierarchy
18:37:59,107  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2275 ms
18:38:04,992 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6b31b8c2
18:38:04,993  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:38:05,014 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:38:05,021 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:38:05,021 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,040 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:38:05,053 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:38:05,054 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:38:05,056 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:38:05,057 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:38:05,058 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:38:05,059 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:38:05,060 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:38:05,065 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:38:05,065 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:38:05,066 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:38:05,066 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,072 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:38:05,072 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:38:05,072 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,093 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:38:05,121 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:38:05,131 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:38:05,170 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:38:05,171 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:38:05,172 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,172 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:38:05,172 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:38:05,173 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:38:05,173 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:38:05,174 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:38:05,174 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:38:05,175 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:38:05,175 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:38:05,176 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:38:05,176 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:38:05,176 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:38:05,176 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:38:05,176 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:38:05,177 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:38:05,177 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:38:05,177 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:38:05,177 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:38:05,178 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:38:05,178 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:38:05,178 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,179 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:38:05,179 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:38:05,179 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:38:05,179 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:38:05,184 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:38:05,185 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:38:05,189 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:38:05,190 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:38:05,192 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:38:05,194 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:38:05,195 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:38:05,197 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:38:05,214 ERROR GenericExceptionMapper:21 - URI must not be null
java.lang.IllegalArgumentException: URI must not be null
	at org.springframework.util.Assert.notNull(Assert.java:115)
	at org.springframework.web.util.UriComponentsBuilder.fromUriString(UriComponentsBuilder.java:186)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:70)
	at org.springframework.hateoas.jaxrs.JaxRsLinkBuilder.linkTo(JaxRsLinkBuilder.java:54)
	at org.courseregistration.controller.SectionController.findSections(SectionController.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:38:40,183  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:37:56 PDT 2015]; root of context hierarchy
18:38:40,190  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:38:41,036  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:38:41,081  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:38:41 PDT 2015]; root of context hierarchy
18:38:41,102  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:38:41,241  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:38:41,242  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:38:41,261  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:38:41,271  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:38:41,365  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:38:41,366  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:38:41,433  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:38:41,476  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:38:41,496  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:38:41,512  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:38:41,563  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:38:41,565  INFO Environment:213 - HHH000206: hibernate.properties not found
18:38:41,566  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:38:41,594  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:38:41,639 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3429e534
18:38:41,639 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3429e534
18:38:41,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3429e534
18:38:41,640 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@232c7e4e
18:38:41,641 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@111ca398
18:38:41,641 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@50f28aa1
18:38:41,642 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@728182a4
18:38:41,643 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@728182a4
18:38:41,643 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@728182a4
18:38:41,643 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@24e8848d
18:38:41,644 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@24e8848d
18:38:41,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@24e8848d
18:38:41,645 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@10367db4
18:38:41,645 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@10367db4
18:38:41,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@10367db4
18:38:41,646 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6a416688
18:38:41,646 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6a416688
18:38:41,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a416688
18:38:41,647 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4565ff0e
18:38:41,647 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4565ff0e
18:38:41,647 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4565ff0e
18:38:41,648 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9973245
18:38:41,648 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@9973245
18:38:41,648 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9973245
18:38:41,649 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7c1d6d
18:38:41,649 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7c1d6d
18:38:41,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7c1d6d
18:38:41,650 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4dead3e5
18:38:41,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4dead3e5
18:38:41,651 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14838431
18:38:41,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14838431
18:38:41,651 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@55d57bbe
18:38:41,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@55d57bbe
18:38:41,652 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@15fb08c9
18:38:41,652 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47c47817
18:38:41,653 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@2ebd9c36
18:38:41,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ebd9c36
18:38:41,654 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@31a2d896
18:38:41,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@31a2d896
18:38:41,656 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3a3093fd
18:38:41,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a3093fd
18:38:41,657 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@9c852aa
18:38:41,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@9c852aa
18:38:41,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@9c852aa
18:38:41,658 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c8b70cb
18:38:41,659 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@73119a38
18:38:41,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73119a38
18:38:41,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73119a38
18:38:41,660 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6331b47b
18:38:41,660 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@42e014a3
18:38:41,660 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@42e014a3
18:38:41,661 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7aaa607c
18:38:41,661 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7aaa607c
18:38:41,662 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@62256deb
18:38:41,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62256deb
18:38:41,662 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3a3ee7ba
18:38:41,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a3ee7ba
18:38:41,663 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38489be1
18:38:41,663 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38489be1
18:38:41,664 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3d28edd9
18:38:41,664 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7d09d38b
18:38:41,664 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d09d38b
18:38:41,665 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7d09d38b
18:38:41,665 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@778cc52e
18:38:41,665 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@778cc52e
18:38:41,665 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@778cc52e
18:38:41,666 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2c31111d
18:38:41,666 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@21948955
18:38:41,667 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@21948955
18:38:41,667 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@21948955
18:38:41,667 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@602c342f
18:38:41,667 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@602c342f
18:38:41,667 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@602c342f
18:38:41,668 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3864c398
18:38:41,668 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@45c6b81b
18:38:41,671 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@60e056d3
18:38:41,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60e056d3
18:38:41,671 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@352461a2
18:38:41,674 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77ccd144
18:38:41,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77ccd144
18:38:41,676 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@a1f4949
18:38:41,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a1f4949
18:38:41,676 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2122fd1b
18:38:41,676 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f9085f
18:38:41,677 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4883493
18:38:41,679 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@489968e3
18:38:41,679 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@489968e3
18:38:41,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@425759b6
18:38:41,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@410aff6f
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@19192127
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f1d01c4
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@577f7778
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@41181b7f
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11d81a62
18:38:41,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@560c3abc
18:38:41,874  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:38:41,895  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:38:42,878  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:38:41 PDT 2015]; root of context hierarchy
18:38:42,901  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:38:41 PDT 2015]; root of context hierarchy
18:38:43,043  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@6d2b56a0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e2dfbb9, org.springframework.security.web.header.HeaderWriterFilter@e7be218, org.springframework.security.web.csrf.CsrfFilter@4c405374, org.courseregistration.auth.CustomRestSecurityFilter@7b69920a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ad84eed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6b62108c, org.springframework.security.web.access.ExceptionTranslationFilter@25f73567, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12b90a11]
18:38:43,084  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:38:41 PDT 2015]; root of context hierarchy
18:38:43,135  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2098 ms
18:38:58,451  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:38:41 PDT 2015]; root of context hierarchy
18:38:58,462  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:39:03,421  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:39:03,471  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:39:03 PDT 2015]; root of context hierarchy
18:39:03,491  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:39:03,682  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:39:03,684  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:39:03,704  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:39:03,713  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:39:03,800  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:39:03,801  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:39:03,865  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:39:03,915  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:39:03,938  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:39:03,956  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:39:04,001  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:39:04,002  INFO Environment:213 - HHH000206: hibernate.properties not found
18:39:04,003  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:39:04,031  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:39:04,106 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:39:04,106 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:39:04,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:39:04,107 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:39:04,107 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:39:04,108 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:39:04,109 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:39:04,109 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:39:04,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:39:04,110 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:39:04,110 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:39:04,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:39:04,111 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:39:04,111 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:39:04,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:39:04,112 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:39:04,112 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:39:04,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:39:04,113 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:39:04,113 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:39:04,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:39:04,114 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:39:04,115 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:39:04,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:39:04,116 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:39:04,116 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:39:04,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:39:04,117 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:39:04,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:39:04,118 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:39:04,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:39:04,119 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:39:04,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:39:04,120 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:39:04,120 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:39:04,121 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:39:04,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:39:04,123 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:39:04,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:39:04,124 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:39:04,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:39:04,125 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:39:04,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:39:04,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:39:04,126 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:39:04,127 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:39:04,127 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:39:04,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:39:04,128 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:39:04,129 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:39:04,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:39:04,129 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:39:04,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:39:04,130 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:39:04,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:39:04,131 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:39:04,131 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:39:04,132 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:39:04,132 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:39:04,132 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:39:04,133 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:39:04,133 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:39:04,133 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:39:04,134 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:39:04,134 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:39:04,134 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:39:04,135 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:39:04,135 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:39:04,136 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:39:04,136 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:39:04,136 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:39:04,137 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:39:04,137 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:39:04,137 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:39:04,138 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:39:04,140 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:39:04,140 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:39:04,141 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:39:04,143 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:39:04,144 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:39:04,146 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:39:04,146 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:39:04,146 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:39:04,147 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:39:04,147 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:39:04,150 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:39:04,150 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:39:04,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:39:04,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:39:04,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:39:04,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:39:04,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:39:04,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:39:04,152 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:39:04,152 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:39:04,468  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:39:04,492  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:39:05,491  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:03 PDT 2015]; root of context hierarchy
18:39:05,515  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:03 PDT 2015]; root of context hierarchy
18:39:05,643  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:39:05,680  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:03 PDT 2015]; root of context hierarchy
18:39:05,729  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2307 ms
18:39:10,738 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7bc8d9ca
18:39:10,738  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:39:10,760 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:39:10,767 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:39:10,768 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,786 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:39:10,799 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:39:10,800 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:39:10,803 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:39:10,804 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:39:10,804 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:39:10,806 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:39:10,806 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:39:10,811 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:39:10,812 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:39:10,813 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:39:10,813 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,819 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:39:10,819 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:39:10,819 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,838 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:39:10,868 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:39:10,878 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:39:10,920 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:39:10,921 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:39:10,922 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,922 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:39:10,922 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:39:10,922 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:39:10,923 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:39:10,924 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:39:10,924 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:39:10,925 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:39:10,925 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:39:10,925 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:39:10,926 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:39:10,926 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:39:10,926 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:39:10,926 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:39:10,926 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:39:10,927 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:39:10,927 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:39:10,927 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:39:10,928 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:39:10,928 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:39:10,928 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,929 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:39:10,929 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:39:10,929 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:39:10,929 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:39:10,936 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:39:10,937 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:39:10,939 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:39:10,940 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:39:10,943 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:39:10,945 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:39:10,946 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:39:10,947 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:41:40,437  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:39:03 PDT 2015]; root of context hierarchy
18:41:40,443  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:41:45,545  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:41:45,594  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:41:45 PDT 2015]; root of context hierarchy
18:41:45,614  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:41:45,790  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:41:45,792  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:41:45,810  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:41:45,819  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:41:45,905  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:41:45,906  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:41:45,970  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:41:46,016  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:41:46,038  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:41:46,058  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:41:46,106  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:41:46,107  INFO Environment:213 - HHH000206: hibernate.properties not found
18:41:46,109  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:41:46,137  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:41:46,207 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:41:46,207 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:41:46,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:41:46,208 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:41:46,209 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:41:46,209 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:41:46,210 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:41:46,210 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:41:46,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:41:46,211 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:41:46,211 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:41:46,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:41:46,212 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:41:46,212 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:41:46,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:41:46,213 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:41:46,213 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:41:46,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:41:46,214 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:41:46,214 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:41:46,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:41:46,215 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:41:46,215 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:41:46,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:41:46,216 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:41:46,216 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:41:46,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:41:46,218 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:41:46,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:41:46,218 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:41:46,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:41:46,219 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:41:46,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:41:46,220 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:41:46,220 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:41:46,221 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:41:46,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:41:46,222 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:41:46,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:41:46,223 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:41:46,224 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:41:46,225 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:41:46,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:41:46,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:41:46,226 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:41:46,227 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:41:46,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:41:46,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:41:46,228 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:41:46,228 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:41:46,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:41:46,229 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:41:46,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:41:46,230 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:41:46,230 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:41:46,230 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:41:46,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:41:46,231 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:41:46,232 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:41:46,232 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:41:46,233 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:41:46,233 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:41:46,233 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:41:46,234 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:41:46,234 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:41:46,234 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:41:46,234 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:41:46,235 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:41:46,235 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:41:46,235 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:41:46,236 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:41:46,236 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:41:46,236 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:41:46,237 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:41:46,237 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:41:46,239 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:41:46,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:41:46,240 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:41:46,242 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:41:46,242 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:41:46,244 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:41:46,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:41:46,244 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:41:46,245 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:41:46,245 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:41:46,247 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:41:46,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:41:46,247 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:41:46,247 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:41:46,248 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:41:46,248 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:41:46,248 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:41:46,248 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:41:46,248 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:41:46,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:41:46,556  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:41:46,581  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:41:47,584  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:41:45 PDT 2015]; root of context hierarchy
18:41:47,609  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:41:45 PDT 2015]; root of context hierarchy
18:41:47,751  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:41:47,794  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:41:45 PDT 2015]; root of context hierarchy
18:41:47,848  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2301 ms
18:42:13,442 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@75036ca0
18:42:13,443  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:42:13,464 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:42:13,472 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:42:13,473 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,491 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:42:13,505 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:42:13,506 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:42:13,508 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:42:13,509 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:42:13,509 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:42:13,511 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:42:13,511 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:42:13,517 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:42:13,517 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:42:13,517 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:42:13,518 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,523 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:42:13,523 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:42:13,524 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,544 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:42:13,574 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:42:13,585 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:42:13,617 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:42:13,619 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:42:13,619 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,619 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:42:13,620 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:42:13,620 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:42:13,621 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:42:13,621 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:42:13,622 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:42:13,622 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:42:13,623 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:42:13,623 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:42:13,623 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:42:13,623 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:42:13,624 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:42:13,624 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:42:13,624 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:42:13,624 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:42:13,625 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:42:13,625 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:42:13,625 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:42:13,626 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:42:13,626 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,626 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:42:13,626 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:42:13,627 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:42:13,627 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:42:13,632 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:42:13,634 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:42:13,638 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:42:13,640 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:42:13,642 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:42:13,644 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:42:13,645 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:42:13,647 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:42:53,356 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:42:53,362 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:42:53,363 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:42:53,368 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
18:44:40,909  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:41:45 PDT 2015]; root of context hierarchy
18:44:40,918  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:44:41,935  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:44:41,979  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:42,001  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:44:42,128  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:44:42,130  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:44:42,146  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:44:42,155  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
