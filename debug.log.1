00:00:43,357 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:00:43,369 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by code asc
00:00:43,369 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
00:00:43,370 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:00:43,409 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
00:01:19,279  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
00:01:19,370  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 00:01:19 PDT 2015]; root of context hierarchy
00:01:19,398  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
00:01:19,885  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
00:01:19,974  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
00:01:20,021  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
00:01:20,047  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
00:01:20,140  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
00:01:20,143  INFO Environment:213 - HHH000206: hibernate.properties not found
00:01:20,145  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
00:01:20,193  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
00:01:20,267 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4407fea2
00:01:20,268 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4407fea2
00:01:20,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4407fea2
00:01:20,269 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b7a4c83
00:01:20,270 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@424ec990
00:01:20,272 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@392ef4ff
00:01:20,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@684f7f1c
00:01:20,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@684f7f1c
00:01:20,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@684f7f1c
00:01:20,275 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@31cd0efa
00:01:20,275 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@31cd0efa
00:01:20,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@31cd0efa
00:01:20,277 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6219006a
00:01:20,277 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6219006a
00:01:20,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6219006a
00:01:20,279 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27bf574b
00:01:20,279 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27bf574b
00:01:20,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27bf574b
00:01:20,281 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@43a8bd35
00:01:20,282 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@43a8bd35
00:01:20,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@43a8bd35
00:01:20,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@64829470
00:01:20,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@64829470
00:01:20,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@64829470
00:01:20,286 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@c247363
00:01:20,286 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@c247363
00:01:20,286 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c247363
00:01:20,289 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46ff1aad
00:01:20,289 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46ff1aad
00:01:20,290 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d2950ed
00:01:20,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d2950ed
00:01:20,292 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7b33deed
00:01:20,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7b33deed
00:01:20,294 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3713bedc
00:01:20,295 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@24a7725d
00:01:20,296 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3e5cbcfe
00:01:20,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3e5cbcfe
00:01:20,298 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@10728fe8
00:01:20,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10728fe8
00:01:20,300 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@ca0a21f
00:01:20,301 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@ca0a21f
00:01:20,302 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e38d44e
00:01:20,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e38d44e
00:01:20,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e38d44e
00:01:20,306 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5e66733b
00:01:20,307 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@34d3bfca
00:01:20,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@34d3bfca
00:01:20,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@34d3bfca
00:01:20,309 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19d13d04
00:01:20,310 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7491cdae
00:01:20,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7491cdae
00:01:20,312 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@25b8f9d2
00:01:20,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@25b8f9d2
00:01:20,314 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@646bf8a6
00:01:20,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@646bf8a6
00:01:20,315 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@33239d72
00:01:20,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@33239d72
00:01:20,316 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@563ab6d5
00:01:20,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@563ab6d5
00:01:20,317 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3aa63b53
00:01:20,319 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@552fffc8
00:01:20,319 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@552fffc8
00:01:20,320 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@552fffc8
00:01:20,321 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@41bbdd8a
00:01:20,321 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@41bbdd8a
00:01:20,322 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@41bbdd8a
00:01:20,322 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7e28f150
00:01:20,324 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@35efd12c
00:01:20,324 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@35efd12c
00:01:20,324 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@35efd12c
00:01:20,325 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4d93e5bf
00:01:20,325 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4d93e5bf
00:01:20,326 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4d93e5bf
00:01:20,327 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@556843a5
00:01:20,328 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2213854b
00:01:20,331 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@340c7479
00:01:20,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@340c7479
00:01:20,332 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6e5af973
00:01:20,336 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@75db328e
00:01:20,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75db328e
00:01:20,339 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@49005dc4
00:01:20,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@49005dc4
00:01:20,340 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ab826bb
00:01:20,341 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5b7b0ada
00:01:20,342 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@515d615
00:01:20,345 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@486bcaa
00:01:20,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@486bcaa
00:01:20,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ec8db0c
00:01:20,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f1a5b93
00:01:20,346 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22ee1ad7
00:01:20,347 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5dd2ea0a
00:01:20,347 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@65fa4a07
00:01:20,347 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@782143e8
00:01:20,347 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a4bd699
00:01:20,347 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6003eb60
00:01:20,771  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
00:01:20,812  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
00:01:22,727  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:01:19 PDT 2015]; root of context hierarchy
00:01:22,775  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:01:19 PDT 2015]; root of context hierarchy
00:01:22,908  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3627 ms
00:01:29,442 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@283920ee
00:01:29,443  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
00:01:29,470 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by code asc
00:01:29,478 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

00:01:29,478 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:01:29,514 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
00:01:29,541 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
00:01:29,543 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
00:01:29,545 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@7b33deed
00:01:29,546 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.code -> course0_.code
00:01:29,546 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
00:01:29,547 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.code {synthetic-alias} code ) asc ) )
00:01:29,554 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
00:01:29,560 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
00:01:29,560 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
00:01:29,561 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path={synthetic-alias}.code,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

00:01:29,562 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:01:29,573 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by code asc
00:01:29,573 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
00:01:29,573 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:01:29,613 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
00:46:39,173  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
00:46:39,293  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 00:46:39 PDT 2015]; root of context hierarchy
00:46:39,332  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
00:46:39,837  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
00:46:39,938  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
00:46:39,984  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
00:46:40,011  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
00:46:40,095  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
00:46:40,099  INFO Environment:213 - HHH000206: hibernate.properties not found
00:46:40,101  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
00:46:40,154  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
00:46:40,239 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@14bd523b
00:46:40,239 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@14bd523b
00:46:40,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14bd523b
00:46:40,240 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@ca0a21f
00:46:40,241 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e38d44e
00:46:40,243 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@20e3b165
00:46:40,244 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7b92ea9d
00:46:40,244 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7b92ea9d
00:46:40,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7b92ea9d
00:46:40,245 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@697b48e4
00:46:40,246 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@697b48e4
00:46:40,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@697b48e4
00:46:40,250 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@646bf8a6
00:46:40,251 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@646bf8a6
00:46:40,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@646bf8a6
00:46:40,252 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@33239d72
00:46:40,253 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@33239d72
00:46:40,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@33239d72
00:46:40,255 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@59c00010
00:46:40,256 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@59c00010
00:46:40,256 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@59c00010
00:46:40,258 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@21046afa
00:46:40,258 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@21046afa
00:46:40,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21046afa
00:46:40,260 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41bbdd8a
00:46:40,260 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41bbdd8a
00:46:40,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41bbdd8a
00:46:40,262 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@35efd12c
00:46:40,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@35efd12c
00:46:40,263 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d93e5bf
00:46:40,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d93e5bf
00:46:40,264 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@556843a5
00:46:40,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@556843a5
00:46:40,266 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2213854b
00:46:40,267 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50f6ecab
00:46:40,268 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@764a3867
00:46:40,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@764a3867
00:46:40,270 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@58932d08
00:46:40,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58932d08
00:46:40,273 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@79e9c14
00:46:40,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79e9c14
00:46:40,275 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3adeca1f
00:46:40,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3adeca1f
00:46:40,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3adeca1f
00:46:40,277 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@448a6d00
00:46:40,278 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@43e30f15
00:46:40,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43e30f15
00:46:40,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43e30f15
00:46:40,280 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@746da54f
00:46:40,280 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@766db6f9
00:46:40,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@766db6f9
00:46:40,283 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@bd09a26
00:46:40,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@bd09a26
00:46:40,285 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1c06f19c
00:46:40,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1c06f19c
00:46:40,286 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@7e2e0b8a
00:46:40,286 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7e2e0b8a
00:46:40,288 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@726a5e6a
00:46:40,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@726a5e6a
00:46:40,289 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@74faf450
00:46:40,290 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6ab826bb
00:46:40,291 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ab826bb
00:46:40,291 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6ab826bb
00:46:40,292 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1d6a0962
00:46:40,293 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1d6a0962
00:46:40,293 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1d6a0962
00:46:40,294 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3c74d846
00:46:40,294 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@66859ea9
00:46:40,295 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@66859ea9
00:46:40,295 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@66859ea9
00:46:40,296 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@41b2123e
00:46:40,296 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@41b2123e
00:46:40,296 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@41b2123e
00:46:40,297 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4f1a5b93
00:46:40,298 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2a4bd699
00:46:40,302 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@337fb1a5
00:46:40,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@337fb1a5
00:46:40,303 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@73eae5f
00:46:40,306 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4271b748
00:46:40,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4271b748
00:46:40,309 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@40105b39
00:46:40,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40105b39
00:46:40,310 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54a5799f
00:46:40,311 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2b3d03b2
00:46:40,312 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@647ce968
00:46:40,315 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@4777f71e
00:46:40,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4777f71e
00:46:40,317 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3a47bf0e
00:46:40,317 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4270705f
00:46:40,317 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f69b0ba
00:46:40,318 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63537871
00:46:40,318 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@64eb14da
00:46:40,318 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25587290
00:46:40,319 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@716eae1
00:46:40,319 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7ffe8a82
00:46:40,783  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
00:46:40,823  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
00:46:43,561  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:46:39 PDT 2015]; root of context hierarchy
00:46:43,612  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:46:39 PDT 2015]; root of context hierarchy
00:46:43,742  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4564 ms
00:46:45,700 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@522c8cda
00:46:45,701  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
00:46:45,736 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
00:46:45,748 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

00:46:45,748 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:46:45,776 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
00:46:45,801 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
00:46:45,803 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
00:46:45,805 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@556843a5
00:46:45,806 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
00:46:45,807 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
00:46:45,807 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
00:46:45,815 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
00:46:45,821 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
00:46:45,822 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
00:46:45,824 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

00:46:45,825 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:46:45,836 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
00:46:45,836 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
00:46:45,836 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:46:45,868 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
00:48:40,330  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
00:48:40,422  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 00:48:40 PDT 2015]; root of context hierarchy
00:48:40,457  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
00:48:40,928  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
00:48:41,037  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
00:48:41,085  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
00:48:41,113  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
00:48:41,194  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
00:48:41,196  INFO Environment:213 - HHH000206: hibernate.properties not found
00:48:41,198  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
00:48:41,253  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
00:48:41,327 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@42012093
00:48:41,328 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@42012093
00:48:41,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@42012093
00:48:41,329 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d432d56
00:48:41,330 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e66733b
00:48:41,332 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2484c868
00:48:41,334 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3050d479
00:48:41,334 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3050d479
00:48:41,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3050d479
00:48:41,336 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2979c6ef
00:48:41,337 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2979c6ef
00:48:41,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2979c6ef
00:48:41,339 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@8c34631
00:48:41,339 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@8c34631
00:48:41,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@8c34631
00:48:41,340 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@97cb8dc
00:48:41,341 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@97cb8dc
00:48:41,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@97cb8dc
00:48:41,343 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@548f4f60
00:48:41,343 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@548f4f60
00:48:41,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@548f4f60
00:48:41,345 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d035815
00:48:41,345 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@6d035815
00:48:41,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6d035815
00:48:41,347 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@792eeae6
00:48:41,348 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@792eeae6
00:48:41,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@792eeae6
00:48:41,351 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17e8c38c
00:48:41,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17e8c38c
00:48:41,353 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ec23ec3
00:48:41,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ec23ec3
00:48:41,355 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@b386a17
00:48:41,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@b386a17
00:48:41,356 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c857e8f
00:48:41,357 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@e1c91cd
00:48:41,359 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4b9dc62f
00:48:41,359 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4b9dc62f
00:48:41,362 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2d117280
00:48:41,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d117280
00:48:41,364 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1d57b8f1
00:48:41,365 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d57b8f1
00:48:41,367 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@448a6d00
00:48:41,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448a6d00
00:48:41,368 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448a6d00
00:48:41,370 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1add3e03
00:48:41,372 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@746da54f
00:48:41,372 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@746da54f
00:48:41,373 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@746da54f
00:48:41,373 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2ce62e27
00:48:41,374 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@244f356
00:48:41,374 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@244f356
00:48:41,375 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@46d18a33
00:48:41,376 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@46d18a33
00:48:41,377 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a8bf1dc
00:48:41,377 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a8bf1dc
00:48:41,378 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@584fb03d
00:48:41,379 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@584fb03d
00:48:41,380 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74faf450
00:48:41,381 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74faf450
00:48:41,381 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6a2057e
00:48:41,382 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5b7b0ada
00:48:41,382 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b7b0ada
00:48:41,382 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5b7b0ada
00:48:41,384 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@488b46da
00:48:41,384 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@488b46da
00:48:41,384 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@488b46da
00:48:41,385 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3b3190fd
00:48:41,387 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@320efff5
00:48:41,388 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@320efff5
00:48:41,388 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@320efff5
00:48:41,389 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2f3a0f37
00:48:41,390 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2f3a0f37
00:48:41,390 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2f3a0f37
00:48:41,391 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@65fa4a07
00:48:41,392 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2552181d
00:48:41,395 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@73eae5f
00:48:41,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@73eae5f
00:48:41,396 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b62f1ba
00:48:41,398 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@43e86c0c
00:48:41,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@43e86c0c
00:48:41,401 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@54a5799f
00:48:41,402 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@54a5799f
00:48:41,402 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b3d03b2
00:48:41,403 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2cc9a948
00:48:41,404 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@74a3160d
00:48:41,407 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3a47bf0e
00:48:41,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3a47bf0e
00:48:41,408 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@63537871
00:48:41,409 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64eb14da
00:48:41,409 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25587290
00:48:41,409 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@716eae1
00:48:41,409 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ffe8a82
00:48:41,409 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@430f0c63
00:48:41,410 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@25a52a60
00:48:41,410 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@15549dd7
00:48:41,861  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
00:48:41,903  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
00:48:43,736  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:48:40 PDT 2015]; root of context hierarchy
00:48:43,793  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 00:48:40 PDT 2015]; root of context hierarchy
00:48:43,922  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3589 ms
00:48:53,836 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2471abf9
00:48:53,838  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
00:48:53,870 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
00:48:53,879 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

00:48:53,880 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:48:53,903 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
00:48:53,924 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
00:48:53,926 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
00:48:53,927 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@b386a17
00:48:53,928 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
00:48:53,929 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
00:48:53,929 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
00:48:53,938 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
00:48:53,946 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
00:48:53,946 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
00:48:53,947 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

00:48:53,947 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:48:53,960 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
00:48:53,961 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
00:48:53,961 DEBUG ErrorCounter:95 - throwQueryException() : no errors
00:48:53,993 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:22:39,607  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:22:39,694  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:22:39 PDT 2015]; root of context hierarchy
01:22:39,731  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:22:40,202  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:22:40,305  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:22:40,347  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:22:40,380  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:22:40,479  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:22:40,483  INFO Environment:213 - HHH000206: hibernate.properties not found
01:22:40,485  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:22:40,548  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:22:40,649 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:22:40,650 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:22:40,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2213854b
01:22:40,652 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50f6ecab
01:22:40,655 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67e1a5fd
01:22:40,658 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@28d16af8
01:22:40,660 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:22:40,661 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:22:40,661 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21bd6fd1
01:22:40,662 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6e5af973
01:22:40,663 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6e5af973
01:22:40,663 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e5af973
01:22:40,665 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:22:40,665 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:22:40,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@848d9bc
01:22:40,667 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fc2933e
01:22:40,668 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fc2933e
01:22:40,668 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fc2933e
01:22:40,670 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:22:40,671 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:22:40,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@766db6f9
01:22:40,673 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:22:40,674 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:22:40,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495f3965
01:22:40,679 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:22:40,679 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:22:40,679 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f5f7731
01:22:40,682 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b889cb6
01:22:40,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b889cb6
01:22:40,684 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ab826bb
01:22:40,684 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ab826bb
01:22:40,686 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3c4e23be
01:22:40,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c4e23be
01:22:40,687 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e777b0
01:22:40,689 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@219dd935
01:22:40,691 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@78b44fcb
01:22:40,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@78b44fcb
01:22:40,696 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@65fa4a07
01:22:40,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65fa4a07
01:22:40,698 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2e7e4480
01:22:40,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7e4480
01:22:40,701 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e612122
01:22:40,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e612122
01:22:40,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e612122
01:22:40,704 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@717b0d81
01:22:40,706 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@279e8bc0
01:22:40,707 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@279e8bc0
01:22:40,707 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@279e8bc0
01:22:40,709 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a364e1c
01:22:40,710 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@337fb1a5
01:22:40,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@337fb1a5
01:22:40,712 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7698a3d9
01:22:40,713 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7698a3d9
01:22:40,714 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@92b1bda
01:22:40,715 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@92b1bda
01:22:40,717 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@337eeceb
01:22:40,717 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@337eeceb
01:22:40,719 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4693d24f
01:22:40,719 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4693d24f
01:22:40,720 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d36add1
01:22:40,721 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@43e86c0c
01:22:40,722 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@43e86c0c
01:22:40,722 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@43e86c0c
01:22:40,724 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77925f76
01:22:40,724 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77925f76
01:22:40,725 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77925f76
01:22:40,726 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6a8da5c5
01:22:40,729 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7488c183
01:22:40,729 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7488c183
01:22:40,729 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7488c183
01:22:40,731 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54a5799f
01:22:40,731 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54a5799f
01:22:40,731 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54a5799f
01:22:40,732 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@332fa6ce
01:22:40,734 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4bc9451b
01:22:40,739 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@25a2c4dc
01:22:40,739 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25a2c4dc
01:22:40,740 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2bee1c13
01:22:40,745 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6f651ac
01:22:40,746 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f651ac
01:22:40,750 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@35fac3ba
01:22:40,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35fac3ba
01:22:40,752 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b2efcae
01:22:40,753 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@346690d6
01:22:40,755 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@c8531b9
01:22:40,758 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@72015156
01:22:40,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72015156
01:22:40,760 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e67e090
01:22:40,761 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361483eb
01:22:40,761 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14983265
01:22:40,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35e357b
01:22:40,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@724c26e0
01:22:40,762 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6055e899
01:22:40,763 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@350be5ec
01:22:40,763 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478cebdb
01:22:41,278  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:22:41,313  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:22:43,179  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:22:39 PDT 2015]; root of context hierarchy
01:22:43,241  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:22:39 PDT 2015]; root of context hierarchy
01:22:43,416  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3807 ms
01:22:52,796 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@61548b24
01:22:52,798  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
01:22:52,847 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
01:22:52,862 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

01:22:52,862 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:22:52,891 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
01:22:52,919 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
01:22:52,921 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
01:22:52,923 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@3c4e23be
01:22:52,928 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
01:22:52,928 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
01:22:52,930 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
01:22:52,940 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
01:22:52,945 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
01:22:52,946 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
01:22:52,947 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

01:22:52,947 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:22:52,961 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
01:22:52,962 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:22:52,962 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:22:52,990 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:23:32,270 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:27:31,555  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:27:31,628  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:27:31 PDT 2015]; root of context hierarchy
01:27:31,659  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:27:32,154  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:27:32,240  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:27:32,295  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:27:32,343  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:27:32,506  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:27:32,510  INFO Environment:213 - HHH000206: hibernate.properties not found
01:27:32,513  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:27:32,645  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:27:32,811 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:27:32,811 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:27:32,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2213854b
01:27:32,813 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50f6ecab
01:27:32,815 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67e1a5fd
01:27:32,817 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@28d16af8
01:27:32,818 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:27:32,818 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:27:32,818 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21bd6fd1
01:27:32,819 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6e5af973
01:27:32,819 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6e5af973
01:27:32,820 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e5af973
01:27:32,821 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:27:32,821 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:27:32,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@848d9bc
01:27:32,823 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fc2933e
01:27:32,823 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fc2933e
01:27:32,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fc2933e
01:27:32,825 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:27:32,825 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:27:32,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@766db6f9
01:27:32,827 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:27:32,827 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:27:32,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495f3965
01:27:32,829 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:27:32,829 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:27:32,829 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f5f7731
01:27:32,831 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b889cb6
01:27:32,832 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b889cb6
01:27:32,835 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ab826bb
01:27:32,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ab826bb
01:27:32,837 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3c4e23be
01:27:32,838 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c4e23be
01:27:32,839 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e777b0
01:27:32,840 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@219dd935
01:27:32,841 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@78b44fcb
01:27:32,841 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@78b44fcb
01:27:32,843 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@65fa4a07
01:27:32,844 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65fa4a07
01:27:32,845 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2e7e4480
01:27:32,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7e4480
01:27:32,848 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e612122
01:27:32,849 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e612122
01:27:32,849 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e612122
01:27:32,851 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@717b0d81
01:27:32,853 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@279e8bc0
01:27:32,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@279e8bc0
01:27:32,854 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@279e8bc0
01:27:32,855 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a364e1c
01:27:32,856 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@337fb1a5
01:27:32,856 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@337fb1a5
01:27:32,858 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7698a3d9
01:27:32,859 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7698a3d9
01:27:32,860 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@92b1bda
01:27:32,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@92b1bda
01:27:32,861 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@337eeceb
01:27:32,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@337eeceb
01:27:32,865 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4693d24f
01:27:32,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4693d24f
01:27:32,866 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d36add1
01:27:32,868 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@43e86c0c
01:27:32,868 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@43e86c0c
01:27:32,868 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@43e86c0c
01:27:32,869 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77925f76
01:27:32,869 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77925f76
01:27:32,869 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77925f76
01:27:32,870 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6a8da5c5
01:27:32,871 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7488c183
01:27:32,872 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7488c183
01:27:32,872 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7488c183
01:27:32,873 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54a5799f
01:27:32,874 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54a5799f
01:27:32,874 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54a5799f
01:27:32,875 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@332fa6ce
01:27:32,875 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4bc9451b
01:27:32,878 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@25a2c4dc
01:27:32,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25a2c4dc
01:27:32,880 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2bee1c13
01:27:32,883 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6f651ac
01:27:32,883 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f651ac
01:27:32,887 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@35fac3ba
01:27:32,887 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35fac3ba
01:27:32,888 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b2efcae
01:27:32,888 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@346690d6
01:27:32,890 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@c8531b9
01:27:32,892 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@72015156
01:27:32,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72015156
01:27:32,894 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e67e090
01:27:32,894 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361483eb
01:27:32,894 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14983265
01:27:32,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35e357b
01:27:32,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@724c26e0
01:27:32,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6055e899
01:27:32,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@350be5ec
01:27:32,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478cebdb
01:27:33,345  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:27:33,388  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:27:35,531  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:27:31 PDT 2015]; root of context hierarchy
01:27:35,579  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:27:31 PDT 2015]; root of context hierarchy
01:27:35,765  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4208 ms
01:28:18,277  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:28:18,380  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:28:18 PDT 2015]; root of context hierarchy
01:28:18,419  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:28:18,896  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:28:19,000  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:28:19,044  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:28:19,082  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:28:19,176  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:28:19,178  INFO Environment:213 - HHH000206: hibernate.properties not found
01:28:19,180  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:28:19,237  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:28:19,308 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:28:19,309 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2213854b
01:28:19,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2213854b
01:28:19,310 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50f6ecab
01:28:19,311 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@67e1a5fd
01:28:19,313 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@28d16af8
01:28:19,314 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:28:19,315 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@21bd6fd1
01:28:19,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21bd6fd1
01:28:19,316 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6e5af973
01:28:19,317 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6e5af973
01:28:19,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e5af973
01:28:19,320 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:28:19,320 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@848d9bc
01:28:19,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@848d9bc
01:28:19,322 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4fc2933e
01:28:19,323 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4fc2933e
01:28:19,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4fc2933e
01:28:19,325 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:28:19,326 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@766db6f9
01:28:19,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@766db6f9
01:28:19,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:28:19,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@495f3965
01:28:19,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@495f3965
01:28:19,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:28:19,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7f5f7731
01:28:19,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f5f7731
01:28:19,331 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b889cb6
01:28:19,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b889cb6
01:28:19,332 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ab826bb
01:28:19,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ab826bb
01:28:19,333 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3c4e23be
01:28:19,334 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c4e23be
01:28:19,335 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e777b0
01:28:19,336 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@219dd935
01:28:19,337 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@78b44fcb
01:28:19,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@78b44fcb
01:28:19,339 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@65fa4a07
01:28:19,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@65fa4a07
01:28:19,341 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2e7e4480
01:28:19,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7e4480
01:28:19,343 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e612122
01:28:19,343 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e612122
01:28:19,344 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e612122
01:28:19,346 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@717b0d81
01:28:19,347 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@279e8bc0
01:28:19,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@279e8bc0
01:28:19,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@279e8bc0
01:28:19,350 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a364e1c
01:28:19,351 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@337fb1a5
01:28:19,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@337fb1a5
01:28:19,353 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7698a3d9
01:28:19,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7698a3d9
01:28:19,355 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@92b1bda
01:28:19,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@92b1bda
01:28:19,358 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@337eeceb
01:28:19,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@337eeceb
01:28:19,360 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4693d24f
01:28:19,360 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4693d24f
01:28:19,360 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d36add1
01:28:19,362 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@43e86c0c
01:28:19,362 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@43e86c0c
01:28:19,363 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@43e86c0c
01:28:19,364 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77925f76
01:28:19,364 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77925f76
01:28:19,364 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77925f76
01:28:19,365 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6a8da5c5
01:28:19,366 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7488c183
01:28:19,366 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7488c183
01:28:19,366 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7488c183
01:28:19,367 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@54a5799f
01:28:19,368 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@54a5799f
01:28:19,368 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@54a5799f
01:28:19,369 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@332fa6ce
01:28:19,369 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4bc9451b
01:28:19,373 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@25a2c4dc
01:28:19,374 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@25a2c4dc
01:28:19,374 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2bee1c13
01:28:19,377 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6f651ac
01:28:19,378 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f651ac
01:28:19,380 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@35fac3ba
01:28:19,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35fac3ba
01:28:19,380 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b2efcae
01:28:19,381 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@346690d6
01:28:19,382 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@c8531b9
01:28:19,387 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@72015156
01:28:19,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72015156
01:28:19,388 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e67e090
01:28:19,388 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@361483eb
01:28:19,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@14983265
01:28:19,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35e357b
01:28:19,389 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@724c26e0
01:28:19,390 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6055e899
01:28:19,390 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@350be5ec
01:28:19,390 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478cebdb
01:28:19,701  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:28:19,746  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:28:21,682  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:28:18 PDT 2015]; root of context hierarchy
01:28:21,729  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:28:18 PDT 2015]; root of context hierarchy
01:28:21,873  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3593 ms
01:28:35,335 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@20b7542b
01:28:35,337  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
01:28:35,380 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
01:28:35,390 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

01:28:35,390 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:28:35,443 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
01:28:35,493 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
01:28:35,495 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
01:28:35,500 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@3c4e23be
01:28:35,501 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
01:28:35,501 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
01:28:35,502 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
01:28:35,533 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
01:28:35,561 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
01:28:35,564 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
01:28:35,568 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

01:28:35,568 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:28:35,589 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
01:28:35,589 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:28:35,590 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:28:35,640 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:31:04,910  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:31:05,001  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:31:04 PDT 2015]; root of context hierarchy
01:31:05,045  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:31:05,524  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:31:05,648  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:31:05,723  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:31:05,753  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:31:05,824  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:31:05,827  INFO Environment:213 - HHH000206: hibernate.properties not found
01:31:05,829  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:31:05,881  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:31:05,952 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:31:05,952 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:31:05,953 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:31:05,954 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@603faaad
01:31:05,956 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c2be147
01:31:05,958 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e5af973
01:31:05,959 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:31:05,959 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:31:05,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@848d9bc
01:31:05,961 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4fc2933e
01:31:05,962 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4fc2933e
01:31:05,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fc2933e
01:31:05,966 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:31:05,966 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:31:05,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@766db6f9
01:31:05,969 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@bd09a26
01:31:05,970 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@bd09a26
01:31:05,970 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bd09a26
01:31:05,972 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:31:05,972 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:31:05,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aaf6bfd
01:31:05,976 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:31:05,976 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:31:05,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43efe064
01:31:05,978 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:31:05,978 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:31:05,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c37dab
01:31:05,981 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:31:05,981 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:31:05,983 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17fa14a3
01:31:05,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17fa14a3
01:31:05,984 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4a9412c4
01:31:05,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a9412c4
01:31:05,986 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41b2123e
01:31:05,987 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f1a5b93
01:31:05,988 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@2a4bd699
01:31:05,988 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4bd699
01:31:05,990 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f4fc18
01:31:05,991 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f4fc18
01:31:05,993 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4d793390
01:31:05,993 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d793390
01:31:05,995 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@29a50a11
01:31:05,995 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29a50a11
01:31:05,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29a50a11
01:31:05,998 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@328bc067
01:31:06,000 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4902c584
01:31:06,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4902c584
01:31:06,000 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4902c584
01:31:06,001 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39dce2df
01:31:06,002 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@58690f5e
01:31:06,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58690f5e
01:31:06,004 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:31:06,004 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:31:06,006 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3663af34
01:31:06,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3663af34
01:31:06,007 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d36add1
01:31:06,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d36add1
01:31:06,008 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17063c32
01:31:06,009 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17063c32
01:31:06,009 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15a8bbe5
01:31:06,010 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@160e45c8
01:31:06,011 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@160e45c8
01:31:06,011 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@160e45c8
01:31:06,012 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37196d53
01:31:06,012 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37196d53
01:31:06,012 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37196d53
01:31:06,013 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@162e29a1
01:31:06,015 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2cc9a948
01:31:06,016 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2cc9a948
01:31:06,016 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2cc9a948
01:31:06,017 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77978658
01:31:06,018 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77978658
01:31:06,018 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77978658
01:31:06,019 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@63846fa4
01:31:06,020 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@204a02a4
01:31:06,025 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2b66bf1c
01:31:06,025 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b66bf1c
01:31:06,026 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54b35809
01:31:06,029 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@16120270
01:31:06,029 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16120270
01:31:06,032 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3adbd038
01:31:06,033 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3adbd038
01:31:06,033 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193d7ac7
01:31:06,034 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2093bb6c
01:31:06,035 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ac77269
01:31:06,038 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1b3a95d9
01:31:06,039 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b3a95d9
01:31:06,039 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20e41f13
01:31:06,040 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbfd28b
01:31:06,040 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fa50a24
01:31:06,040 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58041b11
01:31:06,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58189b85
01:31:06,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49222187
01:31:06,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e41e6ad
01:31:06,041 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2665a2e7
01:31:06,355  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:31:06,393  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:31:08,267  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:31:04 PDT 2015]; root of context hierarchy
01:31:08,313  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:31:04 PDT 2015]; root of context hierarchy
01:31:08,445  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3532 ms
01:31:14,051 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@67087023
01:31:14,053  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
01:31:14,089 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
01:31:14,100 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

01:31:14,100 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:31:14,125 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
01:31:14,151 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
01:31:14,152 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
01:31:14,154 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@4a9412c4
01:31:14,155 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
01:31:14,156 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
01:31:14,156 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
01:31:14,162 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
01:31:14,171 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
01:31:14,172 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
01:31:14,173 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

01:31:14,173 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:31:14,184 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
01:31:14,184 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:31:14,185 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:31:14,214 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:33:05,190  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:33:05,275  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:33:05 PDT 2015]; root of context hierarchy
01:33:05,312  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:33:05,785  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:33:05,860  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:33:05,926  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:33:05,948  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:33:06,028  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:33:06,030  INFO Environment:213 - HHH000206: hibernate.properties not found
01:33:06,032  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:33:06,070  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:33:06,133 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:33:06,134 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:33:06,134 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:33:06,136 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@603faaad
01:33:06,138 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c2be147
01:33:06,143 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e5af973
01:33:06,145 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:33:06,145 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:33:06,145 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@848d9bc
01:33:06,146 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4fc2933e
01:33:06,147 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4fc2933e
01:33:06,147 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fc2933e
01:33:06,149 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:33:06,149 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:33:06,149 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@766db6f9
01:33:06,151 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@bd09a26
01:33:06,151 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@bd09a26
01:33:06,152 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bd09a26
01:33:06,153 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:33:06,154 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:33:06,154 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aaf6bfd
01:33:06,159 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:33:06,159 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:33:06,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43efe064
01:33:06,160 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:33:06,161 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:33:06,161 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c37dab
01:33:06,162 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:33:06,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:33:06,164 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17fa14a3
01:33:06,164 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17fa14a3
01:33:06,165 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4a9412c4
01:33:06,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a9412c4
01:33:06,166 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41b2123e
01:33:06,166 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f1a5b93
01:33:06,167 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@2a4bd699
01:33:06,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4bd699
01:33:06,169 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f4fc18
01:33:06,169 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f4fc18
01:33:06,171 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4d793390
01:33:06,171 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d793390
01:33:06,172 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@29a50a11
01:33:06,172 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29a50a11
01:33:06,173 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29a50a11
01:33:06,174 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@328bc067
01:33:06,175 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4902c584
01:33:06,175 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4902c584
01:33:06,176 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4902c584
01:33:06,176 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39dce2df
01:33:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@58690f5e
01:33:06,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58690f5e
01:33:06,178 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:33:06,179 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:33:06,180 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3663af34
01:33:06,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3663af34
01:33:06,181 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d36add1
01:33:06,181 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d36add1
01:33:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17063c32
01:33:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17063c32
01:33:06,183 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15a8bbe5
01:33:06,184 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@160e45c8
01:33:06,185 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@160e45c8
01:33:06,185 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@160e45c8
01:33:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37196d53
01:33:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37196d53
01:33:06,186 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37196d53
01:33:06,187 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@162e29a1
01:33:06,188 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2cc9a948
01:33:06,188 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2cc9a948
01:33:06,188 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2cc9a948
01:33:06,189 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77978658
01:33:06,190 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77978658
01:33:06,190 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77978658
01:33:06,191 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@63846fa4
01:33:06,192 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@204a02a4
01:33:06,196 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2b66bf1c
01:33:06,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b66bf1c
01:33:06,197 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54b35809
01:33:06,200 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@16120270
01:33:06,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16120270
01:33:06,203 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3adbd038
01:33:06,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3adbd038
01:33:06,204 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193d7ac7
01:33:06,204 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2093bb6c
01:33:06,205 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ac77269
01:33:06,209 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1b3a95d9
01:33:06,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b3a95d9
01:33:06,210 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20e41f13
01:33:06,210 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbfd28b
01:33:06,210 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fa50a24
01:33:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58041b11
01:33:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58189b85
01:33:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49222187
01:33:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e41e6ad
01:33:06,211 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2665a2e7
01:33:06,495  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:33:06,529  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:33:08,466  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:33:05 PDT 2015]; root of context hierarchy
01:33:08,514  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:33:05 PDT 2015]; root of context hierarchy
01:33:08,642  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3449 ms
01:33:14,107 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@368590cb
01:33:14,109  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
01:33:14,143 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
01:33:14,154 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

01:33:14,154 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:33:14,187 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
01:33:14,217 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
01:33:14,218 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
01:33:14,220 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@4a9412c4
01:33:14,221 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
01:33:14,222 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
01:33:14,222 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
01:33:14,227 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
01:33:14,235 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
01:33:14,237 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
01:33:14,238 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

01:33:14,239 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:33:14,250 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
01:33:14,251 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:33:14,251 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:33:14,281 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:34:59,163 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
01:35:08,368 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:49:10,031  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
01:49:10,114  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 01:49:10 PDT 2015]; root of context hierarchy
01:49:10,151  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
01:49:10,599  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
01:49:10,700  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
01:49:10,744  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
01:49:10,767  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
01:49:10,849  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
01:49:10,853  INFO Environment:213 - HHH000206: hibernate.properties not found
01:49:10,855  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
01:49:10,910  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
01:49:10,989 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:49:10,989 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:49:10,989 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@67e1a5fd
01:49:10,991 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@603faaad
01:49:10,992 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6c2be147
01:49:10,994 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6e5af973
01:49:10,995 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:49:10,995 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@848d9bc
01:49:10,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@848d9bc
01:49:10,997 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4fc2933e
01:49:10,997 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4fc2933e
01:49:10,997 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4fc2933e
01:49:10,999 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:49:10,999 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@766db6f9
01:49:10,999 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@766db6f9
01:49:11,001 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@bd09a26
01:49:11,001 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@bd09a26
01:49:11,001 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@bd09a26
01:49:11,003 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:49:11,004 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7aaf6bfd
01:49:11,004 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7aaf6bfd
01:49:11,005 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:49:11,006 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43efe064
01:49:11,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43efe064
01:49:11,007 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:49:11,008 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@54c37dab
01:49:11,008 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@54c37dab
01:49:11,010 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:49:11,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d6a0962
01:49:11,011 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@17fa14a3
01:49:11,011 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@17fa14a3
01:49:11,012 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4a9412c4
01:49:11,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a9412c4
01:49:11,014 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@41b2123e
01:49:11,015 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f1a5b93
01:49:11,015 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@2a4bd699
01:49:11,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a4bd699
01:49:11,017 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f4fc18
01:49:11,018 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f4fc18
01:49:11,019 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4d793390
01:49:11,019 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d793390
01:49:11,022 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@29a50a11
01:49:11,022 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29a50a11
01:49:11,022 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29a50a11
01:49:11,025 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@328bc067
01:49:11,026 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4902c584
01:49:11,026 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4902c584
01:49:11,027 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4902c584
01:49:11,028 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@39dce2df
01:49:11,029 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@58690f5e
01:49:11,029 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@58690f5e
01:49:11,030 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:49:11,031 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a5a4f8
01:49:11,032 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3663af34
01:49:11,033 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3663af34
01:49:11,034 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2d36add1
01:49:11,034 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2d36add1
01:49:11,035 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17063c32
01:49:11,036 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17063c32
01:49:11,036 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@15a8bbe5
01:49:11,038 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@160e45c8
01:49:11,038 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@160e45c8
01:49:11,039 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@160e45c8
01:49:11,040 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@37196d53
01:49:11,040 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@37196d53
01:49:11,041 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@37196d53
01:49:11,042 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@162e29a1
01:49:11,043 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2cc9a948
01:49:11,043 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2cc9a948
01:49:11,043 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2cc9a948
01:49:11,044 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@77978658
01:49:11,044 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@77978658
01:49:11,045 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@77978658
01:49:11,046 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@63846fa4
01:49:11,046 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@204a02a4
01:49:11,053 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2b66bf1c
01:49:11,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b66bf1c
01:49:11,054 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@54b35809
01:49:11,058 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@16120270
01:49:11,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16120270
01:49:11,064 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3adbd038
01:49:11,064 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3adbd038
01:49:11,065 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193d7ac7
01:49:11,065 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2093bb6c
01:49:11,067 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4ac77269
01:49:11,070 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1b3a95d9
01:49:11,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b3a95d9
01:49:11,071 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20e41f13
01:49:11,071 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbfd28b
01:49:11,071 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fa50a24
01:49:11,071 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@58041b11
01:49:11,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@58189b85
01:49:11,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49222187
01:49:11,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5e41e6ad
01:49:11,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2665a2e7
01:49:11,501  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
01:49:11,543  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
01:49:13,369  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:49:10 PDT 2015]; root of context hierarchy
01:49:13,424  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 01:49:10 PDT 2015]; root of context hierarchy
01:49:13,546  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3512 ms
01:49:20,200 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ce053b9
01:49:20,202  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
01:49:20,259 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
01:49:20,275 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

01:49:20,275 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:49:20,310 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
01:49:20,343 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
01:49:20,350 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
01:49:20,353 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@4a9412c4
01:49:20,354 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
01:49:20,355 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
01:49:20,355 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
01:49:20,362 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
01:49:20,371 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
01:49:20,371 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
01:49:20,373 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

01:49:20,373 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:49:20,385 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
01:49:20,385 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:49:20,385 DEBUG ErrorCounter:95 - throwQueryException() : no errors
01:49:20,421 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
01:49:28,664 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:00:25,650  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
02:00:25,755  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 02:00:25 PDT 2015]; root of context hierarchy
02:00:25,796  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
02:00:26,270  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
02:00:26,345  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
02:00:26,382  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
02:00:26,405  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
02:00:26,468  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
02:00:26,471  INFO Environment:213 - HHH000206: hibernate.properties not found
02:00:26,472  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
02:00:26,520  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
02:00:26,581 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c2be147
02:00:26,581 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c2be147
02:00:26,581 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c2be147
02:00:26,582 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@575e862c
02:00:26,583 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d41bb5a
02:00:26,585 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fc2933e
02:00:26,586 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@766db6f9
02:00:26,586 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@766db6f9
02:00:26,587 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@766db6f9
02:00:26,588 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@bd09a26
02:00:26,588 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@bd09a26
02:00:26,588 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@bd09a26
02:00:26,589 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7aaf6bfd
02:00:26,589 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7aaf6bfd
02:00:26,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7aaf6bfd
02:00:26,591 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6a4f7c17
02:00:26,591 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6a4f7c17
02:00:26,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a4f7c17
02:00:26,596 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@726a5e6a
02:00:26,597 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@726a5e6a
02:00:26,597 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@726a5e6a
02:00:26,598 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@219db855
02:00:26,599 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@219db855
02:00:26,599 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@219db855
02:00:26,600 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@515d615
02:00:26,600 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@515d615
02:00:26,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@515d615
02:00:26,603 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d15c513
02:00:26,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d15c513
02:00:26,604 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5e9671e6
02:00:26,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5e9671e6
02:00:26,606 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5dd2ea0a
02:00:26,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5dd2ea0a
02:00:26,607 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@571e2f15
02:00:26,607 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d99d327
02:00:26,608 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@6e612122
02:00:26,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6e612122
02:00:26,610 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@35277c6c
02:00:26,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@35277c6c
02:00:26,611 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@38b0e2a7
02:00:26,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@38b0e2a7
02:00:26,613 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@662d3e85
02:00:26,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@662d3e85
02:00:26,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@662d3e85
02:00:26,616 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57bfca3a
02:00:26,617 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@237d0625
02:00:26,617 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@237d0625
02:00:26,617 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@237d0625
02:00:26,618 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@174f0d06
02:00:26,618 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4693d24f
02:00:26,619 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4693d24f
02:00:26,619 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4271b748
02:00:26,620 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4271b748
02:00:26,621 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d4c7248
02:00:26,621 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d4c7248
02:00:26,622 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@15a8bbe5
02:00:26,622 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15a8bbe5
02:00:26,624 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488c183
02:00:26,624 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488c183
02:00:26,624 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40105b39
02:00:26,625 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@54b96813
02:00:26,625 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@54b96813
02:00:26,625 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@54b96813
02:00:26,626 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@647ce968
02:00:26,626 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@647ce968
02:00:26,627 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@647ce968
02:00:26,627 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@498b697
02:00:26,628 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@206b959c
02:00:26,628 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@206b959c
02:00:26,628 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@206b959c
02:00:26,629 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1b96d447
02:00:26,629 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1b96d447
02:00:26,630 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1b96d447
02:00:26,630 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@63537871
02:00:26,631 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@430f0c63
02:00:26,634 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@18bf1bad
02:00:26,634 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18bf1bad
02:00:26,635 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3355d9ba
02:00:26,637 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3f2afa8b
02:00:26,638 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3f2afa8b
02:00:26,640 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@638d624a
02:00:26,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@638d624a
02:00:26,641 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a42145
02:00:26,641 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@361483eb
02:00:26,642 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@350be5ec
02:00:26,644 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@624be1d4
02:00:26,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@624be1d4
02:00:26,645 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c767288
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@510e6b93
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@129e45eb
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15c3849f
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a7e469d
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@688efeb2
02:00:26,646 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@85f5f55
02:00:26,647 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@131c5bd
02:00:26,912  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
02:00:26,950  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
02:00:28,979  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:00:25 PDT 2015]; root of context hierarchy
02:00:29,034  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:00:25 PDT 2015]; root of context hierarchy
02:00:29,165  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3512 ms
02:00:44,553 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5b9e90b5
02:00:44,556  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
02:00:44,614 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
02:00:44,634 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

02:00:44,635 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:00:44,678 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
02:00:44,712 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
02:00:44,715 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
02:00:44,717 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@5dd2ea0a
02:00:44,719 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
02:00:44,719 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
02:00:44,720 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
02:00:44,732 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
02:00:44,740 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
02:00:44,742 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
02:00:44,745 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

02:00:44,746 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:00:44,764 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
02:00:44,765 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:00:44,765 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:00:44,804 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:01:06,106 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:28:09,463  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
02:28:09,550  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 02:28:09 PDT 2015]; root of context hierarchy
02:28:09,582  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
02:28:10,173  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
02:28:10,278  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
02:28:10,317  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
02:28:10,352  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
02:28:10,433  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
02:28:10,436  INFO Environment:213 - HHH000206: hibernate.properties not found
02:28:10,437  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
02:28:10,490  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
02:28:10,566 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@394331a8
02:28:10,567 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@394331a8
02:28:10,567 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@394331a8
02:28:10,568 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@642f8b7f
02:28:10,569 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b0c38f2
02:28:10,571 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b06f498
02:28:10,572 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b180c8
02:28:10,573 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49b180c8
02:28:10,573 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49b180c8
02:28:10,575 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3e170abe
02:28:10,575 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3e170abe
02:28:10,576 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e170abe
02:28:10,577 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@45c2c396
02:28:10,577 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@45c2c396
02:28:10,577 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@45c2c396
02:28:10,579 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@ea45a5b
02:28:10,579 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@ea45a5b
02:28:10,579 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ea45a5b
02:28:10,581 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4db4431b
02:28:10,581 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4db4431b
02:28:10,581 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4db4431b
02:28:10,583 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@55821edf
02:28:10,584 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@55821edf
02:28:10,584 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@55821edf
02:28:10,585 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3fdbb7ee
02:28:10,586 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3fdbb7ee
02:28:10,586 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3fdbb7ee
02:28:10,587 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fce8243
02:28:10,588 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fce8243
02:28:10,589 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4bac0be5
02:28:10,589 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4bac0be5
02:28:10,591 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5d515e2c
02:28:10,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5d515e2c
02:28:10,592 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7fff419d
02:28:10,593 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5186b78a
02:28:10,594 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7f2542f
02:28:10,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f2542f
02:28:10,597 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7fc5a558
02:28:10,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7fc5a558
02:28:10,600 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523f3c29
02:28:10,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523f3c29
02:28:10,602 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@23cb8fcb
02:28:10,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@23cb8fcb
02:28:10,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@23cb8fcb
02:28:10,606 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4b8cde43
02:28:10,607 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@95f1422
02:28:10,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@95f1422
02:28:10,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@95f1422
02:28:10,608 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b5d1d9
02:28:10,610 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@d17d554
02:28:10,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@d17d554
02:28:10,611 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@5e83298e
02:28:10,611 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5e83298e
02:28:10,612 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c9cfcde
02:28:10,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c9cfcde
02:28:10,614 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3bbdf835
02:28:10,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3bbdf835
02:28:10,618 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@265c0752
02:28:10,619 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@265c0752
02:28:10,620 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2acbe46d
02:28:10,621 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5b31a9e3
02:28:10,622 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b31a9e3
02:28:10,622 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5b31a9e3
02:28:10,623 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a14ab66
02:28:10,623 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a14ab66
02:28:10,623 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a14ab66
02:28:10,624 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@68f1b89
02:28:10,626 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5e6bbe63
02:28:10,626 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5e6bbe63
02:28:10,626 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5e6bbe63
02:28:10,628 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7b6b466a
02:28:10,629 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7b6b466a
02:28:10,629 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7b6b466a
02:28:10,630 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5b74bb75
02:28:10,631 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4a0c04ab
02:28:10,634 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@22c0344e
02:28:10,634 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22c0344e
02:28:10,635 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@59d29065
02:28:10,639 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@544300a6
02:28:10,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@544300a6
02:28:10,642 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@d641499
02:28:10,643 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d641499
02:28:10,643 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@71891d6b
02:28:10,644 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2259d54f
02:28:10,645 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@412440c1
02:28:10,649 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7607340f
02:28:10,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7607340f
02:28:10,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@42ac309
02:28:10,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4b4228cf
02:28:10,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d216ee8
02:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74ee97cb
02:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@268e30d4
02:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c50709a
02:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@af007d6
02:28:10,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a20898c
02:28:11,093  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
02:28:11,138  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
02:28:12,818  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:28:09 PDT 2015]; root of context hierarchy
02:28:12,864  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:28:09 PDT 2015]; root of context hierarchy
02:28:13,036  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3571 ms
02:28:21,312 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@9c9fb6d
02:28:21,313  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
02:28:21,346 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
02:28:21,356 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

02:28:21,357 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:28:21,385 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
02:28:21,409 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
02:28:21,411 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
02:28:21,412 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@5d515e2c
02:28:21,413 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
02:28:21,414 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
02:28:21,414 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
02:28:21,419 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
02:28:21,427 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
02:28:21,427 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
02:28:21,428 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

02:28:21,429 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:28:21,442 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
02:28:21,442 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:28:21,442 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:28:21,499 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:47:58,213  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
02:47:58,307  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 02:47:58 PDT 2015]; root of context hierarchy
02:47:58,341  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
02:47:58,844  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
02:47:58,927  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
02:47:58,966  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
02:47:58,990  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
02:47:59,055  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
02:47:59,057  INFO Environment:213 - HHH000206: hibernate.properties not found
02:47:59,059  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
02:47:59,134  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
02:47:59,218 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@563ab6d5
02:47:59,218 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@563ab6d5
02:47:59,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@563ab6d5
02:47:59,219 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@177302d6
02:47:59,221 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45a9cf78
02:47:59,223 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7e28f150
02:47:59,225 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e18876d
02:47:59,225 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1e18876d
02:47:59,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e18876d
02:47:59,226 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1c36ab22
02:47:59,227 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1c36ab22
02:47:59,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c36ab22
02:47:59,228 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@b386a17
02:47:59,229 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@b386a17
02:47:59,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@b386a17
02:47:59,230 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7c857e8f
02:47:59,230 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7c857e8f
02:47:59,230 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c857e8f
02:47:59,232 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@764a3867
02:47:59,232 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@764a3867
02:47:59,232 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@764a3867
02:47:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28d16af8
02:47:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28d16af8
02:47:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28d16af8
02:47:59,235 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@21bd6fd1
02:47:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@21bd6fd1
02:47:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@21bd6fd1
02:47:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2d41bb5a
02:47:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2d41bb5a
02:47:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43e30f15
02:47:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43e30f15
02:47:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@742dbac8
02:47:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@742dbac8
02:47:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@728535c6
02:47:59,242 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75db328e
02:47:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7aaf6bfd
02:47:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7aaf6bfd
02:47:59,244 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@66046e7c
02:47:59,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@66046e7c
02:47:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@49005dc4
02:47:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@49005dc4
02:47:59,247 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@705d72f0
02:47:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@705d72f0
02:47:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@705d72f0
02:47:59,250 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ec4fdcf
02:47:59,251 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@17fa14a3
02:47:59,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17fa14a3
02:47:59,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17fa14a3
02:47:59,252 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@219dd935
02:47:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@78b44fcb
02:47:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78b44fcb
02:47:59,254 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2f3a0f37
02:47:59,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f3a0f37
02:47:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65fa4a07
02:47:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65fa4a07
02:47:59,256 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2552181d
02:47:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2552181d
02:47:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e612122
02:47:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e612122
02:47:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@717b0d81
02:47:59,259 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@279e8bc0
02:47:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@279e8bc0
02:47:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@279e8bc0
02:47:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a053795
02:47:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a053795
02:47:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a053795
02:47:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@73eae5f
02:47:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@662d3e85
02:47:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@662d3e85
02:47:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@662d3e85
02:47:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a390b8c
02:47:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a390b8c
02:47:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a390b8c
02:47:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@174f0d06
02:47:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4693d24f
02:47:59,268 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@72a61e61
02:47:59,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72a61e61
02:47:59,269 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@162e29a1
02:47:59,271 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4270705f
02:47:59,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4270705f
02:47:59,273 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@31b67d61
02:47:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@31b67d61
02:47:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@56ec6ac0
02:47:59,275 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72ce8a9b
02:47:59,276 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@14b4ce6f
02:47:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7135e8cd
02:47:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7135e8cd
02:47:59,279 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@483fe83a
02:47:59,279 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16120270
02:47:59,279 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@74babce8
02:47:59,279 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1fab0394
02:47:59,279 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28e24663
02:47:59,280 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ee5c08d
02:47:59,280 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@f996445
02:47:59,280 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48697181
02:47:59,558  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
02:47:59,591  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
02:48:01,110  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.hateoas.EntityLinks org.courseregistration.controller.CourseController.entityLinks; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.hateoas.EntityLinks org.courseregistration.controller.CourseController.entityLinks; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:571)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 70 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1373)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1119)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:543)
	... 72 more
02:48:01,122  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
02:48:01,124 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.hateoas.EntityLinks org.courseregistration.controller.CourseController.entityLinks; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:772)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:835)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: org.springframework.beans.factory.BeanCreationException: Could not autowire field: private org.springframework.hateoas.EntityLinks org.courseregistration.controller.CourseController.entityLinks; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:571)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)
	... 70 more
Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.hateoas.EntityLinks] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1373)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1119)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1014)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:543)
	... 72 more
02:48:35,369  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
02:48:35,458  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 02:48:35 PDT 2015]; root of context hierarchy
02:48:35,492  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
02:48:35,993  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
02:48:36,101  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
02:48:36,155  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
02:48:36,184  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
02:48:36,267  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
02:48:36,270  INFO Environment:213 - HHH000206: hibernate.properties not found
02:48:36,272  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
02:48:36,324  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
02:48:36,408 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7272914b
02:48:36,408 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7272914b
02:48:36,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7272914b
02:48:36,409 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b0c38f2
02:48:36,411 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b06f498
02:48:36,412 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@49b180c8
02:48:36,414 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@af96ac9
02:48:36,414 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@af96ac9
02:48:36,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@af96ac9
02:48:36,415 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@45c2c396
02:48:36,415 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@45c2c396
02:48:36,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@45c2c396
02:48:36,417 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7a600e21
02:48:36,417 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7a600e21
02:48:36,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7a600e21
02:48:36,418 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4db4431b
02:48:36,418 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4db4431b
02:48:36,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4db4431b
02:48:36,420 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@602b7944
02:48:36,421 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@602b7944
02:48:36,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@602b7944
02:48:36,422 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3fdbb7ee
02:48:36,422 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3fdbb7ee
02:48:36,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fdbb7ee
02:48:36,424 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@72e1e587
02:48:36,424 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@72e1e587
02:48:36,424 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@72e1e587
02:48:36,426 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@368d51ca
02:48:36,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@368d51ca
02:48:36,428 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d3a7f83
02:48:36,428 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d3a7f83
02:48:36,429 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@542754be
02:48:36,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@542754be
02:48:36,430 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e749235
02:48:36,432 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@301f9aa0
02:48:36,433 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1fc4483f
02:48:36,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1fc4483f
02:48:36,435 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@523f3c29
02:48:36,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@523f3c29
02:48:36,437 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@23cb8fcb
02:48:36,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23cb8fcb
02:48:36,440 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@8b1bfdf
02:48:36,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@8b1bfdf
02:48:36,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@8b1bfdf
02:48:36,443 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@47fc9ce
02:48:36,445 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2cd2c764
02:48:36,446 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2cd2c764
02:48:36,446 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2cd2c764
02:48:36,447 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2b409174
02:48:36,448 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7cadf3ca
02:48:36,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7cadf3ca
02:48:36,449 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7dbd70fd
02:48:36,450 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7dbd70fd
02:48:36,451 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@28fef9a2
02:48:36,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@28fef9a2
02:48:36,453 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@799fc4c9
02:48:36,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@799fc4c9
02:48:36,455 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f695077
02:48:36,455 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f695077
02:48:36,456 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3b590f6a
02:48:36,457 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@54780c40
02:48:36,457 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@54780c40
02:48:36,458 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@54780c40
02:48:36,459 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e5b3642
02:48:36,460 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e5b3642
02:48:36,460 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e5b3642
02:48:36,461 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7a17ffee
02:48:36,463 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6686507b
02:48:36,464 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6686507b
02:48:36,464 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6686507b
02:48:36,465 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2aac87ab
02:48:36,465 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2aac87ab
02:48:36,465 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2aac87ab
02:48:36,466 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2d33795c
02:48:36,467 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7533923b
02:48:36,471 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6dbdeb69
02:48:36,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6dbdeb69
02:48:36,472 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7fcfe065
02:48:36,475 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@772bc4c9
02:48:36,476 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@772bc4c9
02:48:36,479 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1b82f62a
02:48:36,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1b82f62a
02:48:36,481 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d9bccfe
02:48:36,482 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@33f4844b
02:48:36,487 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3ab70d34
02:48:36,491 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@268e30d4
02:48:36,492 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@268e30d4
02:48:36,493 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a20898c
02:48:36,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5dff108c
02:48:36,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22d47f09
02:48:36,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@28100232
02:48:36,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26728255
02:48:36,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32c8d67
02:48:36,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@281963c
02:48:36,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2a2815cc
02:48:36,933  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
02:48:36,975  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
02:48:38,759  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:48:35 PDT 2015]; root of context hierarchy
02:48:38,804  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 02:48:35 PDT 2015]; root of context hierarchy
02:48:38,977  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3604 ms
02:49:19,001 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5af9b24f
02:49:19,003  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
02:49:19,073 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
02:49:19,145 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

02:49:19,146 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:49:19,185 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
02:49:19,221 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
02:49:19,224 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
02:49:19,227 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@542754be
02:49:19,229 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
02:49:19,229 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
02:49:19,230 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
02:49:19,235 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
02:49:19,247 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
02:49:19,247 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
02:49:19,251 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

02:49:19,252 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:49:19,311 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
02:49:19,311 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
02:49:19,311 DEBUG ErrorCounter:95 - throwQueryException() : no errors
02:49:19,343 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
03:01:06,329  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
03:01:06,418  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 03:01:06 PDT 2015]; root of context hierarchy
03:01:06,461  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
03:01:06,900  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
03:01:06,901  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
03:01:07,059  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
03:01:07,232  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
03:01:07,294  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
03:01:07,324  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
03:01:07,407  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
03:01:07,412  INFO Environment:213 - HHH000206: hibernate.properties not found
03:01:07,414  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
03:01:07,467  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
03:01:07,539 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b31a9e3
03:01:07,539 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5b31a9e3
03:01:07,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5b31a9e3
03:01:07,541 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d91d2da
03:01:07,542 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5e6bbe63
03:01:07,543 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7ffc4195
03:01:07,545 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f252762
03:01:07,545 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f252762
03:01:07,545 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f252762
03:01:07,546 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@72c5064f
03:01:07,547 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@72c5064f
03:01:07,547 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@72c5064f
03:01:07,548 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@758311ed
03:01:07,549 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@758311ed
03:01:07,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@758311ed
03:01:07,550 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@60e5eed0
03:01:07,551 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@60e5eed0
03:01:07,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60e5eed0
03:01:07,552 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@40199d5e
03:01:07,553 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@40199d5e
03:01:07,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@40199d5e
03:01:07,554 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43dddfdd
03:01:07,555 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43dddfdd
03:01:07,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43dddfdd
03:01:07,556 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@20a116a0
03:01:07,556 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@20a116a0
03:01:07,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@20a116a0
03:01:07,558 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3911fec8
03:01:07,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3911fec8
03:01:07,560 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c3a64b6
03:01:07,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c3a64b6
03:01:07,561 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6bd28e4a
03:01:07,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6bd28e4a
03:01:07,562 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@42a7e7e1
03:01:07,563 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@152dbf8e
03:01:07,564 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7a7f2247
03:01:07,564 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a7f2247
03:01:07,566 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@634d3439
03:01:07,566 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@634d3439
03:01:07,568 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@67e21ea2
03:01:07,568 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@67e21ea2
03:01:07,570 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@435a2c7d
03:01:07,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@435a2c7d
03:01:07,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@435a2c7d
03:01:07,573 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ab70d34
03:01:07,575 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@7af0693b
03:01:07,575 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7af0693b
03:01:07,575 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7af0693b
03:01:07,577 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7607340f
03:01:07,578 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7d216ee8
03:01:07,579 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7d216ee8
03:01:07,580 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@a20898c
03:01:07,580 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a20898c
03:01:07,581 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@32c8d67
03:01:07,582 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@32c8d67
03:01:07,583 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@7164e28a
03:01:07,583 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7164e28a
03:01:07,584 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@106edde4
03:01:07,585 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@106edde4
03:01:07,585 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5db66c3
03:01:07,587 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@56b48163
03:01:07,587 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@56b48163
03:01:07,587 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@56b48163
03:01:07,589 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29bf90fc
03:01:07,589 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29bf90fc
03:01:07,589 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29bf90fc
03:01:07,590 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@24ee6faa
03:01:07,591 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4fe9adfb
03:01:07,591 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4fe9adfb
03:01:07,591 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4fe9adfb
03:01:07,592 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@63896cf7
03:01:07,593 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@63896cf7
03:01:07,593 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@63896cf7
03:01:07,594 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3a9040f0
03:01:07,594 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2ba0b95f
03:01:07,599 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7f9d40b3
03:01:07,599 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f9d40b3
03:01:07,600 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e24bab6
03:01:07,605 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@149238fe
03:01:07,605 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@149238fe
03:01:07,609 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2fc40856
03:01:07,609 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fc40856
03:01:07,610 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@58e4aa67
03:01:07,610 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1be12e05
03:01:07,611 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@43312512
03:01:07,614 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@22ed2886
03:01:07,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@22ed2886
03:01:07,615 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38c1b1a7
03:01:07,615 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73230721
03:01:07,615 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10bcbbce
03:01:07,616 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27234b7c
03:01:07,616 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@125a8ab6
03:01:07,616 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@792b9dd3
03:01:07,617 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cbc3bf3
03:01:07,617 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@31f9f9b3
03:01:08,016  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
03:01:08,055  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
03:01:09,826  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:01:06 PDT 2015]; root of context hierarchy
03:01:09,875  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:01:06 PDT 2015]; root of context hierarchy
03:01:10,014  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:01:06 PDT 2015]; root of context hierarchy
03:01:10,106  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3773 ms
03:01:16,901 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1184bee7
03:01:16,902  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
03:01:16,943 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
03:01:16,953 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

03:01:16,953 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:01:16,983 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
03:01:17,008 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
03:01:17,009 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
03:01:17,012 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@6bd28e4a
03:01:17,013 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
03:01:17,014 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
03:01:17,015 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
03:01:17,020 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
03:01:17,027 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
03:01:17,028 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
03:01:17,029 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

03:01:17,029 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:01:17,041 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
03:01:17,041 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
03:01:17,042 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:01:17,106 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
03:16:46,698  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 03:01:06 PDT 2015]; root of context hierarchy
03:16:46,714  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
03:16:49,158  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
03:16:49,229  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 03:16:49 PDT 2015]; root of context hierarchy
03:16:49,260  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
03:16:49,603  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
03:16:49,604  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
03:16:49,711  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
03:16:49,786  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
03:16:49,827  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
03:16:49,851  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
03:16:50,065  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
03:16:50,070  INFO Environment:213 - HHH000206: hibernate.properties not found
03:16:50,072  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
03:16:50,120  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
03:16:50,188 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a988925
03:16:50,188 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6a988925
03:16:50,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a988925
03:16:50,189 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2d0eee
03:16:50,191 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6879e979
03:16:50,192 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@16ca2196
03:16:50,193 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6b69dab4
03:16:50,193 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6b69dab4
03:16:50,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6b69dab4
03:16:50,195 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2b7223fe
03:16:50,195 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2b7223fe
03:16:50,195 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2b7223fe
03:16:50,196 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@49205ea7
03:16:50,196 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@49205ea7
03:16:50,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@49205ea7
03:16:50,197 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3f01c761
03:16:50,198 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3f01c761
03:16:50,198 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f01c761
03:16:50,199 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2db058ee
03:16:50,200 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2db058ee
03:16:50,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2db058ee
03:16:50,201 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@65a45ee3
03:16:50,202 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@65a45ee3
03:16:50,202 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65a45ee3
03:16:50,203 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6911f109
03:16:50,204 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6911f109
03:16:50,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6911f109
03:16:50,205 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7c2f5d3e
03:16:50,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7c2f5d3e
03:16:50,207 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7cf23e19
03:16:50,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7cf23e19
03:16:50,208 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@53706099
03:16:50,208 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@53706099
03:16:50,209 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33e910d9
03:16:50,210 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@740d61bf
03:16:50,211 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3de9532a
03:16:50,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3de9532a
03:16:50,212 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5a7e4a8f
03:16:50,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a7e4a8f
03:16:50,214 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@527857d3
03:16:50,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@527857d3
03:16:50,216 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@a1251bf
03:16:50,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a1251bf
03:16:50,217 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a1251bf
03:16:50,218 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a685e9
03:16:50,219 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6b4d45ea
03:16:50,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6b4d45ea
03:16:50,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6b4d45ea
03:16:50,220 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19312ee5
03:16:50,221 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@78774b35
03:16:50,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@78774b35
03:16:50,224 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6fd2c982
03:16:50,224 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6fd2c982
03:16:50,225 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12d7346
03:16:50,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12d7346
03:16:50,226 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@51144e51
03:16:50,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@51144e51
03:16:50,228 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4db15ebf
03:16:50,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4db15ebf
03:16:50,228 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52805461
03:16:50,231 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2f12c3a5
03:16:50,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f12c3a5
03:16:50,231 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2f12c3a5
03:16:50,232 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32ff5b26
03:16:50,232 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32ff5b26
03:16:50,233 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32ff5b26
03:16:50,233 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7d20db12
03:16:50,234 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@57dc6f6f
03:16:50,235 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@57dc6f6f
03:16:50,235 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@57dc6f6f
03:16:50,236 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5bc48008
03:16:50,236 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5bc48008
03:16:50,236 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5bc48008
03:16:50,237 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@68956f54
03:16:50,237 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3cf90dde
03:16:50,240 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@163ab4d7
03:16:50,241 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@163ab4d7
03:16:50,241 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@763df24f
03:16:50,244 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@715fdd56
03:16:50,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@715fdd56
03:16:50,246 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2644ddc9
03:16:50,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2644ddc9
03:16:50,247 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@365b7cb8
03:16:50,247 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@65ecf89e
03:16:50,248 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5dce423f
03:16:50,250 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2db210ca
03:16:50,250 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2db210ca
03:16:50,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2ff3c994
03:16:50,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12fab8e0
03:16:50,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2bde3510
03:16:50,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4cf7e7e
03:16:50,251 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35c1a81a
03:16:50,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@723b3bfa
03:16:50,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2817f618
03:16:50,252 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@575441ea
03:16:50,479  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
03:16:50,515  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
03:16:52,254  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:16:49 PDT 2015]; root of context hierarchy
03:16:52,296  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:16:49 PDT 2015]; root of context hierarchy
03:16:52,413  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:16:49 PDT 2015]; root of context hierarchy
03:16:52,502  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3342 ms
03:36:19,014  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
03:36:19,110  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 03:36:19 PDT 2015]; root of context hierarchy
03:36:19,145  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
03:36:19,599  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
03:36:19,601  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
03:36:19,731  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
03:36:19,819  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
03:36:19,860  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
03:36:19,903  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
03:36:19,969  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
03:36:19,971  INFO Environment:213 - HHH000206: hibernate.properties not found
03:36:19,972  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
03:36:20,028  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
03:36:20,118 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7267006e
03:36:20,118 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7267006e
03:36:20,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7267006e
03:36:20,121 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fcfe065
03:36:20,122 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1e38e8b6
03:36:20,123 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@43e2b8da
03:36:20,124 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6bd28e4a
03:36:20,124 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6bd28e4a
03:36:20,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6bd28e4a
03:36:20,125 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@42a7e7e1
03:36:20,126 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@42a7e7e1
03:36:20,126 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@42a7e7e1
03:36:20,127 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bcf08ae
03:36:20,128 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bcf08ae
03:36:20,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bcf08ae
03:36:20,130 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@77972964
03:36:20,130 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@77972964
03:36:20,131 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77972964
03:36:20,133 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@d641499
03:36:20,133 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@d641499
03:36:20,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@d641499
03:36:20,135 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2184962c
03:36:20,135 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2184962c
03:36:20,136 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2184962c
03:36:20,137 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@57806346
03:36:20,138 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@57806346
03:36:20,138 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57806346
03:36:20,141 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7607340f
03:36:20,141 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7607340f
03:36:20,143 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@74ee97cb
03:36:20,143 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@74ee97cb
03:36:20,144 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5dff108c
03:36:20,144 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5dff108c
03:36:20,146 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@281963c
03:36:20,147 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b881f1f
03:36:20,148 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@59d09ff3
03:36:20,149 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@59d09ff3
03:36:20,152 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@55d8f6bb
03:36:20,152 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55d8f6bb
03:36:20,154 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@29bf90fc
03:36:20,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@29bf90fc
03:36:20,156 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6b756a62
03:36:20,157 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6b756a62
03:36:20,157 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6b756a62
03:36:20,161 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fe9adfb
03:36:20,162 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@fdf029a
03:36:20,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@fdf029a
03:36:20,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@fdf029a
03:36:20,165 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@46c9ee28
03:36:20,166 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2d3768ce
03:36:20,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2d3768ce
03:36:20,168 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62871522
03:36:20,169 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62871522
03:36:20,170 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3aa8c337
03:36:20,170 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3aa8c337
03:36:20,172 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@74e175c7
03:36:20,172 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@74e175c7
03:36:20,174 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@37f627d0
03:36:20,175 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@37f627d0
03:36:20,176 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@639cb0c8
03:36:20,178 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@ca2a03f
03:36:20,178 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@ca2a03f
03:36:20,179 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@ca2a03f
03:36:20,180 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@391e2a
03:36:20,181 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@391e2a
03:36:20,181 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@391e2a
03:36:20,182 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@192ecf8
03:36:20,183 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@288b8663
03:36:20,184 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@288b8663
03:36:20,184 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@288b8663
03:36:20,186 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25b402ea
03:36:20,186 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25b402ea
03:36:20,186 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25b402ea
03:36:20,187 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@575fe6da
03:36:20,188 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@b814e23
03:36:20,191 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d60bd5a
03:36:20,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d60bd5a
03:36:20,192 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@655f92a1
03:36:20,196 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3fdede3a
03:36:20,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fdede3a
03:36:20,198 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@62525dd3
03:36:20,199 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62525dd3
03:36:20,199 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68fc636a
03:36:20,200 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6e00d737
03:36:20,201 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@448fa659
03:36:20,204 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6f5288c5
03:36:20,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6f5288c5
03:36:20,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61f08aa9
03:36:20,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a1f22f2
03:36:20,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37b5a51c
03:36:20,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e782401
03:36:20,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2bb84aa5
03:36:20,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4853f592
03:36:20,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52d434c1
03:36:20,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d035ab6
03:36:20,475  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
03:36:20,508  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
03:36:22,759  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:36:19 PDT 2015]; root of context hierarchy
03:36:22,805  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:36:19 PDT 2015]; root of context hierarchy
03:36:22,936  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 03:36:19 PDT 2015]; root of context hierarchy
03:36:23,031  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4014 ms
03:36:32,806 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@43037f51
03:36:32,809  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
03:36:32,849 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
03:36:32,863 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

03:36:32,863 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:36:32,889 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
03:36:32,914 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
03:36:32,916 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
03:36:32,917 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@5dff108c
03:36:32,918 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
03:36:32,919 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
03:36:32,919 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
03:36:32,930 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
03:36:32,936 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
03:36:32,937 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
03:36:32,938 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

03:36:32,938 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:36:32,949 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
03:36:32,950 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
03:36:32,950 DEBUG ErrorCounter:95 - throwQueryException() : no errors
03:36:33,019 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
05:08:36,038  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:08:36,109  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:08:36 PDT 2015]; root of context hierarchy
05:08:36,134  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:08:36,546  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:08:36,547  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:08:36,659  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:08:36,748  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:08:36,803  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:08:36,846  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:08:36,943  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:08:36,947  INFO Environment:213 - HHH000206: hibernate.properties not found
05:08:36,949  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:08:37,007  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:08:37,082 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ca30886
05:08:37,083 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ca30886
05:08:37,083 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ca30886
05:08:37,085 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d605657
05:08:37,087 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@eb1e868
05:08:37,088 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b29d699
05:08:37,090 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc9389
05:08:37,091 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc9389
05:08:37,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bc9389
05:08:37,093 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@59845a40
05:08:37,093 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@59845a40
05:08:37,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59845a40
05:08:37,095 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f6ba47b
05:08:37,095 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f6ba47b
05:08:37,096 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f6ba47b
05:08:37,097 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@401002ce
05:08:37,097 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@401002ce
05:08:37,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@401002ce
05:08:37,104 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4b4bc73d
05:08:37,104 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4b4bc73d
05:08:37,104 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4bc73d
05:08:37,105 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@72ea6fcb
05:08:37,105 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@72ea6fcb
05:08:37,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72ea6fcb
05:08:37,107 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6bcfb561
05:08:37,107 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6bcfb561
05:08:37,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bcfb561
05:08:37,110 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1cd2e348
05:08:37,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1cd2e348
05:08:37,111 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37fd496a
05:08:37,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37fd496a
05:08:37,114 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1af78e37
05:08:37,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1af78e37
05:08:37,116 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13cae908
05:08:37,117 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d2bc446
05:08:37,118 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@41433530
05:08:37,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41433530
05:08:37,120 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@15a41088
05:08:37,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15a41088
05:08:37,122 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@140cfc5f
05:08:37,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@140cfc5f
05:08:37,124 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@24a1858a
05:08:37,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@24a1858a
05:08:37,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@24a1858a
05:08:37,127 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@359a2c96
05:08:37,128 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@21be80f6
05:08:37,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21be80f6
05:08:37,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21be80f6
05:08:37,130 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2de82bf8
05:08:37,131 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@400df2b3
05:08:37,131 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@400df2b3
05:08:37,133 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@3b11deb6
05:08:37,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b11deb6
05:08:37,134 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@608c7b5b
05:08:37,134 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@608c7b5b
05:08:37,135 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@25f73119
05:08:37,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25f73119
05:08:37,137 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6520625f
05:08:37,137 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6520625f
05:08:37,138 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1640a6b5
05:08:37,139 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7bd7c4cf
05:08:37,140 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7bd7c4cf
05:08:37,140 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7bd7c4cf
05:08:37,141 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:08:37,141 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:08:37,141 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:08:37,142 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1b868ef0
05:08:37,144 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6c9b6332
05:08:37,144 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c9b6332
05:08:37,144 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6c9b6332
05:08:37,145 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31ab75a5
05:08:37,146 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31ab75a5
05:08:37,146 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31ab75a5
05:08:37,147 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@69a3944
05:08:37,148 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@67376bae
05:08:37,151 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7668f8fd
05:08:37,151 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7668f8fd
05:08:37,152 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c261c74
05:08:37,155 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@69ae7632
05:08:37,156 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69ae7632
05:08:37,159 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@71e89a26
05:08:37,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71e89a26
05:08:37,160 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6167a456
05:08:37,160 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@66e434e8
05:08:37,162 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4353db40
05:08:37,166 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@57abe94d
05:08:37,166 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57abe94d
05:08:37,167 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a48a582
05:08:37,167 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1221d607
05:08:37,168 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b45c8e4
05:08:37,168 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3dc14f80
05:08:37,169 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@627a890f
05:08:37,169 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ef7faa9
05:08:37,169 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b901f7b
05:08:37,170 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c9aeec6
05:08:37,615  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:08:37,656  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:08:39,377  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:08:36 PDT 2015]; root of context hierarchy
05:08:39,422  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:08:36 PDT 2015]; root of context hierarchy
05:08:39,550  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:08:36 PDT 2015]; root of context hierarchy
05:08:39,647  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3606 ms
05:09:50,630  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:09:50,730  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:09:50 PDT 2015]; root of context hierarchy
05:09:50,778  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:09:51,257  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:09:51,258  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:09:51,370  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:09:51,462  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:09:51,504  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:09:51,543  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:09:51,669  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:09:51,673  INFO Environment:213 - HHH000206: hibernate.properties not found
05:09:51,675  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:09:51,749  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:09:51,837 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ca30886
05:09:51,838 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ca30886
05:09:51,838 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ca30886
05:09:51,840 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d605657
05:09:51,841 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@eb1e868
05:09:51,843 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5b29d699
05:09:51,844 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc9389
05:09:51,844 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc9389
05:09:51,845 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bc9389
05:09:51,846 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@59845a40
05:09:51,846 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@59845a40
05:09:51,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@59845a40
05:09:51,848 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f6ba47b
05:09:51,848 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f6ba47b
05:09:51,849 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f6ba47b
05:09:51,850 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@401002ce
05:09:51,850 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@401002ce
05:09:51,851 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@401002ce
05:09:51,852 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4b4bc73d
05:09:51,852 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4b4bc73d
05:09:51,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b4bc73d
05:09:51,854 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@72ea6fcb
05:09:51,854 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@72ea6fcb
05:09:51,854 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@72ea6fcb
05:09:51,856 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6bcfb561
05:09:51,856 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6bcfb561
05:09:51,856 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bcfb561
05:09:51,859 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1cd2e348
05:09:51,859 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1cd2e348
05:09:51,860 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37fd496a
05:09:51,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37fd496a
05:09:51,862 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1af78e37
05:09:51,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1af78e37
05:09:51,863 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@13cae908
05:09:51,864 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5d2bc446
05:09:51,867 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@41433530
05:09:51,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@41433530
05:09:51,869 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@15a41088
05:09:51,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@15a41088
05:09:51,871 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@140cfc5f
05:09:51,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@140cfc5f
05:09:51,873 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@24a1858a
05:09:51,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@24a1858a
05:09:51,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@24a1858a
05:09:51,876 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@359a2c96
05:09:51,878 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@21be80f6
05:09:51,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@21be80f6
05:09:51,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@21be80f6
05:09:51,880 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2de82bf8
05:09:51,881 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@400df2b3
05:09:51,881 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@400df2b3
05:09:51,882 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@3b11deb6
05:09:51,883 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3b11deb6
05:09:51,884 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@608c7b5b
05:09:51,884 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@608c7b5b
05:09:51,885 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@25f73119
05:09:51,885 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@25f73119
05:09:51,886 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6520625f
05:09:51,887 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6520625f
05:09:51,887 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1640a6b5
05:09:51,889 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7bd7c4cf
05:09:51,890 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7bd7c4cf
05:09:51,890 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7bd7c4cf
05:09:51,892 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:09:51,892 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:09:51,893 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7da1ef46
05:09:51,894 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1b868ef0
05:09:51,895 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6c9b6332
05:09:51,895 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6c9b6332
05:09:51,896 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6c9b6332
05:09:51,897 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31ab75a5
05:09:51,898 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31ab75a5
05:09:51,898 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31ab75a5
05:09:51,899 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@69a3944
05:09:51,900 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@67376bae
05:09:51,905 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7668f8fd
05:09:51,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7668f8fd
05:09:51,906 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c261c74
05:09:51,910 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@69ae7632
05:09:51,910 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@69ae7632
05:09:51,914 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@71e89a26
05:09:51,914 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@71e89a26
05:09:51,915 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6167a456
05:09:51,915 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@66e434e8
05:09:51,917 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4353db40
05:09:51,920 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@57abe94d
05:09:51,921 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57abe94d
05:09:51,922 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a48a582
05:09:51,922 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1221d607
05:09:51,923 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b45c8e4
05:09:51,923 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3dc14f80
05:09:51,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@627a890f
05:09:51,924 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7ef7faa9
05:09:51,925 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b901f7b
05:09:51,925 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c9aeec6
05:09:52,340  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:09:52,379  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:09:54,267  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:09:50 PDT 2015]; root of context hierarchy
05:09:54,315  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:09:50 PDT 2015]; root of context hierarchy
05:09:54,457  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:09:50 PDT 2015]; root of context hierarchy
05:09:54,559  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3926 ms
05:10:11,178 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@b6c6f89
05:10:11,182  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
05:10:11,248 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
05:10:11,259 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

05:10:11,260 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:10:11,287 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
05:10:11,310 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
05:10:11,312 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
05:10:11,315 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@1af78e37
05:10:11,317 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
05:10:11,317 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
05:10:11,318 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
05:10:11,324 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
05:10:11,332 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
05:10:11,333 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
05:10:11,334 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

05:10:11,334 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:10:11,344 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
05:10:11,344 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
05:10:11,345 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:10:11,377 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
05:10:23,024 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:10:29,910 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:16:09,987  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:16:10,089  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:16:10 PDT 2015]; root of context hierarchy
05:16:10,158  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:16:10,658  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:16:10,659  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:16:10,792  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:16:10,914  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:16:10,975  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:16:11,016  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:16:11,109  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:16:11,114  INFO Environment:213 - HHH000206: hibernate.properties not found
05:16:11,116  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:16:11,179  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:16:11,274 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7322013f
05:16:11,274 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7322013f
05:16:11,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7322013f
05:16:11,277 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4af0ae2c
05:16:11,278 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a5a26b7
05:16:11,279 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5457123a
05:16:11,281 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5a8d03ce
05:16:11,282 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5a8d03ce
05:16:11,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a8d03ce
05:16:11,283 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2e7cd4bb
05:16:11,283 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2e7cd4bb
05:16:11,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e7cd4bb
05:16:11,285 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@475fb7
05:16:11,285 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@475fb7
05:16:11,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@475fb7
05:16:11,287 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3be60847
05:16:11,287 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3be60847
05:16:11,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3be60847
05:16:11,289 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7b23aea2
05:16:11,289 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7b23aea2
05:16:11,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b23aea2
05:16:11,292 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@951053f
05:16:11,292 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@951053f
05:16:11,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@951053f
05:16:11,294 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4f3672eb
05:16:11,295 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4f3672eb
05:16:11,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4f3672eb
05:16:11,299 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@21252bef
05:16:11,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@21252bef
05:16:11,302 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@a486851
05:16:11,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@a486851
05:16:11,304 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3c5d60db
05:16:11,305 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3c5d60db
05:16:11,306 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4d305059
05:16:11,307 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59eb987a
05:16:11,308 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@6a450cb5
05:16:11,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a450cb5
05:16:11,311 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@58f8ce0f
05:16:11,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@58f8ce0f
05:16:11,314 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5a6f1342
05:16:11,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5a6f1342
05:16:11,317 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@73a5cc47
05:16:11,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73a5cc47
05:16:11,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73a5cc47
05:16:11,320 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@48dfce5c
05:16:11,322 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@7a02d760
05:16:11,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a02d760
05:16:11,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a02d760
05:16:11,324 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f93303f
05:16:11,325 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3e7940b3
05:16:11,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3e7940b3
05:16:11,326 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@73ab649f
05:16:11,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73ab649f
05:16:11,328 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5fa0943d
05:16:11,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5fa0943d
05:16:11,329 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@900ffc4
05:16:11,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@900ffc4
05:16:11,331 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6b83ec49
05:16:11,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6b83ec49
05:16:11,332 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@684a34f4
05:16:11,334 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@77cd1f67
05:16:11,334 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@77cd1f67
05:16:11,334 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@77cd1f67
05:16:11,335 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@307eb95f
05:16:11,336 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@307eb95f
05:16:11,336 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@307eb95f
05:16:11,337 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5246453e
05:16:11,338 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@125ed27
05:16:11,338 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@125ed27
05:16:11,339 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@125ed27
05:16:11,340 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@59da4992
05:16:11,340 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@59da4992
05:16:11,340 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@59da4992
05:16:11,341 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@33ccab9c
05:16:11,342 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@63661fc7
05:16:11,350 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5687ba39
05:16:11,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5687ba39
05:16:11,351 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a10407e
05:16:11,355 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@13cec4ff
05:16:11,355 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13cec4ff
05:16:11,359 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@67c912d3
05:16:11,359 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67c912d3
05:16:11,360 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@395854dd
05:16:11,361 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67836d4
05:16:11,362 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@16bbb59c
05:16:11,366 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1d4b0a07
05:16:11,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1d4b0a07
05:16:11,367 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3f2bf80d
05:16:11,368 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6cb5a64d
05:16:11,368 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@729eef5f
05:16:11,368 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@264c9994
05:16:11,368 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@46c7e6c0
05:16:11,369 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@701a79b
05:16:11,369 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2605433
05:16:11,369 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40a2fdd2
05:16:11,740  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:16:11,804  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:16:13,882  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:16:10 PDT 2015]; root of context hierarchy
05:16:13,934  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:16:10 PDT 2015]; root of context hierarchy
05:16:14,101  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:16:10 PDT 2015]; root of context hierarchy
05:16:14,251  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4260 ms
05:16:32,875 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:20:08,797  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:20:08,891  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:20:08 PDT 2015]; root of context hierarchy
05:20:08,943  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:20:09,490  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:20:09,491  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:20:09,620  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:20:09,752  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:20:09,839  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:20:09,880  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:20:09,992  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:20:09,998  INFO Environment:213 - HHH000206: hibernate.properties not found
05:20:10,000  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:20:10,126  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:20:10,260 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@34c050a1
05:20:10,260 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@34c050a1
05:20:10,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34c050a1
05:20:10,264 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@472dc215
05:20:10,266 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@63f819a6
05:20:10,268 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4f3672eb
05:20:10,272 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@76a1cc1a
05:20:10,272 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@76a1cc1a
05:20:10,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76a1cc1a
05:20:10,274 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@65a7bc80
05:20:10,275 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@65a7bc80
05:20:10,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65a7bc80
05:20:10,277 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3c5d60db
05:20:10,278 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3c5d60db
05:20:10,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c5d60db
05:20:10,281 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4d305059
05:20:10,281 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4d305059
05:20:10,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4d305059
05:20:10,284 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e00c94e
05:20:10,284 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e00c94e
05:20:10,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@e00c94e
05:20:10,287 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@26c494d7
05:20:10,288 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@26c494d7
05:20:10,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@26c494d7
05:20:10,290 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de83be1
05:20:10,291 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1de83be1
05:20:10,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1de83be1
05:20:10,294 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d5b2c1e
05:20:10,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d5b2c1e
05:20:10,297 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@48dfce5c
05:20:10,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@48dfce5c
05:20:10,299 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4fe687b5
05:20:10,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fe687b5
05:20:10,302 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62c02089
05:20:10,304 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ae37be2
05:20:10,306 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@234dfc8e
05:20:10,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@234dfc8e
05:20:10,310 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@39d44217
05:20:10,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39d44217
05:20:10,313 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3eb7ff78
05:20:10,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3eb7ff78
05:20:10,316 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d7005e2
05:20:10,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d7005e2
05:20:10,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d7005e2
05:20:10,321 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@647d3279
05:20:10,323 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@69eb1f23
05:20:10,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69eb1f23
05:20:10,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69eb1f23
05:20:10,325 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@299f9a81
05:20:10,327 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2dedde74
05:20:10,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2dedde74
05:20:10,330 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@20425fab
05:20:10,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20425fab
05:20:10,332 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@668ea404
05:20:10,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@668ea404
05:20:10,336 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@65130cf2
05:20:10,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@65130cf2
05:20:10,340 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7bca98d5
05:20:10,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7bca98d5
05:20:10,342 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45ea6c24
05:20:10,345 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@318beab4
05:20:10,345 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@318beab4
05:20:10,346 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@318beab4
05:20:10,348 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ad5f99
05:20:10,348 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ad5f99
05:20:10,349 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ad5f99
05:20:10,350 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2a10407e
05:20:10,354 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4582da06
05:20:10,356 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4582da06
05:20:10,357 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4582da06
05:20:10,360 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73cdf5f9
05:20:10,360 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73cdf5f9
05:20:10,360 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73cdf5f9
05:20:10,362 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6012bee8
05:20:10,363 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4b02dc4e
05:20:10,372 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@60515ab1
05:20:10,372 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@60515ab1
05:20:10,373 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@53b60595
05:20:10,380 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7af5ce66
05:20:10,381 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7af5ce66
05:20:10,387 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@21b75073
05:20:10,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@21b75073
05:20:10,388 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@69d6fe75
05:20:10,390 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5bbb351e
05:20:10,392 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7a80ebcd
05:20:10,397 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@360ccb68
05:20:10,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@360ccb68
05:20:10,399 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7a2b3cfd
05:20:10,399 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33602729
05:20:10,400 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3638120f
05:20:10,400 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7bf3bf2e
05:20:10,400 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@581cb879
05:20:10,401 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6a77953c
05:20:10,401 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c294a17
05:20:10,401 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7a458c73
05:20:10,878  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:20:10,933  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:20:13,400  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:08 PDT 2015]; root of context hierarchy
05:20:13,463  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:08 PDT 2015]; root of context hierarchy
05:20:13,645  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:08 PDT 2015]; root of context hierarchy
05:20:13,824  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5024 ms
05:20:24,813  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 05:16:10 PDT 2015]; root of context hierarchy
05:20:24,821  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
05:20:26,842  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:20:26,956  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:20:26 PDT 2015]; root of context hierarchy
05:20:27,021  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:20:27,537  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:20:27,537  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:20:27,671  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:20:27,787  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:20:27,843  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:20:27,874  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:20:27,976  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:20:27,979  INFO Environment:213 - HHH000206: hibernate.properties not found
05:20:27,981  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:20:28,043  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:20:28,151 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b70e22d
05:20:28,152 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b70e22d
05:20:28,152 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b70e22d
05:20:28,153 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ce54af2
05:20:28,155 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56b55c22
05:20:28,156 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@fe72455
05:20:28,159 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f00d630
05:20:28,159 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@f00d630
05:20:28,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@f00d630
05:20:28,162 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4c9b259b
05:20:28,162 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4c9b259b
05:20:28,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4c9b259b
05:20:28,164 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@15223a2a
05:20:28,165 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@15223a2a
05:20:28,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@15223a2a
05:20:28,166 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1369ab0e
05:20:28,167 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1369ab0e
05:20:28,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1369ab0e
05:20:28,169 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7e116f94
05:20:28,169 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7e116f94
05:20:28,169 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e116f94
05:20:28,171 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2c2e5dfc
05:20:28,171 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2c2e5dfc
05:20:28,172 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2c2e5dfc
05:20:28,173 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6586cfc7
05:20:28,173 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6586cfc7
05:20:28,174 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6586cfc7
05:20:28,176 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6cb6fbe2
05:20:28,176 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6cb6fbe2
05:20:28,180 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@361a46e
05:20:28,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@361a46e
05:20:28,183 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3af2b56e
05:20:28,183 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3af2b56e
05:20:28,185 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@688a41fd
05:20:28,186 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@322626c0
05:20:28,188 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@69a05803
05:20:28,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@69a05803
05:20:28,191 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@41715645
05:20:28,191 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@41715645
05:20:28,194 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@79e7ed57
05:20:28,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@79e7ed57
05:20:28,197 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5db45474
05:20:28,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5db45474
05:20:28,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5db45474
05:20:28,199 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@367212a0
05:20:28,201 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@25bf091d
05:20:28,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25bf091d
05:20:28,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25bf091d
05:20:28,202 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7636e4a7
05:20:28,204 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@596464ee
05:20:28,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@596464ee
05:20:28,205 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4d81fd08
05:20:28,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4d81fd08
05:20:28,206 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6db60961
05:20:28,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6db60961
05:20:28,208 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1a77067a
05:20:28,208 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a77067a
05:20:28,210 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29b7c509
05:20:28,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29b7c509
05:20:28,212 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@113fc86a
05:20:28,213 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4cbb5f33
05:20:28,213 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4cbb5f33
05:20:28,214 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4cbb5f33
05:20:28,216 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7de177ab
05:20:28,217 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7de177ab
05:20:28,217 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7de177ab
05:20:28,218 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3aef7354
05:20:28,220 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1735b7ff
05:20:28,221 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1735b7ff
05:20:28,221 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1735b7ff
05:20:28,223 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@473a9ac9
05:20:28,223 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@473a9ac9
05:20:28,223 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@473a9ac9
05:20:28,225 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@23720af6
05:20:28,226 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@55d8051a
05:20:28,230 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7ebd3000
05:20:28,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7ebd3000
05:20:28,231 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6193939b
05:20:28,235 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@83e9f40
05:20:28,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@83e9f40
05:20:28,238 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@9ea1090
05:20:28,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9ea1090
05:20:28,239 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@270d22a1
05:20:28,239 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1347a22f
05:20:28,241 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a7ed502
05:20:28,248 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@29799b1f
05:20:28,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29799b1f
05:20:28,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@26bc58b2
05:20:28,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@237c08b5
05:20:28,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@84e6c50
05:20:28,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f240a62
05:20:28,249 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4b99bafc
05:20:28,250 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8e33a9a
05:20:28,250 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7334eb3a
05:20:28,250 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c6c8824
05:20:28,550  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:20:28,595  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:20:41,961  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:20:42,061  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:20:42 PDT 2015]; root of context hierarchy
05:20:42,109  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:20:42,745  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:20:42,746  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:20:42,925  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:20:43,059  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:20:43,124  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:20:43,163  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:20:43,246  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:20:43,249  INFO Environment:213 - HHH000206: hibernate.properties not found
05:20:43,252  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:20:43,313  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:20:43,392 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@787178b1
05:20:43,392 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@787178b1
05:20:43,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@787178b1
05:20:43,395 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433ef204
05:20:43,397 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b0902b4
05:20:43,399 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@103c97ff
05:20:43,404 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@66756662
05:20:43,404 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@66756662
05:20:43,405 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66756662
05:20:43,406 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@40d96578
05:20:43,407 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@40d96578
05:20:43,407 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40d96578
05:20:43,408 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@718989fa
05:20:43,409 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@718989fa
05:20:43,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@718989fa
05:20:43,410 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@50122012
05:20:43,411 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@50122012
05:20:43,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50122012
05:20:43,414 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1b30a54e
05:20:43,415 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1b30a54e
05:20:43,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b30a54e
05:20:43,418 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@448ade1
05:20:43,419 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@448ade1
05:20:43,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@448ade1
05:20:43,421 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec88aa1
05:20:43,421 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec88aa1
05:20:43,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ec88aa1
05:20:43,424 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@134a8ead
05:20:43,424 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@134a8ead
05:20:43,425 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44fd7ba4
05:20:43,426 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44fd7ba4
05:20:43,429 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@8f57e4c
05:20:43,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@8f57e4c
05:20:43,431 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2baac4a7
05:20:43,432 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@282c4da0
05:20:43,434 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5e2a6991
05:20:43,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e2a6991
05:20:43,439 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2450256f
05:20:43,439 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2450256f
05:20:43,441 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5345dfe8
05:20:43,442 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5345dfe8
05:20:43,444 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6afbe6a1
05:20:43,444 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6afbe6a1
05:20:43,444 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6afbe6a1
05:20:43,446 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@259287ac
05:20:43,448 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@105db94d
05:20:43,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@105db94d
05:20:43,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@105db94d
05:20:43,449 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2e362407
05:20:43,451 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@24e5389c
05:20:43,451 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24e5389c
05:20:43,452 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@54326e9
05:20:43,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54326e9
05:20:43,454 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78b0ec3a
05:20:43,454 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78b0ec3a
05:20:43,455 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6818fd48
05:20:43,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6818fd48
05:20:43,457 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7ac48f05
05:20:43,458 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7ac48f05
05:20:43,458 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ace6346
05:20:43,459 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c5ca0b6
05:20:43,460 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c5ca0b6
05:20:43,460 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c5ca0b6
05:20:43,461 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45287377
05:20:43,461 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45287377
05:20:43,461 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45287377
05:20:43,462 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@410fc508
05:20:43,464 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5c234920
05:20:43,464 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c234920
05:20:43,464 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5c234920
05:20:43,466 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a4464c5
05:20:43,466 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a4464c5
05:20:43,466 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a4464c5
05:20:43,469 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5ebbde60
05:20:43,470 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@15a8cebd
05:20:43,474 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@589fb74d
05:20:43,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@589fb74d
05:20:43,474 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37d699a1
05:20:43,477 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@307c59ea
05:20:43,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@307c59ea
05:20:43,480 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@611c3eae
05:20:43,481 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@611c3eae
05:20:43,481 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17176b18
05:20:43,482 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57b9389f
05:20:43,483 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@68c34db2
05:20:43,486 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@504497fa
05:20:43,486 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@504497fa
05:20:43,486 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43c39321
05:20:43,487 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@52aa7742
05:20:43,487 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d0d120b
05:20:43,487 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b5c134e
05:20:43,487 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34d9df9f
05:20:43,487 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35c8be21
05:20:43,488 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60807fd9
05:20:43,488 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcdd6e4
05:20:43,851  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:20:43,901  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:20:46,144  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:42 PDT 2015]; root of context hierarchy
05:20:46,208  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:42 PDT 2015]; root of context hierarchy
05:20:46,386  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:20:42 PDT 2015]; root of context hierarchy
05:20:46,547  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4584 ms
05:20:55,535 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@47dc630a
05:20:55,536  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
05:20:55,571 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
05:20:55,583 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

05:20:55,583 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:20:55,614 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
05:20:55,648 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
05:20:55,650 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
05:20:55,652 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@8f57e4c
05:20:55,654 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
05:20:55,654 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
05:20:55,655 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
05:20:55,668 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
05:20:55,681 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
05:20:55,682 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
05:20:55,683 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

05:20:55,684 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:20:55,697 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
05:20:55,697 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
05:20:55,697 DEBUG ErrorCounter:95 - throwQueryException() : no errors
05:20:55,738 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
05:21:16,739 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:23:58,704  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:23:58,809  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:23:58 PDT 2015]; root of context hierarchy
05:23:58,848  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:23:59,344  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:23:59,345  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:23:59,479  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:23:59,595  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:23:59,651  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:23:59,683  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:23:59,773  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:23:59,777  INFO Environment:213 - HHH000206: hibernate.properties not found
05:23:59,778  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:23:59,842  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:23:59,920 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18f1a81a
05:23:59,920 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@18f1a81a
05:23:59,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@18f1a81a
05:23:59,923 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@648c80cb
05:23:59,925 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2693e39c
05:23:59,927 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@12115c28
05:23:59,930 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@73b71935
05:23:59,930 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@73b71935
05:23:59,931 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73b71935
05:23:59,932 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@740530b
05:23:59,932 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@740530b
05:23:59,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@740530b
05:23:59,934 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@493ed8e6
05:23:59,935 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@493ed8e6
05:23:59,935 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@493ed8e6
05:23:59,937 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@444720b7
05:23:59,937 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@444720b7
05:23:59,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@444720b7
05:23:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@76e4df53
05:23:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@76e4df53
05:23:59,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@76e4df53
05:23:59,943 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@63be4548
05:23:59,943 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@63be4548
05:23:59,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@63be4548
05:23:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f53e07d
05:23:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f53e07d
05:23:59,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f53e07d
05:23:59,949 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3ade99bb
05:23:59,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3ade99bb
05:23:59,952 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5013c6bc
05:23:59,952 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5013c6bc
05:23:59,954 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@53c0424a
05:23:59,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@53c0424a
05:23:59,955 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4fb3c670
05:23:59,957 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1071f3ad
05:23:59,959 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@433d5536
05:23:59,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@433d5536
05:23:59,963 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4667c6d9
05:23:59,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4667c6d9
05:23:59,965 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4af0ae2c
05:23:59,966 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4af0ae2c
05:23:59,968 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3524ee20
05:23:59,969 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3524ee20
05:23:59,969 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3524ee20
05:23:59,972 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4690a37e
05:23:59,974 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2d541e01
05:23:59,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2d541e01
05:23:59,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2d541e01
05:23:59,976 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1eeb9e5c
05:23:59,978 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@776b7fa2
05:23:59,978 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@776b7fa2
05:23:59,979 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@475fb7
05:23:59,980 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@475fb7
05:23:59,981 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3be60847
05:23:59,982 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3be60847
05:23:59,983 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@73f6ffb1
05:23:59,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73f6ffb1
05:23:59,985 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1f031994
05:23:59,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1f031994
05:23:59,987 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e196238
05:23:59,989 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c2063e0
05:23:59,989 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c2063e0
05:23:59,990 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c2063e0
05:23:59,991 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e3c4c12
05:23:59,992 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e3c4c12
05:23:59,992 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e3c4c12
05:23:59,993 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@e763080
05:23:59,995 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4b98c80c
05:23:59,995 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b98c80c
05:23:59,995 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4b98c80c
05:23:59,997 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@706dee4
05:23:59,997 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@706dee4
05:23:59,997 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@706dee4
05:23:59,998 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3021e31
05:23:59,999 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17adbecf
05:24:00,005 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7040d71
05:24:00,005 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7040d71
05:24:00,006 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7ecca48
05:24:00,012 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@12f32f99
05:24:00,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@12f32f99
05:24:00,017 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@50ad5625
05:24:00,017 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50ad5625
05:24:00,018 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52ec5ba6
05:24:00,019 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3119fcad
05:24:00,021 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2643caa6
05:24:00,026 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6d028c7e
05:24:00,026 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6d028c7e
05:24:00,027 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20425fab
05:24:00,028 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71c2cb26
05:24:00,029 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@593db293
05:24:00,029 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5220e6ff
05:24:00,029 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@602d5417
05:24:00,029 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75128cf
05:24:00,030 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33ccab9c
05:24:00,030 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@668ea404
05:24:00,412  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:24:00,473  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:24:02,625  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:23:58 PDT 2015]; root of context hierarchy
05:24:02,686  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:23:58 PDT 2015]; root of context hierarchy
05:24:02,855  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:23:58 PDT 2015]; root of context hierarchy
05:24:03,027  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4317 ms
05:24:14,315  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 05:20:42 PDT 2015]; root of context hierarchy
05:24:14,328  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
05:24:25,522  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:24:25,619  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:24:25 PDT 2015]; root of context hierarchy
05:24:25,662  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:24:26,142  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:24:26,144  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:24:26,271  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:24:26,380  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:24:26,439  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:24:26,469  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:24:26,574  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:24:26,579  INFO Environment:213 - HHH000206: hibernate.properties not found
05:24:26,580  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:24:26,645  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:24:26,729 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@787178b1
05:24:26,729 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@787178b1
05:24:26,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@787178b1
05:24:26,732 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433ef204
05:24:26,734 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5b0902b4
05:24:26,735 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@103c97ff
05:24:26,736 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@66756662
05:24:26,737 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@66756662
05:24:26,737 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66756662
05:24:26,738 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@40d96578
05:24:26,739 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@40d96578
05:24:26,739 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40d96578
05:24:26,741 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@718989fa
05:24:26,741 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@718989fa
05:24:26,742 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@718989fa
05:24:26,743 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@50122012
05:24:26,743 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@50122012
05:24:26,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@50122012
05:24:26,746 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1b30a54e
05:24:26,746 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1b30a54e
05:24:26,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1b30a54e
05:24:26,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@448ade1
05:24:26,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@448ade1
05:24:26,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@448ade1
05:24:26,752 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec88aa1
05:24:26,752 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1ec88aa1
05:24:26,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ec88aa1
05:24:26,755 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@134a8ead
05:24:26,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@134a8ead
05:24:26,757 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@44fd7ba4
05:24:26,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@44fd7ba4
05:24:26,759 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@8f57e4c
05:24:26,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@8f57e4c
05:24:26,761 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2baac4a7
05:24:26,762 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@282c4da0
05:24:26,763 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5e2a6991
05:24:26,764 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e2a6991
05:24:26,766 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2450256f
05:24:26,766 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2450256f
05:24:26,768 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5345dfe8
05:24:26,769 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5345dfe8
05:24:26,771 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6afbe6a1
05:24:26,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6afbe6a1
05:24:26,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6afbe6a1
05:24:26,775 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@259287ac
05:24:26,777 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@105db94d
05:24:26,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@105db94d
05:24:26,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@105db94d
05:24:26,779 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2e362407
05:24:26,781 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@24e5389c
05:24:26,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24e5389c
05:24:26,783 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@54326e9
05:24:26,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54326e9
05:24:26,785 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@78b0ec3a
05:24:26,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@78b0ec3a
05:24:26,787 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6818fd48
05:24:26,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6818fd48
05:24:26,789 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7ac48f05
05:24:26,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7ac48f05
05:24:26,790 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ace6346
05:24:26,791 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c5ca0b6
05:24:26,792 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c5ca0b6
05:24:26,792 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c5ca0b6
05:24:26,793 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@45287377
05:24:26,794 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@45287377
05:24:26,794 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@45287377
05:24:26,796 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@410fc508
05:24:26,797 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5c234920
05:24:26,798 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5c234920
05:24:26,798 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5c234920
05:24:26,799 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5a4464c5
05:24:26,799 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5a4464c5
05:24:26,800 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5a4464c5
05:24:26,801 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5ebbde60
05:24:26,802 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@15a8cebd
05:24:26,806 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@589fb74d
05:24:26,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@589fb74d
05:24:26,807 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37d699a1
05:24:26,811 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@307c59ea
05:24:26,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@307c59ea
05:24:26,815 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@611c3eae
05:24:26,815 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@611c3eae
05:24:26,815 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@17176b18
05:24:26,816 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57b9389f
05:24:26,817 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@68c34db2
05:24:26,821 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@504497fa
05:24:26,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@504497fa
05:24:26,822 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43c39321
05:24:26,822 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@52aa7742
05:24:26,822 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d0d120b
05:24:26,822 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6b5c134e
05:24:26,823 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@34d9df9f
05:24:26,823 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@35c8be21
05:24:26,823 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60807fd9
05:24:26,823 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bcdd6e4
05:24:27,173  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:24:27,229  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:24:29,278  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:24:25 PDT 2015]; root of context hierarchy
05:24:29,328  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:24:25 PDT 2015]; root of context hierarchy
05:24:29,498  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:24:25 PDT 2015]; root of context hierarchy
05:24:29,661  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4137 ms
05:24:47,049 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:29:55,992  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:29:56,095  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:29:56 PDT 2015]; root of context hierarchy
05:29:56,139  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:29:56,709  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:29:56,711  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:29:56,852  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:29:56,980  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:29:57,035  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:29:57,070  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:29:57,168  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:29:57,172  INFO Environment:213 - HHH000206: hibernate.properties not found
05:29:57,173  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:29:57,239  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:29:57,333 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@36995784
05:29:57,333 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@36995784
05:29:57,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@36995784
05:29:57,336 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7fecc26f
05:29:57,338 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7d5ddfac
05:29:57,339 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@76e4df53
05:29:57,342 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc75792
05:29:57,342 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4bc75792
05:29:57,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4bc75792
05:29:57,344 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@620260ad
05:29:57,345 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@620260ad
05:29:57,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@620260ad
05:29:57,347 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2735a7dc
05:29:57,347 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2735a7dc
05:29:57,348 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2735a7dc
05:29:57,349 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@360432d3
05:29:57,349 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@360432d3
05:29:57,350 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@360432d3
05:29:57,352 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6527f68a
05:29:57,352 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6527f68a
05:29:57,353 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6527f68a
05:29:57,355 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4fb3c670
05:29:57,355 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4fb3c670
05:29:57,356 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4fb3c670
05:29:57,358 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7444714e
05:29:57,358 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7444714e
05:29:57,358 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7444714e
05:29:57,361 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7322013f
05:29:57,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7322013f
05:29:57,363 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e2af93
05:29:57,364 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e2af93
05:29:57,366 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1d3bf0af
05:29:57,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1d3bf0af
05:29:57,368 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@481b8d53
05:29:57,369 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f93fce1
05:29:57,371 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5ce7ab6f
05:29:57,372 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ce7ab6f
05:29:57,375 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@26edfa34
05:29:57,375 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@26edfa34
05:29:57,379 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6c4eccd2
05:29:57,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c4eccd2
05:29:57,382 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@73f6ffb1
05:29:57,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73f6ffb1
05:29:57,383 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73f6ffb1
05:29:57,387 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3fecdd00
05:29:57,389 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@472dc215
05:29:57,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@472dc215
05:29:57,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@472dc215
05:29:57,391 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e196238
05:29:57,392 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2e871e93
05:29:57,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2e871e93
05:29:57,394 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@17e31657
05:29:57,394 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17e31657
05:29:57,395 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@597a5ead
05:29:57,396 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@597a5ead
05:29:57,397 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5b132063
05:29:57,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5b132063
05:29:57,400 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@76e10574
05:29:57,400 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@76e10574
05:29:57,401 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3304362e
05:29:57,402 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@74214ac3
05:29:57,403 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@74214ac3
05:29:57,403 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@74214ac3
05:29:57,404 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66075347
05:29:57,405 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66075347
05:29:57,405 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66075347
05:29:57,406 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@26c494d7
05:29:57,407 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3bb6b9ab
05:29:57,408 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3bb6b9ab
05:29:57,408 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3bb6b9ab
05:29:57,409 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@608b74f3
05:29:57,410 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@608b74f3
05:29:57,410 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@608b74f3
05:29:57,411 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2a8081f5
05:29:57,412 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17fa25f1
05:29:57,417 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@63075ad1
05:29:57,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@63075ad1
05:29:57,418 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63bb719d
05:29:57,422 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2643caa6
05:29:57,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2643caa6
05:29:57,426 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@75128cf
05:29:57,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@75128cf
05:29:57,427 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@62109320
05:29:57,428 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@63661fc7
05:29:57,429 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@6421e9e7
05:29:57,436 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@578483bd
05:29:57,436 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@578483bd
05:29:57,437 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18f1631c
05:29:57,438 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ad5f99
05:29:57,438 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72b4ecb2
05:29:57,438 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@457dc809
05:29:57,439 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5687ba39
05:29:57,439 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3fbf66e7
05:29:57,439 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6abbdcde
05:29:57,439 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@41ad6c00
05:29:57,795  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:29:57,847  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:30:00,256  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:29:56 PDT 2015]; root of context hierarchy
05:30:00,313  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:29:56 PDT 2015]; root of context hierarchy
05:30:00,488  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:29:56 PDT 2015]; root of context hierarchy
05:30:00,641  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4645 ms
05:30:07,467 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
05:31:51,224  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:31:51,320  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:31:51 PDT 2015]; root of context hierarchy
05:31:51,360  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:31:51,933  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:31:51,934  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:31:52,086  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:31:52,202  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:31:52,263  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:31:52,290  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:31:52,373  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:31:52,376  INFO Environment:213 - HHH000206: hibernate.properties not found
05:31:52,378  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:31:52,432  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:31:52,511 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@22825762
05:31:52,512 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@22825762
05:31:52,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@22825762
05:31:52,515 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52984065
05:31:52,516 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1abb719a
05:31:52,518 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@102dff25
05:31:52,520 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@17adbecf
05:31:52,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@17adbecf
05:31:52,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17adbecf
05:31:52,523 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6287e312
05:31:52,524 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6287e312
05:31:52,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6287e312
05:31:52,526 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@26c494d7
05:31:52,527 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@26c494d7
05:31:52,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@26c494d7
05:31:52,529 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3bb6b9ab
05:31:52,530 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3bb6b9ab
05:31:52,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3bb6b9ab
05:31:52,533 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@650d5a3d
05:31:52,533 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@650d5a3d
05:31:52,533 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@650d5a3d
05:31:52,536 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1545ef47
05:31:52,537 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1545ef47
05:31:52,537 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1545ef47
05:31:52,540 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5a86112a
05:31:52,540 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5a86112a
05:31:52,540 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5a86112a
05:31:52,543 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2438a038
05:31:52,543 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2438a038
05:31:52,549 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1315f1d5
05:31:52,550 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1315f1d5
05:31:52,551 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@63bb719d
05:31:52,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@63bb719d
05:31:52,553 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79fbcef4
05:31:52,554 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3d00c2ae
05:31:52,557 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@684a34f4
05:31:52,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@684a34f4
05:31:52,560 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2b20caed
05:31:52,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b20caed
05:31:52,562 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2561d61
05:31:52,563 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2561d61
05:31:52,564 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@59da4992
05:31:52,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@59da4992
05:31:52,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@59da4992
05:31:52,568 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5220e6ff
05:31:52,570 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@276b68af
05:31:52,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@276b68af
05:31:52,571 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@276b68af
05:31:52,572 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@542b27af
05:31:52,573 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@475b796d
05:31:52,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475b796d
05:31:52,575 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6a495d88
05:31:52,576 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a495d88
05:31:52,577 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@498cf1dc
05:31:52,578 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@498cf1dc
05:31:52,579 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6b9b9cb9
05:31:52,580 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6b9b9cb9
05:31:52,582 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58e9e852
05:31:52,582 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58e9e852
05:31:52,583 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@523e019c
05:31:52,585 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@57f83dc7
05:31:52,585 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@57f83dc7
05:31:52,586 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@57f83dc7
05:31:52,589 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62d72091
05:31:52,589 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62d72091
05:31:52,590 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62d72091
05:31:52,591 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@98c4a8b
05:31:52,592 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@34d6e9a4
05:31:52,593 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@34d6e9a4
05:31:52,593 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@34d6e9a4
05:31:52,595 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5c7c22ce
05:31:52,595 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5c7c22ce
05:31:52,595 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5c7c22ce
05:31:52,596 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2e214d39
05:31:52,598 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@456beb8b
05:31:52,605 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@502dc93a
05:31:52,605 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@502dc93a
05:31:52,607 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3dc5eb8f
05:31:52,612 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@318ca53a
05:31:52,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@318ca53a
05:31:52,617 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5cdf2c83
05:31:52,618 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5cdf2c83
05:31:52,619 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37d50217
05:31:52,619 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@672c4e24
05:31:52,622 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1c294a17
05:31:52,629 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1f4d9c7f
05:31:52,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f4d9c7f
05:31:52,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12ce659
05:31:52,631 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36299b83
05:31:52,631 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7212d3df
05:31:52,632 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9886ec3
05:31:52,632 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ff05f85
05:31:52,633 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15ff247b
05:31:52,633 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@71979130
05:31:52,633 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b2317b7
05:31:52,994  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:31:53,044  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:31:55,316  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:31:51 PDT 2015]; root of context hierarchy
05:31:55,369  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:31:51 PDT 2015]; root of context hierarchy
05:31:55,549  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:31:51 PDT 2015]; root of context hierarchy
05:31:55,729  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4500 ms
05:33:01,623  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
05:33:01,732  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 05:33:01 PDT 2015]; root of context hierarchy
05:33:01,774  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
05:33:02,307  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
05:33:02,308  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
05:33:02,444  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
05:33:02,570  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
05:33:02,637  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
05:33:02,675  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
05:33:02,784  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
05:33:02,789  INFO Environment:213 - HHH000206: hibernate.properties not found
05:33:02,792  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
05:33:02,918  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
05:33:03,008 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@515b7335
05:33:03,009 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@515b7335
05:33:03,009 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@515b7335
05:33:03,012 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74214ac3
05:33:03,014 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@283595db
05:33:03,015 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@26c494d7
05:33:03,017 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@139da216
05:33:03,018 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@139da216
05:33:03,018 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@139da216
05:33:03,019 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5e9a9683
05:33:03,020 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5e9a9683
05:33:03,020 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5e9a9683
05:33:03,022 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17fa25f1
05:33:03,023 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@17fa25f1
05:33:03,023 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@17fa25f1
05:33:03,025 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@31d09031
05:33:03,025 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@31d09031
05:33:03,025 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31d09031
05:33:03,027 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@62c02089
05:33:03,028 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@62c02089
05:33:03,028 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@62c02089
05:33:03,030 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73ab649f
05:33:03,031 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73ab649f
05:33:03,031 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73ab649f
05:33:03,033 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@63bb719d
05:33:03,033 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@63bb719d
05:33:03,034 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@63bb719d
05:33:03,036 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d00c2ae
05:33:03,037 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d00c2ae
05:33:03,038 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@684a34f4
05:33:03,039 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@684a34f4
05:33:03,040 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@33a39d7e
05:33:03,041 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@33a39d7e
05:33:03,042 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2b20caed
05:33:03,043 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63e54c66
05:33:03,045 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@33aa4326
05:33:03,046 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@33aa4326
05:33:03,051 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@75128cf
05:33:03,051 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@75128cf
05:33:03,054 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@542b27af
05:33:03,055 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@542b27af
05:33:03,057 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7bca98d5
05:33:03,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7bca98d5
05:33:03,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7bca98d5
05:33:03,061 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@45ea6c24
05:33:03,062 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@318beab4
05:33:03,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@318beab4
05:33:03,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@318beab4
05:33:03,064 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6b9b9cb9
05:33:03,065 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6abbdcde
05:33:03,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6abbdcde
05:33:03,067 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@52238861
05:33:03,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@52238861
05:33:03,068 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@38624a3a
05:33:03,069 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@38624a3a
05:33:03,070 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@18a349cb
05:33:03,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18a349cb
05:33:03,072 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4eb69e8d
05:33:03,073 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4eb69e8d
05:33:03,073 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24b05292
05:33:03,075 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5c7c22ce
05:33:03,075 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5c7c22ce
05:33:03,076 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5c7c22ce
05:33:03,077 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e214d39
05:33:03,078 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e214d39
05:33:03,078 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e214d39
05:33:03,079 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@456beb8b
05:33:03,080 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@37e967df
05:33:03,081 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@37e967df
05:33:03,081 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@37e967df
05:33:03,083 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@65011123
05:33:03,083 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@65011123
05:33:03,083 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@65011123
05:33:03,085 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@16bbb59c
05:33:03,086 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6dd50380
05:33:03,092 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2e268c19
05:33:03,092 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e268c19
05:33:03,093 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c1fd5aa
05:33:03,097 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1899c7ae
05:33:03,097 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1899c7ae
05:33:03,103 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@15b882a0
05:33:03,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15b882a0
05:33:03,104 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f404bc6
05:33:03,104 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f4d9c7f
05:33:03,106 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@6ff05f85
05:33:03,109 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5e2ab1c
05:33:03,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e2ab1c
05:33:03,111 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52e44f71
05:33:03,111 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e1b1d22
05:33:03,111 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@653c0c9c
05:33:03,112 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5276330a
05:33:03,112 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@221961f2
05:33:03,112 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@541d8a9e
05:33:03,113 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51c0346d
05:33:03,113 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@32cda33c
05:33:03,462  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
05:33:03,517  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
05:33:05,502  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:33:01 PDT 2015]; root of context hierarchy
05:33:05,544  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:33:01 PDT 2015]; root of context hierarchy
05:33:05,722  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 05:33:01 PDT 2015]; root of context hierarchy
05:33:05,905  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4278 ms
05:33:15,556 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:55:00,467  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:55:00,569  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 09:55:00 PDT 2015]; root of context hierarchy
09:55:00,614  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:55:01,137  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:55:01,138  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:55:01,237  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:55:01,329  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:55:01,369  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:55:01,396  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:55:01,460  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:55:01,463  INFO Environment:213 - HHH000206: hibernate.properties not found
09:55:01,464  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:55:01,512  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:55:01,590 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@380e3122
09:55:01,590 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@380e3122
09:55:01,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@380e3122
09:55:01,593 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1574f323
09:55:01,594 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16f2d883
09:55:01,595 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@69988d42
09:55:01,597 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@19656e21
09:55:01,597 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@19656e21
09:55:01,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19656e21
09:55:01,599 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5d32f5db
09:55:01,599 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5d32f5db
09:55:01,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d32f5db
09:55:01,601 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@65f3f9e2
09:55:01,602 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@65f3f9e2
09:55:01,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65f3f9e2
09:55:01,603 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@257708e
09:55:01,604 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@257708e
09:55:01,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@257708e
09:55:01,605 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@37c45154
09:55:01,606 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@37c45154
09:55:01,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37c45154
09:55:01,608 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@775a5a67
09:55:01,608 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@775a5a67
09:55:01,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@775a5a67
09:55:01,610 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2d94279f
09:55:01,610 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2d94279f
09:55:01,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2d94279f
09:55:01,613 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ef7faa9
09:55:01,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ef7faa9
09:55:01,615 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b9a2629
09:55:01,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b9a2629
09:55:01,616 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2041c9a3
09:55:01,617 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2041c9a3
09:55:01,617 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5089a72b
09:55:01,618 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@17344d7
09:55:01,619 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a490518
09:55:01,620 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a490518
09:55:01,622 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6792f2c6
09:55:01,622 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6792f2c6
09:55:01,624 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7054c068
09:55:01,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7054c068
09:55:01,626 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@37f7ce20
09:55:01,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37f7ce20
09:55:01,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37f7ce20
09:55:01,630 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7da6d695
09:55:01,631 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@26c1f3eb
09:55:01,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@26c1f3eb
09:55:01,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@26c1f3eb
09:55:01,633 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@79f3f34c
09:55:01,635 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@7e764e5c
09:55:01,635 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e764e5c
09:55:01,636 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7e4dddee
09:55:01,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7e4dddee
09:55:01,638 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4d142b53
09:55:01,638 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4d142b53
09:55:01,641 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@811d8d6
09:55:01,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@811d8d6
09:55:01,646 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19d0d1ab
09:55:01,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19d0d1ab
09:55:01,647 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24d73c51
09:55:01,648 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@71ce19ee
09:55:01,649 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@71ce19ee
09:55:01,649 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@71ce19ee
09:55:01,650 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@47e70f54
09:55:01,650 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@47e70f54
09:55:01,651 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@47e70f54
09:55:01,652 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3c468360
09:55:01,653 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@68b3de47
09:55:01,653 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@68b3de47
09:55:01,653 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@68b3de47
09:55:01,655 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25c06894
09:55:01,655 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25c06894
09:55:01,655 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25c06894
09:55:01,656 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e5f05f8
09:55:01,657 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@65234a9
09:55:01,662 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@106f2425
09:55:01,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@106f2425
09:55:01,663 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bbe852a
09:55:01,666 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4a7ac98b
09:55:01,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4a7ac98b
09:55:01,670 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@76bdfc19
09:55:01,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@76bdfc19
09:55:01,671 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@19b0a9f2
09:55:01,672 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@39b9dc35
09:55:01,674 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@6cfac0bd
09:55:01,677 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2bbaf983
09:55:01,678 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2bbaf983
09:55:01,678 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f071d0c
09:55:01,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@138d978e
09:55:01,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@357e7113
09:55:01,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8d23cd8
09:55:01,679 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5feaafb3
09:55:01,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20a46227
09:55:01,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@669469c9
09:55:01,680 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f39ad3f
09:55:01,955  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:55:01,987  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:55:03,973  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 09:55:00 PDT 2015]; root of context hierarchy
09:55:04,013  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 09:55:00 PDT 2015]; root of context hierarchy
09:55:04,147  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 09:55:00 PDT 2015]; root of context hierarchy
09:55:04,304  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3834 ms
09:55:16,409 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
10:07:13,850  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:07:13,928  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:07:13 PDT 2015]; root of context hierarchy
10:07:13,968  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:07:14,399  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:07:14,400  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:07:14,499  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:07:14,578  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:07:14,617  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:07:14,639  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:07:14,698  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:07:14,701  INFO Environment:213 - HHH000206: hibernate.properties not found
10:07:14,702  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:07:14,743  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:07:14,801 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2bed5828
10:07:14,801 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2bed5828
10:07:14,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2bed5828
10:07:14,803 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75b4db22
10:07:14,804 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@167bae0b
10:07:14,805 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@294a12b5
10:07:14,807 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6920fa35
10:07:14,807 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6920fa35
10:07:14,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6920fa35
10:07:14,809 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@48301bfe
10:07:14,809 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@48301bfe
10:07:14,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48301bfe
10:07:14,811 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c931728
10:07:14,811 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c931728
10:07:14,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c931728
10:07:14,813 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5507584d
10:07:14,813 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5507584d
10:07:14,813 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5507584d
10:07:14,814 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68fa8ea5
10:07:14,815 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68fa8ea5
10:07:14,815 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68fa8ea5
10:07:14,817 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@183a84f4
10:07:14,818 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@183a84f4
10:07:14,818 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@183a84f4
10:07:14,819 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3bf52f8f
10:07:14,819 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3bf52f8f
10:07:14,819 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3bf52f8f
10:07:14,822 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45f6181a
10:07:14,822 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45f6181a
10:07:14,823 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f26cd76
10:07:14,824 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f26cd76
10:07:14,824 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@322f84fd
10:07:14,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@322f84fd
10:07:14,825 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30a6984c
10:07:14,826 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7841c990
10:07:14,827 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5b827796
10:07:14,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b827796
10:07:14,828 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@e5f05f8
10:07:14,829 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e5f05f8
10:07:14,830 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@c19bb2a
10:07:14,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c19bb2a
10:07:14,831 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ed5cc8c
10:07:14,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ed5cc8c
10:07:14,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ed5cc8c
10:07:14,833 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374bf34b
10:07:14,834 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@71ac5723
10:07:14,834 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71ac5723
10:07:14,834 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71ac5723
10:07:14,835 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5857d723
10:07:14,835 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4fea9f19
10:07:14,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fea9f19
10:07:14,836 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@362fd4e9
10:07:14,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@362fd4e9
10:07:14,837 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d84ab90
10:07:14,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d84ab90
10:07:14,838 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@109188b4
10:07:14,839 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109188b4
10:07:14,840 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f09ff10
10:07:14,840 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f09ff10
10:07:14,841 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c65f2e1
10:07:14,841 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4a7ac98b
10:07:14,842 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a7ac98b
10:07:14,842 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4a7ac98b
10:07:14,843 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@469bd719
10:07:14,843 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@469bd719
10:07:14,843 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@469bd719
10:07:14,843 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@127320df
10:07:14,844 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@e76134d
10:07:14,844 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@e76134d
10:07:14,845 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@e76134d
10:07:14,845 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76bdfc19
10:07:14,846 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76bdfc19
10:07:14,846 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76bdfc19
10:07:14,846 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@25890ce3
10:07:14,847 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@19bbb216
10:07:14,849 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7612f385
10:07:14,849 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7612f385
10:07:14,850 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@548c5127
10:07:14,853 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@13346a64
10:07:14,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13346a64
10:07:14,855 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@45e9db77
10:07:14,856 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45e9db77
10:07:14,856 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@24d097c8
10:07:14,856 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@68dc2f53
10:07:14,857 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@493250cf
10:07:14,859 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@a1e578f
10:07:14,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a1e578f
10:07:14,860 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f245168
10:07:14,861 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@77fecd2c
10:07:14,861 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ee95d42
10:07:14,861 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52b32622
10:07:14,861 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fb1820d
10:07:14,862 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e27b77a
10:07:14,862 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a30f6b1
10:07:14,862 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21f94fe3
10:07:15,142  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:07:15,240  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:07:17,429  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:07:13 PDT 2015]; root of context hierarchy
10:07:17,474  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:07:13 PDT 2015]; root of context hierarchy
10:07:17,611  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:07:13 PDT 2015]; root of context hierarchy
10:07:17,710  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3857 ms
10:10:43,725 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3ce0151b
10:10:43,726  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:10:43,756 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
10:10:43,768 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

10:10:43,768 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:43,793 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
10:10:43,810 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
10:10:43,812 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
10:10:43,814 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@322f84fd
10:10:43,816 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
10:10:43,817 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
10:10:43,818 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
10:10:43,823 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
10:10:43,829 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
10:10:43,830 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
10:10:43,832 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

10:10:43,832 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:43,841 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
10:10:43,841 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
10:10:43,841 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:43,869 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
10:12:06,633 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:12:06,642 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:12:06,669 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:12:06,670 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:12:06,699 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:12:06,701 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:12:06,714 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:12:06,715 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:12:06,734 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:12:06,742 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:12:06,747 DEBUG SQL:92 - insert into student_details (admissionType, previous_degree, user_id) values (?, ?, ?)
10:12:06,748 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:12:06,749 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:12:06,750 DEBUG SQL:92 - insert into student_details (admissionType, previous_degree, user_id) values (?, ?, ?)
10:13:16,181  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:13:16,275  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:13:16 PDT 2015]; root of context hierarchy
10:13:16,312  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:13:16,820  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:13:16,821  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:13:16,965  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:13:17,117  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:13:17,165  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:13:17,204  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:13:17,290  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:13:17,296  INFO Environment:213 - HHH000206: hibernate.properties not found
10:13:17,299  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:13:17,359  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:13:17,443 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2bed5828
10:13:17,443 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2bed5828
10:13:17,444 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2bed5828
10:13:17,446 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@75b4db22
10:13:17,447 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@167bae0b
10:13:17,447 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@294a12b5
10:13:17,449 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6920fa35
10:13:17,449 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6920fa35
10:13:17,449 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6920fa35
10:13:17,451 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@48301bfe
10:13:17,451 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@48301bfe
10:13:17,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@48301bfe
10:13:17,454 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c931728
10:13:17,454 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c931728
10:13:17,454 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c931728
10:13:17,456 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5507584d
10:13:17,457 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5507584d
10:13:17,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5507584d
10:13:17,459 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68fa8ea5
10:13:17,460 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@68fa8ea5
10:13:17,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@68fa8ea5
10:13:17,462 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@183a84f4
10:13:17,462 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@183a84f4
10:13:17,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@183a84f4
10:13:17,464 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3bf52f8f
10:13:17,465 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3bf52f8f
10:13:17,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3bf52f8f
10:13:17,468 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@45f6181a
10:13:17,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@45f6181a
10:13:17,470 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f26cd76
10:13:17,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f26cd76
10:13:17,472 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@322f84fd
10:13:17,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@322f84fd
10:13:17,474 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30a6984c
10:13:17,475 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7841c990
10:13:17,476 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5b827796
10:13:17,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5b827796
10:13:17,481 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@e5f05f8
10:13:17,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e5f05f8
10:13:17,490 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@c19bb2a
10:13:17,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c19bb2a
10:13:17,492 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7ed5cc8c
10:13:17,492 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7ed5cc8c
10:13:17,492 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7ed5cc8c
10:13:17,494 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@374bf34b
10:13:17,495 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@71ac5723
10:13:17,496 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@71ac5723
10:13:17,496 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@71ac5723
10:13:17,497 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5857d723
10:13:17,498 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4fea9f19
10:13:17,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fea9f19
10:13:17,499 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@362fd4e9
10:13:17,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@362fd4e9
10:13:17,500 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d84ab90
10:13:17,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d84ab90
10:13:17,501 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@109188b4
10:13:17,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@109188b4
10:13:17,503 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f09ff10
10:13:17,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f09ff10
10:13:17,504 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3c65f2e1
10:13:17,507 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4a7ac98b
10:13:17,507 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4a7ac98b
10:13:17,507 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4a7ac98b
10:13:17,509 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@469bd719
10:13:17,509 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@469bd719
10:13:17,509 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@469bd719
10:13:17,510 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@127320df
10:13:17,511 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@e76134d
10:13:17,512 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@e76134d
10:13:17,512 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@e76134d
10:13:17,513 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76bdfc19
10:13:17,513 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76bdfc19
10:13:17,513 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76bdfc19
10:13:17,514 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@25890ce3
10:13:17,515 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@19bbb216
10:13:17,518 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7612f385
10:13:17,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7612f385
10:13:17,519 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@548c5127
10:13:17,522 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@13346a64
10:13:17,523 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@13346a64
10:13:17,526 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@45e9db77
10:13:17,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@45e9db77
10:13:17,527 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@24d097c8
10:13:17,528 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@68dc2f53
10:13:17,529 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@493250cf
10:13:17,536 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@a1e578f
10:13:17,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a1e578f
10:13:17,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@f245168
10:13:17,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@77fecd2c
10:13:17,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5ee95d42
10:13:17,537 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@52b32622
10:13:17,538 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7fb1820d
10:13:17,538 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e27b77a
10:13:17,538 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a30f6b1
10:13:17,538 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@21f94fe3
10:13:17,983  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:13:18,023  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:13:19,888  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:13:16 PDT 2015]; root of context hierarchy
10:13:19,951  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:13:16 PDT 2015]; root of context hierarchy
10:13:20,079  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:13:16 PDT 2015]; root of context hierarchy
10:13:20,168  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3984 ms
10:13:37,809 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:13:37,821 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:13:37,833 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:13:37,834 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:13:37,856 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:13:37,857 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:13:37,865 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:13:37,866 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:13:37,882 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:13:37,885 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:13:37,890  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:13:37,890 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:13:37,891  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:19:00,957  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:19:01,051  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:19:01 PDT 2015]; root of context hierarchy
10:19:01,079  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:19:01,540  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:19:01,541  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:19:01,674  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:19:01,766  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:19:01,815  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:19:01,848  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:19:01,926  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:19:01,928  INFO Environment:213 - HHH000206: hibernate.properties not found
10:19:01,929  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:19:01,985  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:19:02,052 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6dd1f239
10:19:02,052 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6dd1f239
10:19:02,052 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6dd1f239
10:19:02,054 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74a991cf
10:19:02,056 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@79f3f34c
10:19:02,056 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@68c47cf9
10:19:02,058 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e4dddee
10:19:02,058 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e4dddee
10:19:02,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e4dddee
10:19:02,059 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4d142b53
10:19:02,060 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4d142b53
10:19:02,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4d142b53
10:19:02,061 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6dcc7696
10:19:02,061 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6dcc7696
10:19:02,061 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6dcc7696
10:19:02,062 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1c966488
10:19:02,062 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1c966488
10:19:02,062 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1c966488
10:19:02,063 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@f26cd76
10:19:02,064 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@f26cd76
10:19:02,064 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@f26cd76
10:19:02,065 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@47e70f54
10:19:02,065 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@47e70f54
10:19:02,065 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@47e70f54
10:19:02,067 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1e75bef1
10:19:02,067 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1e75bef1
10:19:02,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1e75bef1
10:19:02,070 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5c2ae7d7
10:19:02,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5c2ae7d7
10:19:02,071 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@36ce0bc2
10:19:02,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@36ce0bc2
10:19:02,073 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@c19bb2a
10:19:02,073 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@c19bb2a
10:19:02,074 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f6a6d46
10:19:02,076 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@374bf34b
10:19:02,078 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@71ac5723
10:19:02,079 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71ac5723
10:19:02,081 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6ac4f31d
10:19:02,082 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6ac4f31d
10:19:02,083 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@629cf53c
10:19:02,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@629cf53c
10:19:02,086 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7091a016
10:19:02,086 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7091a016
10:19:02,086 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7091a016
10:19:02,089 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@23e297d9
10:19:02,091 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@7f09ff10
10:19:02,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f09ff10
10:19:02,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f09ff10
10:19:02,099 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c65f2e1
10:19:02,100 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4a7ac98b
10:19:02,100 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4a7ac98b
10:19:02,102 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@18d14de3
10:19:02,102 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@18d14de3
10:19:02,103 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@579ee82
10:19:02,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@579ee82
10:19:02,104 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@26c1244c
10:19:02,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26c1244c
10:19:02,106 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c28009f
10:19:02,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c28009f
10:19:02,107 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@25890ce3
10:19:02,108 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@19bbb216
10:19:02,109 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@19bbb216
10:19:02,109 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@19bbb216
10:19:02,110 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b0d480c
10:19:02,110 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b0d480c
10:19:02,111 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b0d480c
10:19:02,111 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2eb03908
10:19:02,112 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2bbaf983
10:19:02,113 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2bbaf983
10:19:02,113 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2bbaf983
10:19:02,114 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8d23cd8
10:19:02,114 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8d23cd8
10:19:02,115 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8d23cd8
10:19:02,115 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7524125c
10:19:02,116 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@35630ee8
10:19:02,122 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7a22302c
10:19:02,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a22302c
10:19:02,123 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@23eb6d13
10:19:02,127 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@15a6a91f
10:19:02,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15a6a91f
10:19:02,131 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@52b32622
10:19:02,132 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@52b32622
10:19:02,133 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6a30f6b1
10:19:02,133 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1174e173
10:19:02,135 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@37dc7661
10:19:02,138 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@68722de3
10:19:02,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68722de3
10:19:02,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1db5de29
10:19:02,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64d1f549
10:19:02,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1fb61db4
10:19:02,141 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d4e06bb
10:19:02,141 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2eb9c7ad
10:19:02,141 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4529048e
10:19:02,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6addfa22
10:19:02,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74b521c
10:19:02,608  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:19:02,647  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:19:04,360  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:19:01 PDT 2015]; root of context hierarchy
10:19:04,406  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:19:01 PDT 2015]; root of context hierarchy
10:19:04,523  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:19:01 PDT 2015]; root of context hierarchy
10:19:04,618  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3657 ms
10:19:37,863 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:19:37,881 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:19:37,910 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:19:37,911 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:19:37,947 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:19:37,949 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:19:37,961 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:19:37,962 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:19:37,990 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:19:37,997 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:19:38,000  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:19:38,001 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:19:38,003  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:29:21,551  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:29:21,634  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:29:21 PDT 2015]; root of context hierarchy
10:29:21,669  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:29:22,111  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:29:22,113  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:29:22,226  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:29:22,316  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:29:22,362  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:29:22,392  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:29:22,476  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:29:22,479  INFO Environment:213 - HHH000206: hibernate.properties not found
10:29:22,480  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:29:22,541  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:29:22,622 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@19542115
10:29:22,622 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@19542115
10:29:22,623 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@19542115
10:29:22,625 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54ddd7e4
10:29:22,626 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5507584d
10:29:22,627 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@79982bcc
10:29:22,628 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e764e5c
10:29:22,628 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e764e5c
10:29:22,628 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e764e5c
10:29:22,629 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7e4dddee
10:29:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7e4dddee
10:29:22,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e4dddee
10:29:22,631 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@128ca7af
10:29:22,631 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@128ca7af
10:29:22,631 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@128ca7af
10:29:22,632 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6dcc7696
10:29:22,633 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6dcc7696
10:29:22,633 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6dcc7696
10:29:22,634 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19d0d1ab
10:29:22,634 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19d0d1ab
10:29:22,635 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19d0d1ab
10:29:22,636 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@48ba37dc
10:29:22,637 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@48ba37dc
10:29:22,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@48ba37dc
10:29:22,638 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@45302e66
10:29:22,639 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@45302e66
10:29:22,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@45302e66
10:29:22,642 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27c827ec
10:29:22,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27c827ec
10:29:22,644 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6e7cb01a
10:29:22,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6e7cb01a
10:29:22,645 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@36ce0bc2
10:29:22,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@36ce0bc2
10:29:22,647 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c19bb2a
10:29:22,648 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7f6a6d46
10:29:22,649 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@374bf34b
10:29:22,650 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@374bf34b
10:29:22,652 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@294a3f2a
10:29:22,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@294a3f2a
10:29:22,655 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@b666366
10:29:22,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b666366
10:29:22,657 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3182143c
10:29:22,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3182143c
10:29:22,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3182143c
10:29:22,660 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3113595e
10:29:22,662 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@23e297d9
10:29:22,663 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23e297d9
10:29:22,663 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23e297d9
10:29:22,664 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@66576bd2
10:29:22,665 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3c65f2e1
10:29:22,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c65f2e1
10:29:22,667 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4a7ac98b
10:29:22,668 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a7ac98b
10:29:22,669 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@18d14de3
10:29:22,669 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@18d14de3
10:29:22,670 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@579ee82
10:29:22,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@579ee82
10:29:22,672 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54f4734e
10:29:22,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54f4734e
10:29:22,673 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76bdfc19
10:29:22,675 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@25890ce3
10:29:22,675 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@25890ce3
10:29:22,676 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@25890ce3
10:29:22,677 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6cfac0bd
10:29:22,677 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6cfac0bd
10:29:22,678 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6cfac0bd
10:29:22,679 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5b0d480c
10:29:22,680 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2eb03908
10:29:22,681 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2eb03908
10:29:22,681 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2eb03908
10:29:22,682 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@781bd9dd
10:29:22,683 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@781bd9dd
10:29:22,683 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@781bd9dd
10:29:22,684 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@8d23cd8
10:29:22,685 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7524125c
10:29:22,689 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@51d9479c
10:29:22,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51d9479c
10:29:22,690 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1802f60c
10:29:22,693 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5bfdc92b
10:29:22,694 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5bfdc92b
10:29:22,697 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@707b38a1
10:29:22,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@707b38a1
10:29:22,698 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@77fecd2c
10:29:22,699 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7fb1820d
10:29:22,700 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1174e173
10:29:22,702 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@758655a9
10:29:22,703 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@758655a9
10:29:22,703 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5243d730
10:29:22,704 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@15afebcc
10:29:22,704 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@68722de3
10:29:22,705 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b18009f
10:29:22,705 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@77aeba9b
10:29:22,705 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1db5de29
10:29:22,705 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64d1f549
10:29:22,706 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1fb61db4
10:29:23,178  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:29:23,214  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:29:25,978  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:29:21 PDT 2015]; root of context hierarchy
10:29:26,030  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:29:21 PDT 2015]; root of context hierarchy
10:29:26,161  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:29:21 PDT 2015]; root of context hierarchy
10:29:26,254  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4700 ms
10:29:29,553 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:29:29,569 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:29:29,586 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:29:29,587 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:29:29,615 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:29:29,616 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:29:29,627 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:29:29,628 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:29:29,658 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:29:29,663 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:29:29,667  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:29:29,667 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:29:29,668  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:30:19,903  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:30:19,993  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:30:19 PDT 2015]; root of context hierarchy
10:30:20,026  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:30:20,461  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:30:20,462  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:30:20,561  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:30:20,644  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:30:20,694  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:30:20,728  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:30:20,824  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:30:20,828  INFO Environment:213 - HHH000206: hibernate.properties not found
10:30:20,830  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:30:20,888  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:30:20,969 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@76a14c8d
10:30:20,969 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@76a14c8d
10:30:20,970 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76a14c8d
10:30:20,972 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@59bbb974
10:30:20,974 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@21da4b5f
10:30:20,975 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5d1e0fbb
10:30:20,976 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@15c487a8
10:30:20,977 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@15c487a8
10:30:20,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@15c487a8
10:30:20,978 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@40f35e52
10:30:20,979 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@40f35e52
10:30:20,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@40f35e52
10:30:20,981 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@64920dc2
10:30:20,981 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@64920dc2
10:30:20,981 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64920dc2
10:30:20,982 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2b38b1f
10:30:20,983 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2b38b1f
10:30:20,983 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b38b1f
10:30:20,984 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c8a7e38
10:30:20,984 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c8a7e38
10:30:20,984 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c8a7e38
10:30:20,985 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3d90eeb3
10:30:20,985 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3d90eeb3
10:30:20,986 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3d90eeb3
10:30:20,987 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
10:30:20,987 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5afbd567
10:30:20,987 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5afbd567
10:30:20,989 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@608b1fd2
10:30:20,990 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@608b1fd2
10:30:20,991 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77bc2e16
10:30:20,991 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77bc2e16
10:30:20,993 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4fe533ff
10:30:20,993 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fe533ff
10:30:20,994 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@18a25bbd
10:30:20,995 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5583098b
10:30:20,996 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@56f730b2
10:30:20,996 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@56f730b2
10:30:20,998 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2489e84a
10:30:20,999 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2489e84a
10:30:21,001 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5731d3a
10:30:21,001 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5731d3a
10:30:21,003 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d4e13e1
10:30:21,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d4e13e1
10:30:21,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d4e13e1
10:30:21,005 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2676dc05
10:30:21,007 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@dd2856e
10:30:21,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@dd2856e
10:30:21,007 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@dd2856e
10:30:21,008 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@793d163b
10:30:21,010 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3b7eac14
10:30:21,010 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3b7eac14
10:30:21,011 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@e38f0b7
10:30:21,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@e38f0b7
10:30:21,014 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@12ad1b2a
10:30:21,014 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12ad1b2a
10:30:21,015 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@345cbf40
10:30:21,015 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@345cbf40
10:30:21,016 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58d6e55a
10:30:21,017 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58d6e55a
10:30:21,017 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4232b34a
10:30:21,018 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@360e9c06
10:30:21,018 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@360e9c06
10:30:21,018 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@360e9c06
10:30:21,020 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5edacf20
10:30:21,020 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5edacf20
10:30:21,021 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5edacf20
10:30:21,022 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@234cff57
10:30:21,023 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f362135
10:30:21,024 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f362135
10:30:21,024 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f362135
10:30:21,025 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53c1179a
10:30:21,026 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53c1179a
10:30:21,026 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53c1179a
10:30:21,027 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1a47a1e8
10:30:21,028 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@18539cb1
10:30:21,031 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4baed682
10:30:21,031 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4baed682
10:30:21,032 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2c2a027c
10:30:21,038 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2ecf5915
10:30:21,038 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ecf5915
10:30:21,042 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@39c96e48
10:30:21,042 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39c96e48
10:30:21,043 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf78c85
10:30:21,044 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6badba10
10:30:21,045 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@63cf9de0
10:30:21,048 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@365cdacf
10:30:21,048 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@365cdacf
10:30:21,049 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7eb200ce
10:30:21,049 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ee83775
10:30:21,049 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c2924d7
10:30:21,050 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b5de58f
10:30:21,050 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6587305a
10:30:21,050 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@abbe000
10:30:21,050 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f81621c
10:30:21,051 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b9499fe
10:30:21,478  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:30:21,516  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:30:23,358  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:30:19 PDT 2015]; root of context hierarchy
10:30:23,407  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:30:19 PDT 2015]; root of context hierarchy
10:30:23,531  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:30:19 PDT 2015]; root of context hierarchy
10:30:23,640  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3735 ms
10:31:05,081 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:31:05,095 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:31:05,117 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:31:05,119 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:31:05,154 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:31:05,155 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:31:05,165 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:31:05,165 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:31:05,191 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:31:05,197 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:31:05,207  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:31:05,207 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:31:05,208  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:32:07,136  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:32:07,230  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:32:07 PDT 2015]; root of context hierarchy
10:32:07,273  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:32:07,817  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:32:07,818  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:32:07,931  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:32:08,025  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:32:08,086  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:32:08,121  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:32:08,225  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:32:08,229  INFO Environment:213 - HHH000206: hibernate.properties not found
10:32:08,230  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:32:08,289  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:32:08,377 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1537e43
10:32:08,378 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1537e43
10:32:08,378 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1537e43
10:32:08,380 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6e685e6c
10:32:08,382 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@77896335
10:32:08,382 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b79c8ff
10:32:08,384 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@283ab206
10:32:08,385 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@283ab206
10:32:08,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@283ab206
10:32:08,386 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@21002393
10:32:08,386 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@21002393
10:32:08,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21002393
10:32:08,388 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7db5b890
10:32:08,388 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7db5b890
10:32:08,388 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7db5b890
10:32:08,389 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@9e30f9a
10:32:08,390 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@9e30f9a
10:32:08,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9e30f9a
10:32:08,392 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ed0b4e3
10:32:08,392 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ed0b4e3
10:32:08,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ed0b4e3
10:32:08,394 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19002b34
10:32:08,394 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19002b34
10:32:08,394 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19002b34
10:32:08,396 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4c176ff1
10:32:08,396 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4c176ff1
10:32:08,396 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4c176ff1
10:32:08,399 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@69d103f0
10:32:08,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@69d103f0
10:32:08,400 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@66451058
10:32:08,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@66451058
10:32:08,402 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6bce4140
10:32:08,402 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6bce4140
10:32:08,403 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@18cf5c52
10:32:08,405 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f96dd64
10:32:08,406 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@63917fe1
10:32:08,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63917fe1
10:32:08,409 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@49b89425
10:32:08,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@49b89425
10:32:08,412 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@18c880ea
10:32:08,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@18c880ea
10:32:08,414 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@716f94c1
10:32:08,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@716f94c1
10:32:08,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@716f94c1
10:32:08,418 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d99ee1b
10:32:08,419 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@8f2e3e6
10:32:08,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@8f2e3e6
10:32:08,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@8f2e3e6
10:32:08,421 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5e9bf744
10:32:08,422 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@2b441e56
10:32:08,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2b441e56
10:32:08,424 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f213a2
10:32:08,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f213a2
10:32:08,426 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@28daf506
10:32:08,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@28daf506
10:32:08,428 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@21d9cd04
10:32:08,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21d9cd04
10:32:08,431 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@55c1ced9
10:32:08,431 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@55c1ced9
10:32:08,432 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@37b01ce2
10:32:08,434 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@70b33256
10:32:08,434 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@70b33256
10:32:08,434 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@70b33256
10:32:08,437 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4f5c30b1
10:32:08,437 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4f5c30b1
10:32:08,438 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4f5c30b1
10:32:08,439 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@38087342
10:32:08,441 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7ab63838
10:32:08,441 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7ab63838
10:32:08,441 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7ab63838
10:32:08,443 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2a5abd3c
10:32:08,443 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2a5abd3c
10:32:08,443 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2a5abd3c
10:32:08,445 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5c82031b
10:32:08,447 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2ad7bd26
10:32:08,452 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@402b4f81
10:32:08,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@402b4f81
10:32:08,453 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e8598d9
10:32:08,457 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3e38c472
10:32:08,458 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e38c472
10:32:08,461 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@72b2c5ed
10:32:08,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@72b2c5ed
10:32:08,463 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1600a8a2
10:32:08,463 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7b95bdb0
10:32:08,465 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@350ff014
10:32:08,468 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@35c8be21
10:32:08,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@35c8be21
10:32:08,469 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@615b5480
10:32:08,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24691c5
10:32:08,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b91d9f
10:32:08,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6537ac
10:32:08,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b218c74
10:32:08,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ddffa6c
10:32:08,471 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@42c54bad
10:32:08,471 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bb4cc0e
10:32:08,846  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:32:08,895  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:32:11,122  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:32:07 PDT 2015]; root of context hierarchy
10:32:11,177  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:32:07 PDT 2015]; root of context hierarchy
10:32:11,348  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:32:07 PDT 2015]; root of context hierarchy
10:32:11,493  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4354 ms
10:32:18,434 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:32:18,450 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:32:18,473 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:32:18,474 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:32:18,512 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:32:18,513 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:32:18,523 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:32:18,524 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:32:18,565 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:32:18,574 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:32:18,587  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:32:18,588 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:32:18,591  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:33:37,928  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:33:38,038  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:33:38 PDT 2015]; root of context hierarchy
10:33:38,071  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:33:38,647  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:33:38,650  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:33:38,779  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:33:38,889  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:33:38,945  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:33:38,977  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:33:39,091  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:33:39,096  INFO Environment:213 - HHH000206: hibernate.properties not found
10:33:39,099  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:33:39,166  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:33:39,253 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@573aeab2
10:33:39,253 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@573aeab2
10:33:39,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@573aeab2
10:33:39,255 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b0902b4
10:33:39,257 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1b89ac
10:33:39,258 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2baf72d5
10:33:39,260 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@35fa450f
10:33:39,261 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@35fa450f
10:33:39,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35fa450f
10:33:39,262 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@718989fa
10:33:39,263 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@718989fa
10:33:39,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@718989fa
10:33:39,265 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@407b8435
10:33:39,265 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@407b8435
10:33:39,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@407b8435
10:33:39,267 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1b30a54e
10:33:39,268 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1b30a54e
10:33:39,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b30a54e
10:33:39,271 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@79ab97fd
10:33:39,271 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@79ab97fd
10:33:39,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@79ab97fd
10:33:39,274 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ec88aa1
10:33:39,274 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ec88aa1
10:33:39,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ec88aa1
10:33:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@27c53c32
10:33:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@27c53c32
10:33:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27c53c32
10:33:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b742bc8
10:33:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b742bc8
10:33:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3db6dd52
10:33:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3db6dd52
10:33:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@25f0c5e7
10:33:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@25f0c5e7
10:33:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10618775
10:33:39,286 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d7cac24
10:33:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@720f56e2
10:33:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@720f56e2
10:33:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59328218
10:33:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59328218
10:33:39,294 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5ac044ef
10:33:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ac044ef
10:33:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@53feeac9
10:33:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53feeac9
10:33:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53feeac9
10:33:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3915e7c3
10:33:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f315b08
10:33:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f315b08
10:33:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f315b08
10:33:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45e140ae
10:33:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@267891bf
10:33:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@267891bf
10:33:39,305 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@25699aa7
10:33:39,306 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@25699aa7
10:33:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4662752a
10:33:39,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4662752a
10:33:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@799f354a
10:33:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@799f354a
10:33:39,311 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49cc9b2a
10:33:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49cc9b2a
10:33:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a88c4f5
10:33:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@33d230ce
10:33:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@33d230ce
10:33:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@33d230ce
10:33:39,317 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62e73ab6
10:33:39,317 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62e73ab6
10:33:39,317 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62e73ab6
10:33:39,318 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@681de87f
10:33:39,320 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4e974b9e
10:33:39,320 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4e974b9e
10:33:39,321 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4e974b9e
10:33:39,322 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@250967f1
10:33:39,323 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@250967f1
10:33:39,323 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@250967f1
10:33:39,324 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@274fdea6
10:33:39,325 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3cc3f13e
10:33:39,330 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@13ef7fa1
10:33:39,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13ef7fa1
10:33:39,331 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@267ff4df
10:33:39,335 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2ee92e7d
10:33:39,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ee92e7d
10:33:39,340 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@41f785e3
10:33:39,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41f785e3
10:33:39,341 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b25ef1c
10:33:39,342 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f0ce0d1
10:33:39,343 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@401317a0
10:33:39,346 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@60807fd9
10:33:39,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60807fd9
10:33:39,348 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@24691c5
10:33:39,348 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b91d9f
10:33:39,348 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6537ac
10:33:39,348 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b218c74
10:33:39,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ddffa6c
10:33:39,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42c54bad
10:33:39,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bb4cc0e
10:33:39,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cc1bf20
10:33:39,722  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:33:39,780  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:33:42,051  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:33:38 PDT 2015]; root of context hierarchy
10:33:42,103  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:33:38 PDT 2015]; root of context hierarchy
10:33:42,276  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:33:38 PDT 2015]; root of context hierarchy
10:33:42,433  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4499 ms
10:33:48,030 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:33:48,048 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:33:48,066 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:33:48,067 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:33:48,099 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:33:48,100 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:33:48,117 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:33:48,118 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:33:48,152 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:33:48,163 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:33:48,176  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:33:48,177 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:33:48,180  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:38:22,247  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:38:22,358  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:38:22 PDT 2015]; root of context hierarchy
10:38:22,398  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:38:22,888  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:38:22,889  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:38:23,036  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:38:23,154  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:38:23,210  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:38:23,243  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:38:23,370  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:38:23,374  INFO Environment:213 - HHH000206: hibernate.properties not found
10:38:23,375  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:38:23,444  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:38:23,538 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fd1179
10:38:23,538 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fd1179
10:38:23,538 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fd1179
10:38:23,541 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6c289070
10:38:23,542 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@456beb8b
10:38:23,544 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@19370af1
10:38:23,551 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@20e4e27f
10:38:23,552 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@20e4e27f
10:38:23,552 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20e4e27f
10:38:23,553 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@538fb761
10:38:23,554 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@538fb761
10:38:23,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@538fb761
10:38:23,556 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5f92e5eb
10:38:23,556 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5f92e5eb
10:38:23,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5f92e5eb
10:38:23,558 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@31f96cf
10:38:23,558 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@31f96cf
10:38:23,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@31f96cf
10:38:23,561 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c7e6c0
10:38:23,561 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c7e6c0
10:38:23,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46c7e6c0
10:38:23,563 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@50e32998
10:38:23,563 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@50e32998
10:38:23,563 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50e32998
10:38:23,565 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3da8a302
10:38:23,566 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3da8a302
10:38:23,566 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3da8a302
10:38:23,569 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@18f1260
10:38:23,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@18f1260
10:38:23,571 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7441edeb
10:38:23,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7441edeb
10:38:23,574 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@11efa76e
10:38:23,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@11efa76e
10:38:23,575 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37d50217
10:38:23,577 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33602729
10:38:23,580 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@47a72c32
10:38:23,580 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@47a72c32
10:38:23,584 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6f404bc6
10:38:23,584 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6f404bc6
10:38:23,587 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@9886ec3
10:38:23,587 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9886ec3
10:38:23,589 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4407f129
10:38:23,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4407f129
10:38:23,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4407f129
10:38:23,593 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a4a95c4
10:38:23,595 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@29ec5005
10:38:23,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29ec5005
10:38:23,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29ec5005
10:38:23,596 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5276330a
10:38:23,598 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@33f059ad
10:38:23,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@33f059ad
10:38:23,599 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@445d4517
10:38:23,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@445d4517
10:38:23,601 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@50ba19df
10:38:23,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@50ba19df
10:38:23,603 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@39adf4e6
10:38:23,603 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@39adf4e6
10:38:23,606 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5ab7e997
10:38:23,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5ab7e997
10:38:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f45be42
10:38:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@65374526
10:38:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@65374526
10:38:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@65374526
10:38:23,611 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6138ee0e
10:38:23,611 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6138ee0e
10:38:23,611 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6138ee0e
10:38:23,612 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@33490054
10:38:23,613 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@27f43664
10:38:23,614 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@27f43664
10:38:23,614 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@27f43664
10:38:23,615 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@308f18c0
10:38:23,616 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@308f18c0
10:38:23,616 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@308f18c0
10:38:23,617 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@66ca8882
10:38:23,618 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@76ac8c3d
10:38:23,622 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@da2303c
10:38:23,623 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@da2303c
10:38:23,624 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44233014
10:38:23,628 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@739500b8
10:38:23,628 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@739500b8
10:38:23,632 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2fad50f2
10:38:23,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2fad50f2
10:38:23,633 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@730611a0
10:38:23,634 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a02fca5
10:38:23,635 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@315bb2bb
10:38:23,638 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@650e6569
10:38:23,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@650e6569
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6c4a1980
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2125086c
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@65c634f2
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@57f9f387
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6b4376e1
10:38:23,640 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@622c658d
10:38:23,641 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3619bc9e
10:38:23,641 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e640411
10:38:24,007  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:38:24,058  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:38:26,252  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:38:22 PDT 2015]; root of context hierarchy
10:38:26,305  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:38:22 PDT 2015]; root of context hierarchy
10:38:26,510  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:38:22 PDT 2015]; root of context hierarchy
10:38:26,670  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4420 ms
10:39:18,421  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:39:18,527  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 10:39:18 PDT 2015]; root of context hierarchy
10:39:18,563  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:39:19,137  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:39:19,138  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:39:19,273  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:39:19,396  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:39:19,463  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:39:19,497  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:39:19,611  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:39:19,616  INFO Environment:213 - HHH000206: hibernate.properties not found
10:39:19,618  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:39:19,696  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:39:19,790 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74214ac3
10:39:19,790 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74214ac3
10:39:19,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74214ac3
10:39:19,794 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@71d0ad00
10:39:19,796 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@139da216
10:39:19,797 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ef8f7e6
10:39:19,801 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12faeada
10:39:19,801 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12faeada
10:39:19,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12faeada
10:39:19,804 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3dceec83
10:39:19,804 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3dceec83
10:39:19,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3dceec83
10:39:19,806 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@25f67aea
10:39:19,806 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@25f67aea
10:39:19,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@25f67aea
10:39:19,808 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6a25c9ad
10:39:19,808 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6a25c9ad
10:39:19,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6a25c9ad
10:39:19,810 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@18918ab9
10:39:19,811 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@18918ab9
10:39:19,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18918ab9
10:39:19,813 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@39d44217
10:39:19,813 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@39d44217
10:39:19,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39d44217
10:39:19,815 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@665574fb
10:39:19,816 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@665574fb
10:39:19,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@665574fb
10:39:19,819 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@77cd1f67
10:39:19,819 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@77cd1f67
10:39:19,821 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@307eb95f
10:39:19,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@307eb95f
10:39:19,822 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5246453e
10:39:19,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5246453e
10:39:19,824 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@125ed27
10:39:19,825 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@59da4992
10:39:19,830 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@33ccab9c
10:39:19,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@33ccab9c
10:39:19,834 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@67544105
10:39:19,835 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@67544105
10:39:19,837 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@45ea6c24
10:39:19,838 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45ea6c24
10:39:19,839 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@38447073
10:39:19,840 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@38447073
10:39:19,840 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@38447073
10:39:19,843 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ad5f99
10:39:19,845 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6edc8385
10:39:19,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6edc8385
10:39:19,846 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6edc8385
10:39:19,847 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@279e4506
10:39:19,849 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@23b02f37
10:39:19,849 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23b02f37
10:39:19,850 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@ea3491d
10:39:19,850 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ea3491d
10:39:19,852 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e2c8622
10:39:19,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e2c8622
10:39:19,854 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@13cec4ff
10:39:19,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@13cec4ff
10:39:19,857 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@517fb2c3
10:39:19,857 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@517fb2c3
10:39:19,858 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e214d39
10:39:19,860 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@191cf38f
10:39:19,861 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@191cf38f
10:39:19,861 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@191cf38f
10:39:19,863 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16a89351
10:39:19,863 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16a89351
10:39:19,863 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16a89351
10:39:19,865 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@20e4e27f
10:39:19,866 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@538fb761
10:39:19,866 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@538fb761
10:39:19,867 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@538fb761
10:39:19,868 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@215efb16
10:39:19,868 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@215efb16
10:39:19,869 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@215efb16
10:39:19,870 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@502dc93a
10:39:19,871 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@68fec965
10:39:19,878 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3fe7c87c
10:39:19,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3fe7c87c
10:39:19,879 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5e2525fe
10:39:19,884 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@581cb879
10:39:19,884 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@581cb879
10:39:19,888 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@9886ec3
10:39:19,888 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9886ec3
10:39:19,889 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b2317b7
10:39:19,889 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@541c76fd
10:39:19,891 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@71ae1cb
10:39:19,895 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6c7bc8ac
10:39:19,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6c7bc8ac
10:39:19,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e7fc012
10:39:19,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63e0c744
10:39:19,897 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@445d4517
10:39:19,897 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3284f91f
10:39:19,897 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@125bc00d
10:39:19,897 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77e4ffe5
10:39:19,898 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@59bf79f3
10:39:19,898 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4c663fda
10:39:20,313  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:39:20,362  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:39:22,469  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:39:18 PDT 2015]; root of context hierarchy
10:39:22,517  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:39:18 PDT 2015]; root of context hierarchy
10:39:22,675  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 10:39:18 PDT 2015]; root of context hierarchy
10:39:22,823  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4399 ms
10:40:55,369 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:40:55,387 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:40:55,408 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:40:55,409 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:40:55,443 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:40:55,445 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:40:55,456 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:40:55,457 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:40:55,490 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:40:55,497 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:40:55,508  WARN SqlExceptionHelper:127 - SQL Error: 1062, SQLState: 23000
10:40:55,509 ERROR SqlExceptionHelper:129 - Duplicate entry '5559875' for key 'UK_fnfxlrkjcuv9benmtevvmip21'
10:40:55,512  INFO AbstractBatchImpl:193 - HHH000010: On release of batch it still contained JDBC statements
10:44:04,459 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:44:04,463 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:44:04,491 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:44:04,493 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:44:04,510 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:44:04,512 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:44:04,524 DEBUG SQL:92 - select next_val as id_val from sequence for update
10:44:04,525 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
10:44:04,530 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:44:04,531 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:44:04,532 DEBUG SQL:92 - insert into student_details (admissionType, previous_degree, user_id) values (?, ?, ?)
10:44:04,536 DEBUG SQL:92 - insert into address (apt_no, city, state, street_name, zip_code, address_id) values (?, ?, ?, ?, ?, ?)
10:44:04,540 DEBUG SQL:92 - insert into users (address_id, college_id, date_of_birth, email_id, first_name, password, last_name, middle_name, phone_number, user_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
10:44:04,543 DEBUG SQL:92 - insert into student_details (admissionType, previous_degree, user_id) values (?, ?, ?)
11:02:39,898 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:03:06,850 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:03:44,103 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:09:01,414  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
11:09:01,483  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 11:09:01 PDT 2015]; root of context hierarchy
11:09:01,512  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
11:09:01,987  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
11:09:01,988  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
11:09:02,094  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:09:02,330  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
11:09:02,375  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
11:09:02,399  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
11:09:02,463  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:09:02,466  INFO Environment:213 - HHH000206: hibernate.properties not found
11:09:02,467  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:09:02,516  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:09:02,580 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@531b1778
11:09:02,580 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@531b1778
11:09:02,580 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@531b1778
11:09:02,583 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13bf5fd
11:09:02,584 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1dc2c13c
11:09:02,585 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6c3884f5
11:09:02,586 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54f4734e
11:09:02,586 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54f4734e
11:09:02,586 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54f4734e
11:09:02,588 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5c28009f
11:09:02,588 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5c28009f
11:09:02,588 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5c28009f
11:09:02,589 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6e149395
11:09:02,590 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6e149395
11:09:02,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6e149395
11:09:02,591 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5ab06829
11:09:02,591 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5ab06829
11:09:02,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ab06829
11:09:02,592 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2eb03908
11:09:02,592 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2eb03908
11:09:02,592 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2eb03908
11:09:02,594 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@138d978e
11:09:02,594 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@138d978e
11:09:02,594 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@138d978e
11:09:02,595 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7524125c
11:09:02,595 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7524125c
11:09:02,596 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7524125c
11:09:02,598 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@642d971f
11:09:02,599 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@642d971f
11:09:02,601 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@65b1693c
11:09:02,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@65b1693c
11:09:02,603 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@1f3dafd4
11:09:02,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@1f3dafd4
11:09:02,606 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3e0b1f03
11:09:02,608 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1802f60c
11:09:02,610 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@23eb6d13
11:09:02,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@23eb6d13
11:09:02,612 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4f629aa4
11:09:02,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f629aa4
11:09:02,614 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6c930e7e
11:09:02,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6c930e7e
11:09:02,616 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@29088be1
11:09:02,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@29088be1
11:09:02,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@29088be1
11:09:02,618 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@493250cf
11:09:02,623 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6eae3730
11:09:02,624 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6eae3730
11:09:02,624 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6eae3730
11:09:02,625 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@65f36591
11:09:02,626 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4281a26f
11:09:02,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4281a26f
11:09:02,627 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@f245168
11:09:02,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f245168
11:09:02,628 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7e27b77a
11:09:02,628 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7e27b77a
11:09:02,629 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@7c1c0892
11:09:02,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7c1c0892
11:09:02,631 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2053b761
11:09:02,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2053b761
11:09:02,632 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38b7004d
11:09:02,634 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5243d730
11:09:02,634 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5243d730
11:09:02,634 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5243d730
11:09:02,636 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@64d1f549
11:09:02,636 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@64d1f549
11:09:02,636 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@64d1f549
11:09:02,637 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6addfa22
11:09:02,638 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3220833f
11:09:02,639 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3220833f
11:09:02,639 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3220833f
11:09:02,640 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@10df1f34
11:09:02,640 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@10df1f34
11:09:02,641 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@10df1f34
11:09:02,641 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@11fb1691
11:09:02,642 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@41dc34c8
11:09:02,645 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@590336ed
11:09:02,645 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@590336ed
11:09:02,646 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@99af41d
11:09:02,648 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1239c268
11:09:02,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1239c268
11:09:02,651 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@64de9fa4
11:09:02,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64de9fa4
11:09:02,651 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fc84c92
11:09:02,652 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5274acd1
11:09:02,653 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@9863ed5
11:09:02,655 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5ace6611
11:09:02,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ace6611
11:09:02,656 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@8a7cd7c
11:09:02,656 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@21f0cc97
11:09:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1f6d3a81
11:09:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@641c8ba4
11:09:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@52667676
11:09:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75559cd9
11:09:02,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39a09c0
11:09:02,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3dbf3bc
11:09:02,958  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
11:09:02,991  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
11:09:04,994  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:09:01 PDT 2015]; root of context hierarchy
11:09:05,044  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:09:01 PDT 2015]; root of context hierarchy
11:09:05,214  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:09:01 PDT 2015]; root of context hierarchy
11:09:05,346  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3929 ms
11:10:15,314 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:10:15,355 ERROR GenericExceptionMapper:21 - 
org.courseregistration.exception.ApplicationException
	at org.courseregistration.exception.ApplicationException$ApplicationExceptionBuilder.build(ApplicationException.java:109)
	at org.courseregistration.service.CourseService.findById(CourseService.java:63)
	at org.courseregistration.controller.CourseController.findCourseById(CourseController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
11:10:54,691 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@34b371ff
11:10:54,692  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:10:54,742 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
11:10:54,757 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

11:10:54,757 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:10:54,782 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
11:10:54,804 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
11:10:54,805 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
11:10:54,807 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@1f3dafd4
11:10:54,808 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
11:10:54,808 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
11:10:54,808 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
11:10:54,813 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
11:10:54,822 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
11:10:54,822 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
11:10:54,828 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

11:10:54,828 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:10:54,843 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
11:10:54,843 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
11:10:54,843 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:10:54,864 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
11:11:00,069 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:11:00,076 ERROR GenericExceptionMapper:21 - 
org.courseregistration.exception.ApplicationException
	at org.courseregistration.exception.ApplicationException$ApplicationExceptionBuilder.build(ApplicationException.java:109)
	at org.courseregistration.service.CourseService.findById(CourseService.java:63)
	at org.courseregistration.controller.CourseController.findCourseById(CourseController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
11:11:44,030  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
11:11:44,135  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 11:11:44 PDT 2015]; root of context hierarchy
11:11:44,191  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
11:11:44,758  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
11:11:44,760  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
11:11:44,899  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:11:45,015  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
11:11:45,082  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
11:11:45,124  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
11:11:45,291  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:11:45,296  INFO Environment:213 - HHH000206: hibernate.properties not found
11:11:45,299  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:11:45,413  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:11:45,503 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@573aeab2
11:11:45,503 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@573aeab2
11:11:45,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@573aeab2
11:11:45,506 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b0902b4
11:11:45,507 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c1b89ac
11:11:45,508 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2baf72d5
11:11:45,511 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@35fa450f
11:11:45,512 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@35fa450f
11:11:45,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35fa450f
11:11:45,514 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@718989fa
11:11:45,514 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@718989fa
11:11:45,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@718989fa
11:11:45,516 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@407b8435
11:11:45,516 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@407b8435
11:11:45,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@407b8435
11:11:45,518 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1b30a54e
11:11:45,519 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1b30a54e
11:11:45,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b30a54e
11:11:45,521 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@79ab97fd
11:11:45,521 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@79ab97fd
11:11:45,522 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@79ab97fd
11:11:45,524 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ec88aa1
11:11:45,524 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1ec88aa1
11:11:45,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1ec88aa1
11:11:45,526 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@27c53c32
11:11:45,526 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@27c53c32
11:11:45,526 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27c53c32
11:11:45,529 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b742bc8
11:11:45,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b742bc8
11:11:45,530 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3db6dd52
11:11:45,531 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3db6dd52
11:11:45,532 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@25f0c5e7
11:11:45,532 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@25f0c5e7
11:11:45,533 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10618775
11:11:45,534 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4d7cac24
11:11:45,535 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@720f56e2
11:11:45,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@720f56e2
11:11:45,538 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59328218
11:11:45,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59328218
11:11:45,541 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5ac044ef
11:11:45,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5ac044ef
11:11:45,543 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@53feeac9
11:11:45,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53feeac9
11:11:45,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53feeac9
11:11:45,547 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3915e7c3
11:11:45,548 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6f315b08
11:11:45,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f315b08
11:11:45,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f315b08
11:11:45,550 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@45e140ae
11:11:45,551 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@267891bf
11:11:45,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@267891bf
11:11:45,552 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@25699aa7
11:11:45,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@25699aa7
11:11:45,555 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4662752a
11:11:45,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4662752a
11:11:45,557 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@799f354a
11:11:45,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@799f354a
11:11:45,560 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49cc9b2a
11:11:45,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49cc9b2a
11:11:45,562 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a88c4f5
11:11:45,564 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@33d230ce
11:11:45,565 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@33d230ce
11:11:45,566 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@33d230ce
11:11:45,568 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62e73ab6
11:11:45,568 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62e73ab6
11:11:45,568 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62e73ab6
11:11:45,569 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@681de87f
11:11:45,571 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4e974b9e
11:11:45,572 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4e974b9e
11:11:45,572 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4e974b9e
11:11:45,574 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@250967f1
11:11:45,574 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@250967f1
11:11:45,575 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@250967f1
11:11:45,576 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@274fdea6
11:11:45,577 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3cc3f13e
11:11:45,584 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@13ef7fa1
11:11:45,584 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@13ef7fa1
11:11:45,585 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@267ff4df
11:11:45,590 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2ee92e7d
11:11:45,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ee92e7d
11:11:45,593 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@41f785e3
11:11:45,594 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41f785e3
11:11:45,595 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b25ef1c
11:11:45,596 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f0ce0d1
11:11:45,597 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@401317a0
11:11:45,600 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@60807fd9
11:11:45,600 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@60807fd9
11:11:45,601 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@24691c5
11:11:45,601 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b91d9f
11:11:45,601 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6537ac
11:11:45,602 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3b218c74
11:11:45,602 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@ddffa6c
11:11:45,602 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@42c54bad
11:11:45,602 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bb4cc0e
11:11:45,603 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5cc1bf20
11:11:45,963  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
11:11:46,012  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
11:11:48,121  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:11:44 PDT 2015]; root of context hierarchy
11:11:48,170  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:11:44 PDT 2015]; root of context hierarchy
11:11:48,327  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:11:44 PDT 2015]; root of context hierarchy
11:11:48,492  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4460 ms
11:12:02,626 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3cd2f7d3
11:12:02,626  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
11:12:02,657 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
11:12:02,667 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

11:12:02,667 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:12:02,694 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
11:12:02,723 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
11:12:02,725 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
11:12:02,727 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@25f0c5e7
11:12:02,728 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
11:12:02,729 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
11:12:02,730 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
11:12:02,737 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
11:12:02,748 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
11:12:02,749 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
11:12:02,750 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

11:12:02,751 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:12:02,762 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
11:12:02,763 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
11:12:02,763 DEBUG ErrorCounter:95 - throwQueryException() : no errors
11:12:02,799 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
11:12:19,177 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:12:23,114 ERROR GenericExceptionMapper:21 - 
org.courseregistration.exception.ApplicationException
	at org.courseregistration.exception.ApplicationException$ApplicationExceptionBuilder.build(ApplicationException.java:109)
	at org.courseregistration.service.CourseService.findById(CourseService.java:63)
	at org.courseregistration.controller.CourseController.findCourseById(CourseController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
11:14:22,138  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
11:14:22,255  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 11:14:22 PDT 2015]; root of context hierarchy
11:14:22,300  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
11:14:22,860  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
11:14:22,861  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
11:14:23,004  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
11:14:23,141  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
11:14:23,206  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
11:14:23,243  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
11:14:23,352  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
11:14:23,356  INFO Environment:213 - HHH000206: hibernate.properties not found
11:14:23,358  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
11:14:23,427  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
11:14:23,537 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@44b99467
11:14:23,537 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@44b99467
11:14:23,537 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@44b99467
11:14:23,542 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a458c73
11:14:23,544 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4d6f951a
11:14:23,545 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e3c6323
11:14:23,548 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7212d3df
11:14:23,548 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7212d3df
11:14:23,549 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7212d3df
11:14:23,551 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3a72517e
11:14:23,552 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3a72517e
11:14:23,552 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3a72517e
11:14:23,554 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@71ae1cb
11:14:23,555 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@71ae1cb
11:14:23,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@71ae1cb
11:14:23,557 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@29ec5005
11:14:23,557 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@29ec5005
11:14:23,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29ec5005
11:14:23,560 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5bb24266
11:14:23,560 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5bb24266
11:14:23,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5bb24266
11:14:23,564 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59bf79f3
11:14:23,565 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59bf79f3
11:14:23,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59bf79f3
11:14:23,567 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@39adf4e6
11:14:23,567 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@39adf4e6
11:14:23,568 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@39adf4e6
11:14:23,571 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2552cb80
11:14:23,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2552cb80
11:14:23,574 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@dc28d74
11:14:23,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@dc28d74
11:14:23,576 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6ceeb592
11:14:23,576 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6ceeb592
11:14:23,578 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@49467fc6
11:14:23,579 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47d7e8b5
11:14:23,582 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7d8c264
11:14:23,583 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d8c264
11:14:23,586 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@68b4e7b5
11:14:23,586 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68b4e7b5
11:14:23,590 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2ef5df8f
11:14:23,590 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2ef5df8f
11:14:23,592 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4e7e7763
11:14:23,593 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4e7e7763
11:14:23,593 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4e7e7763
11:14:23,596 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@206a465f
11:14:23,598 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@60fc4450
11:14:23,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@60fc4450
11:14:23,599 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@60fc4450
11:14:23,600 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7bb996e0
11:14:23,602 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4303511e
11:14:23,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4303511e
11:14:23,603 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6a94bd69
11:14:23,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6a94bd69
11:14:23,605 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@54351197
11:14:23,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@54351197
11:14:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@d96f413
11:14:23,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d96f413
11:14:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@301b89e1
11:14:23,609 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@301b89e1
11:14:23,610 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6101fd7d
11:14:23,612 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@44f6ac4f
11:14:23,612 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@44f6ac4f
11:14:23,612 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@44f6ac4f
11:14:23,614 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@cec1ce2
11:14:23,614 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@cec1ce2
11:14:23,614 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@cec1ce2
11:14:23,615 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1046aaa4
11:14:23,617 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6030eff1
11:14:23,617 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6030eff1
11:14:23,617 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6030eff1
11:14:23,619 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@309ac89e
11:14:23,619 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@309ac89e
11:14:23,620 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@309ac89e
11:14:23,621 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5a9004e1
11:14:23,622 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6ed87b1c
11:14:23,627 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@497cf31a
11:14:23,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@497cf31a
11:14:23,628 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@64404db6
11:14:23,636 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2052c49f
11:14:23,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2052c49f
11:14:23,641 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@13ac1657
11:14:23,641 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13ac1657
11:14:23,642 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@39d4f046
11:14:23,642 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@70199db0
11:14:23,644 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@27558dee
11:14:23,648 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1e8c9083
11:14:23,648 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e8c9083
11:14:23,649 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ef570be
11:14:23,649 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@39329d81
11:14:23,649 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63574d76
11:14:23,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@586a9fe1
11:14:23,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dcf64d2
11:14:23,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20bc3e7f
11:14:23,650 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7959fbe3
11:14:23,651 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75c0e6be
11:14:24,055  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
11:14:24,108  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
11:14:26,423  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:14:22 PDT 2015]; root of context hierarchy
11:14:26,487  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:14:22 PDT 2015]; root of context hierarchy
11:14:26,666  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 11:14:22 PDT 2015]; root of context hierarchy
11:14:26,836  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4694 ms
11:19:53,652 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
11:19:57,405 ERROR GenericExceptionMapper:21 - 
org.courseregistration.exception.ApplicationException
	at org.courseregistration.exception.ApplicationException$ApplicationExceptionBuilder.build(ApplicationException.java:109)
	at org.courseregistration.service.CourseService.findById(CourseService.java:63)
	at org.courseregistration.controller.CourseController.findCourseById(CourseController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
13:12:11,286  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:12:11,381  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:12:11 PDT 2015]; root of context hierarchy
13:12:11,411  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:12:11,822  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
13:12:11,825  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
13:12:11,857  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'ROLE_USER' for /**
13:12:11,880  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
13:12:12,049  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:12:12,050  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:12:12,164  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:12:12,244  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:12:12,275  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:12:12,306  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:12:12,375  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:12:12,378  INFO Environment:213 - HHH000206: hibernate.properties not found
13:12:12,379  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:12:12,426  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:12:12,487 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@c8ed958
13:12:12,488 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@c8ed958
13:12:12,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c8ed958
13:12:12,489 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@943cf5
13:12:12,491 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@543c887
13:12:12,492 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27e656e6
13:12:12,493 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@73c1dda3
13:12:12,494 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@73c1dda3
13:12:12,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73c1dda3
13:12:12,495 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7d0e43d6
13:12:12,495 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7d0e43d6
13:12:12,495 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d0e43d6
13:12:12,497 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@309d54ac
13:12:12,497 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@309d54ac
13:12:12,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@309d54ac
13:12:12,499 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@619b7436
13:12:12,499 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@619b7436
13:12:12,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@619b7436
13:12:12,502 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4c89c98a
13:12:12,502 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@4c89c98a
13:12:12,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c89c98a
13:12:12,504 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@470ad01c
13:12:12,504 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@470ad01c
13:12:12,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@470ad01c
13:12:12,506 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@136690b1
13:12:12,506 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@136690b1
13:12:12,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@136690b1
13:12:12,510 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7d836c4a
13:12:12,510 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7d836c4a
13:12:12,511 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62376bdd
13:12:12,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62376bdd
13:12:12,512 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@397f925e
13:12:12,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@397f925e
13:12:12,513 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2148849f
13:12:12,514 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ce0f50a
13:12:12,515 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@260f05ee
13:12:12,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@260f05ee
13:12:12,516 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7a1878d
13:12:12,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7a1878d
13:12:12,518 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2389f546
13:12:12,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2389f546
13:12:12,520 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6fe91918
13:12:12,521 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6fe91918
13:12:12,521 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6fe91918
13:12:12,524 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@260ccf0
13:12:12,525 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@73839f22
13:12:12,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@73839f22
13:12:12,525 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@73839f22
13:12:12,526 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@bb1b872
13:12:12,527 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@659e003e
13:12:12,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@659e003e
13:12:12,528 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@55a5eea3
13:12:12,528 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@55a5eea3
13:12:12,529 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@600b3bee
13:12:12,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@600b3bee
13:12:12,530 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@89178b4
13:12:12,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@89178b4
13:12:12,531 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74ed7111
13:12:12,531 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74ed7111
13:12:12,532 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1abd1a28
13:12:12,533 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@66e62e19
13:12:12,533 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@66e62e19
13:12:12,533 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@66e62e19
13:12:12,534 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@743f58c3
13:12:12,534 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@743f58c3
13:12:12,534 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@743f58c3
13:12:12,535 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1e9f6095
13:12:12,535 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@750adad8
13:12:12,535 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@750adad8
13:12:12,536 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@750adad8
13:12:12,536 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@73753326
13:12:12,537 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@73753326
13:12:12,537 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@73753326
13:12:12,537 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5d56c2d2
13:12:12,538 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@22cf1808
13:12:12,541 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@8de8b07
13:12:12,541 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@8de8b07
13:12:12,542 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1016b44e
13:12:12,545 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4f571c0e
13:12:12,545 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f571c0e
13:12:12,548 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@6b60d99c
13:12:12,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b60d99c
13:12:12,548 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@639bf405
13:12:12,549 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@71c69628
13:12:12,550 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@27422187
13:12:12,552 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7c816f46
13:12:12,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c816f46
13:12:12,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@542aec6
13:12:12,553 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@724e0a77
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@762db992
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15a591d9
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5812935
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@71e9640
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ce45e18
13:12:12,554 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25762f04
13:12:12,860  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:12:12,890  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:12:14,636  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:11 PDT 2015]; root of context hierarchy
13:12:14,680  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:11 PDT 2015]; root of context hierarchy
13:12:14,928  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4cce421e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3681c285, org.springframework.security.web.header.HeaderWriterFilter@6894d28d, org.springframework.security.web.csrf.CsrfFilter@27de9336, org.courseregistration.auth.CustomRestSecurityFilter@19beeb61, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21139739, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f5d292c, org.springframework.security.web.access.ExceptionTranslationFilter@3c4940d2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@524241d9]
13:12:15,002  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:12:11 PDT 2015]; root of context hierarchy
13:12:15,093  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3804 ms
13:30:02,047  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:30:02,153  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:30:02 PDT 2015]; root of context hierarchy
13:30:02,194  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:30:02,755  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:30:02,756  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:30:02,865  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:30:02,954  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:30:02,994  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:30:03,018  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:30:03,079  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:30:03,081  INFO Environment:213 - HHH000206: hibernate.properties not found
13:30:03,082  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:30:03,125  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:30:03,187 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b30ff23
13:30:03,188 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b30ff23
13:30:03,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b30ff23
13:30:03,190 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@52667676
13:30:03,191 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@341889a1
13:30:03,192 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@44d6f9cf
13:30:03,193 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@11ad327f
13:30:03,194 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@11ad327f
13:30:03,194 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11ad327f
13:30:03,196 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@50d91a0f
13:30:03,196 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@50d91a0f
13:30:03,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50d91a0f
13:30:03,199 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f602930
13:30:03,199 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1f602930
13:30:03,199 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1f602930
13:30:03,201 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@71689ee2
13:30:03,201 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@71689ee2
13:30:03,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@71689ee2
13:30:03,203 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6277a496
13:30:03,203 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6277a496
13:30:03,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6277a496
13:30:03,205 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@41120e48
13:30:03,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@41120e48
13:30:03,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41120e48
13:30:03,207 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7ac47f14
13:30:03,208 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7ac47f14
13:30:03,208 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7ac47f14
13:30:03,210 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54fd5759
13:30:03,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54fd5759
13:30:03,212 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32153bbe
13:30:03,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32153bbe
13:30:03,213 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@34114276
13:30:03,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@34114276
13:30:03,214 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@8113ea7
13:30:03,215 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64acf8d2
13:30:03,216 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7fb46c10
13:30:03,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7fb46c10
13:30:03,217 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2b5a04b0
13:30:03,218 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b5a04b0
13:30:03,220 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1fa24e7
13:30:03,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1fa24e7
13:30:03,221 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1df2e767
13:30:03,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1df2e767
13:30:03,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1df2e767
13:30:03,224 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@729c98
13:30:03,225 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@461b38ca
13:30:03,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@461b38ca
13:30:03,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@461b38ca
13:30:03,226 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1185b0b7
13:30:03,227 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1f86f7da
13:30:03,227 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1f86f7da
13:30:03,228 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@51a5a8ba
13:30:03,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a5a8ba
13:30:03,229 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@8f8717b
13:30:03,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8f8717b
13:30:03,231 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@59cb10e0
13:30:03,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59cb10e0
13:30:03,233 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@63c88994
13:30:03,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@63c88994
13:30:03,234 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52b49891
13:30:03,235 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@68dbe225
13:30:03,236 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@68dbe225
13:30:03,236 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@68dbe225
13:30:03,237 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18cb4ed1
13:30:03,238 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18cb4ed1
13:30:03,238 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18cb4ed1
13:30:03,239 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@6e5fba90
13:30:03,240 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6b8f87dc
13:30:03,241 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6b8f87dc
13:30:03,241 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6b8f87dc
13:30:03,242 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4bc4ec43
13:30:03,243 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4bc4ec43
13:30:03,243 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4bc4ec43
13:30:03,244 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5dc1597f
13:30:03,244 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2262bc86
13:30:03,248 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2b85edc7
13:30:03,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2b85edc7
13:30:03,249 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@490704a5
13:30:03,251 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7d1cfe97
13:30:03,252 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7d1cfe97
13:30:03,254 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2d1f9ec3
13:30:03,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2d1f9ec3
13:30:03,255 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d1973e8
13:30:03,255 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@159408a7
13:30:03,256 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@727e61ed
13:30:03,258 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@568fd3de
13:30:03,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@568fd3de
13:30:03,259 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ecd09d5
13:30:03,259 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36f438f1
13:30:03,259 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53654b2d
13:30:03,260 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45b2b0ed
13:30:03,260 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@33478a2f
13:30:03,261 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24e31f06
13:30:03,261 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5d260494
13:30:03,261 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d43f205
13:30:03,382  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
13:30:03,394  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:30:03,409  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
13:30:04,154  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:30:04,167 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:30:42,978  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:30:43,058  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:30:43 PDT 2015]; root of context hierarchy
13:30:43,085  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:30:43,543  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:30:43,545  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:30:43,672  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:30:43,773  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:30:43,820  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:30:43,850  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:30:43,931  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:30:43,935  INFO Environment:213 - HHH000206: hibernate.properties not found
13:30:43,937  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:30:43,985  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:30:44,057 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@23d07ad3
13:30:44,057 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@23d07ad3
13:30:44,057 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23d07ad3
13:30:44,059 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@641c8ba4
13:30:44,060 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6802c10e
13:30:44,061 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3a225534
13:30:44,063 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@64f2b1b4
13:30:44,064 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@64f2b1b4
13:30:44,064 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@64f2b1b4
13:30:44,066 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1f370472
13:30:44,067 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1f370472
13:30:44,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f370472
13:30:44,069 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@445b4594
13:30:44,070 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@445b4594
13:30:44,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@445b4594
13:30:44,071 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1d126f07
13:30:44,072 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1d126f07
13:30:44,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1d126f07
13:30:44,074 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3dbb7bb
13:30:44,075 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3dbb7bb
13:30:44,075 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3dbb7bb
13:30:44,077 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@200e6029
13:30:44,077 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@200e6029
13:30:44,078 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@200e6029
13:30:44,080 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66f223fa
13:30:44,080 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66f223fa
13:30:44,080 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66f223fa
13:30:44,083 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@220e1b7b
13:30:44,083 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@220e1b7b
13:30:44,085 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22561412
13:30:44,085 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22561412
13:30:44,087 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4b37d1a4
13:30:44,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4b37d1a4
13:30:44,088 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ee19768
13:30:44,089 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@44f338ec
13:30:44,090 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3cd89c72
13:30:44,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3cd89c72
13:30:44,093 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@34cb1310
13:30:44,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34cb1310
13:30:44,096 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@da4c5cb
13:30:44,096 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@da4c5cb
13:30:44,098 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@739be7ec
13:30:44,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@739be7ec
13:30:44,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@739be7ec
13:30:44,100 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c7aba7c
13:30:44,102 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@407d2a01
13:30:44,102 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@407d2a01
13:30:44,102 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@407d2a01
13:30:44,104 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3881b884
13:30:44,105 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@29ce33e9
13:30:44,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29ce33e9
13:30:44,106 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@5c945ee7
13:30:44,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5c945ee7
13:30:44,108 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4244e477
13:30:44,108 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4244e477
13:30:44,109 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@30a5a58d
13:30:44,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@30a5a58d
13:30:44,111 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2e76d0d3
13:30:44,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2e76d0d3
13:30:44,112 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4adc3951
13:30:44,113 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@24fb752f
13:30:44,114 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@24fb752f
13:30:44,114 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@24fb752f
13:30:44,115 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5440a3a
13:30:44,115 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5440a3a
13:30:44,115 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5440a3a
13:30:44,116 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@20706e70
13:30:44,117 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7dcc0296
13:30:44,117 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dcc0296
13:30:44,118 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7dcc0296
13:30:44,119 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@530d40b4
13:30:44,120 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@530d40b4
13:30:44,120 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@530d40b4
13:30:44,122 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3f5f79d8
13:30:44,124 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7866a7a6
13:30:44,129 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5b16e486
13:30:44,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b16e486
13:30:44,131 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2559f65c
13:30:44,135 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4f3e65f4
13:30:44,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f3e65f4
13:30:44,142 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@734a2c17
13:30:44,142 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@734a2c17
13:30:44,143 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2f11d889
13:30:44,144 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@34604b32
13:30:44,145 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4220468
13:30:44,148 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@584f4ca5
13:30:44,149 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@584f4ca5
13:30:44,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc5408c
13:30:44,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ecd09d5
13:30:44,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36f438f1
13:30:44,150 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53654b2d
13:30:44,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45b2b0ed
13:30:44,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@33478a2f
13:30:44,151 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24e31f06
13:30:44,152 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d260494
13:30:44,633  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:30:44,670  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:30:46,501  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:30:43 PDT 2015]; root of context hierarchy
13:30:46,544  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:30:43 PDT 2015]; root of context hierarchy
13:30:46,656  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:30:43 PDT 2015]; root of context hierarchy
13:30:46,745  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3764 ms
13:32:54,980  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:32:55,073  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:32:55 PDT 2015]; root of context hierarchy
13:32:55,110  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:32:55,635  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:32:55,636  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:32:55,736  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:32:55,817  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:32:55,848  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:32:55,872  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:32:55,943  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:32:55,945  INFO Environment:213 - HHH000206: hibernate.properties not found
13:32:55,947  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:32:55,985  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:32:56,044 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@12925d2
13:32:56,045 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@12925d2
13:32:56,045 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12925d2
13:32:56,047 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@164db8f0
13:32:56,049 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39a09c0
13:32:56,051 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b850bb7
13:32:56,055 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54224125
13:32:56,055 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@54224125
13:32:56,055 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@54224125
13:32:56,057 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11ad327f
13:32:56,057 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11ad327f
13:32:56,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11ad327f
13:32:56,059 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@52b6561b
13:32:56,060 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@52b6561b
13:32:56,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52b6561b
13:32:56,061 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1f602930
13:32:56,062 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1f602930
13:32:56,062 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1f602930
13:32:56,064 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@23dda7a3
13:32:56,064 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@23dda7a3
13:32:56,064 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@23dda7a3
13:32:56,066 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@519e67e
13:32:56,066 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@519e67e
13:32:56,066 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@519e67e
13:32:56,067 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@ea40c9f
13:32:56,068 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@ea40c9f
13:32:56,068 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@ea40c9f
13:32:56,071 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@34be7efb
13:32:56,071 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@34be7efb
13:32:56,073 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a358906
13:32:56,073 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a358906
13:32:56,075 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@32153bbe
13:32:56,075 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@32153bbe
13:32:56,076 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34114276
13:32:56,077 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@8113ea7
13:32:56,078 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@64acf8d2
13:32:56,078 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@64acf8d2
13:32:56,080 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2b441609
13:32:56,080 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2b441609
13:32:56,082 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5b78a946
13:32:56,082 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5b78a946
13:32:56,084 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1a99692
13:32:56,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1a99692
13:32:56,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1a99692
13:32:56,086 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3ecbfba1
13:32:56,087 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@729c98
13:32:56,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@729c98
13:32:56,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@729c98
13:32:56,088 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@54fffa5a
13:32:56,089 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1185b0b7
13:32:56,090 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1185b0b7
13:32:56,091 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1f86f7da
13:32:56,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1f86f7da
13:32:56,092 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@51a5a8ba
13:32:56,092 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@51a5a8ba
13:32:56,093 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f8717b
13:32:56,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f8717b
13:32:56,095 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3123ba75
13:32:56,095 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3123ba75
13:32:56,096 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@22a22f1
13:32:56,097 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@52b49891
13:32:56,097 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@52b49891
13:32:56,097 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@52b49891
13:32:56,098 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@145ef9e8
13:32:56,098 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@145ef9e8
13:32:56,098 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@145ef9e8
13:32:56,099 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@18cb4ed1
13:32:56,100 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6e5fba90
13:32:56,100 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e5fba90
13:32:56,100 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6e5fba90
13:32:56,101 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c25201
13:32:56,102 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c25201
13:32:56,102 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c25201
13:32:56,102 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4bc4ec43
13:32:56,103 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5dc1597f
13:32:56,106 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@35d53cd8
13:32:56,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35d53cd8
13:32:56,107 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@47393345
13:32:56,110 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6d5d1204
13:32:56,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5d1204
13:32:56,113 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@564fc235
13:32:56,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@564fc235
13:32:56,113 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5bbc033f
13:32:56,114 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@148f94dc
13:32:56,115 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@159408a7
13:32:56,117 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@460df441
13:32:56,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@460df441
13:32:56,118 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c91121
13:32:56,118 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@584f4ca5
13:32:56,118 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@568fd3de
13:32:56,118 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5bc1903
13:32:56,119 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3cc5408c
13:32:56,119 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ecd09d5
13:32:56,119 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@36f438f1
13:32:56,119 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53654b2d
13:32:56,379  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:32:56,406  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:32:58,388  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:32:55 PDT 2015]; root of context hierarchy
13:32:58,438  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:32:55 PDT 2015]; root of context hierarchy
13:32:58,576  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:32:55 PDT 2015]; root of context hierarchy
13:32:58,672  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3689 ms
13:33:06,005 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7beb34ff
13:33:06,007  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:33:06,039 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
13:33:06,049 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

13:33:06,050 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:33:06,077 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:33:06,097 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
13:33:06,100 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:33:06,103 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@32153bbe
13:33:06,104 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
13:33:06,104 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:33:06,105 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
13:33:06,174 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:33:06,182 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
13:33:06,183 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:33:06,184 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

13:33:06,184 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:33:06,193 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
13:33:06,193 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
13:33:06,193 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:33:06,221 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
13:34:58,351  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:34:58,452  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:34:58 PDT 2015]; root of context hierarchy
13:34:58,491  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:34:58,942  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
13:34:58,945  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
13:34:58,979  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'ROLE_USER' for /**
13:34:58,997  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
13:34:59,156  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:34:59,158  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:34:59,321  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:34:59,424  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:34:59,471  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:34:59,504  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:34:59,601  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:34:59,605  INFO Environment:213 - HHH000206: hibernate.properties not found
13:34:59,609  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:34:59,684  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:34:59,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cc548f6
13:34:59,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cc548f6
13:34:59,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3cc548f6
13:34:59,777 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74070994
13:34:59,778 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@15a591d9
13:34:59,779 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ce45e18
13:34:59,783 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7af7c9aa
13:34:59,783 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7af7c9aa
13:34:59,784 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7af7c9aa
13:34:59,785 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6334c0d8
13:34:59,786 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6334c0d8
13:34:59,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6334c0d8
13:34:59,789 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2318651f
13:34:59,789 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2318651f
13:34:59,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2318651f
13:34:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3e3a07ab
13:34:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3e3a07ab
13:34:59,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e3a07ab
13:34:59,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67cd193d
13:34:59,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67cd193d
13:34:59,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67cd193d
13:34:59,798 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@560c3758
13:34:59,798 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@560c3758
13:34:59,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@560c3758
13:34:59,801 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4a7c8cb7
13:34:59,801 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4a7c8cb7
13:34:59,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a7c8cb7
13:34:59,805 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39f7cc46
13:34:59,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39f7cc46
13:34:59,807 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45cddfd3
13:34:59,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45cddfd3
13:34:59,809 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3a61d819
13:34:59,810 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a61d819
13:34:59,811 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@99774ec
13:34:59,812 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20fdaf3e
13:34:59,814 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@40b678b3
13:34:59,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40b678b3
13:34:59,817 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1cb73a92
13:34:59,817 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1cb73a92
13:34:59,820 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@272f5373
13:34:59,820 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@272f5373
13:34:59,822 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@55465bfc
13:34:59,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55465bfc
13:34:59,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55465bfc
13:34:59,826 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35c9f527
13:34:59,828 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bd1b07d
13:34:59,829 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bd1b07d
13:34:59,829 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bd1b07d
13:34:59,830 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@580e01cd
13:34:59,831 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@644c3590
13:34:59,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@644c3590
13:34:59,832 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@68e62b3b
13:34:59,832 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68e62b3b
13:34:59,833 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@61627c9d
13:34:59,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61627c9d
13:34:59,833 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@92775a3
13:34:59,834 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@92775a3
13:34:59,836 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fd77205
13:34:59,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fd77205
13:34:59,838 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62a6a47e
13:34:59,839 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@57a0aeb8
13:34:59,840 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@57a0aeb8
13:34:59,841 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@57a0aeb8
13:34:59,842 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:34:59,842 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:34:59,843 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:34:59,844 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@38ae69f7
13:34:59,845 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@d6879bf
13:34:59,846 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d6879bf
13:34:59,846 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@d6879bf
13:34:59,848 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fa19e4
13:34:59,848 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fa19e4
13:34:59,848 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fa19e4
13:34:59,849 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5c8e7687
13:34:59,849 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3733b1f4
13:34:59,855 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3b7dd173
13:34:59,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b7dd173
13:34:59,856 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@322593ed
13:34:59,861 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@73483d4b
13:34:59,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@73483d4b
13:34:59,866 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1c76b2fe
13:34:59,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1c76b2fe
13:34:59,867 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d67e3d3
13:34:59,867 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2aeb3f3b
13:34:59,868 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2fd409c1
13:34:59,871 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3fe21d0e
13:34:59,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3fe21d0e
13:34:59,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d7f0cd0
13:34:59,873 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@325a781c
13:34:59,873 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@113e6e06
13:34:59,873 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6ae5e1cf
13:34:59,874 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f9979cf
13:34:59,874 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e627ab8
13:34:59,874 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cce672c
13:34:59,874 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@496004e3
13:35:00,230  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:35:00,262  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:35:02,339  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:34:58 PDT 2015]; root of context hierarchy
13:35:02,394  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:34:58 PDT 2015]; root of context hierarchy
13:35:02,738  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@162c89ac, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@644f033d, org.springframework.security.web.header.HeaderWriterFilter@6f526f91, org.springframework.security.web.csrf.CsrfFilter@26c349fc, org.courseregistration.auth.CustomRestSecurityFilter@54d0d561, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@489a722d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3448a248, org.springframework.security.web.access.ExceptionTranslationFilter@8788194, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a513627]
13:35:02,824  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:34:58 PDT 2015]; root of context hierarchy
13:35:02,930  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4576 ms
13:38:09,033  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:38:09,127  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:38:09 PDT 2015]; root of context hierarchy
13:38:09,168  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:38:09,578  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
13:38:09,580  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
13:38:09,607  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
13:38:09,622  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
13:38:09,797  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:38:09,798  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:38:09,946  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:38:10,063  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:38:10,107  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:38:10,135  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:38:10,217  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:38:10,222  INFO Environment:213 - HHH000206: hibernate.properties not found
13:38:10,224  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:38:10,294  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:38:10,389 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cc548f6
13:38:10,390 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3cc548f6
13:38:10,391 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3cc548f6
13:38:10,392 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@74070994
13:38:10,393 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@15a591d9
13:38:10,394 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1ce45e18
13:38:10,396 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7af7c9aa
13:38:10,397 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7af7c9aa
13:38:10,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7af7c9aa
13:38:10,399 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6334c0d8
13:38:10,399 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6334c0d8
13:38:10,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6334c0d8
13:38:10,401 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2318651f
13:38:10,401 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2318651f
13:38:10,402 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2318651f
13:38:10,403 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3e3a07ab
13:38:10,403 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3e3a07ab
13:38:10,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3e3a07ab
13:38:10,405 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67cd193d
13:38:10,406 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@67cd193d
13:38:10,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@67cd193d
13:38:10,408 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@560c3758
13:38:10,408 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@560c3758
13:38:10,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@560c3758
13:38:10,410 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4a7c8cb7
13:38:10,410 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4a7c8cb7
13:38:10,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a7c8cb7
13:38:10,413 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39f7cc46
13:38:10,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39f7cc46
13:38:10,415 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@45cddfd3
13:38:10,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@45cddfd3
13:38:10,416 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3a61d819
13:38:10,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3a61d819
13:38:10,418 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@99774ec
13:38:10,418 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20fdaf3e
13:38:10,420 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@40b678b3
13:38:10,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40b678b3
13:38:10,424 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1cb73a92
13:38:10,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1cb73a92
13:38:10,427 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@272f5373
13:38:10,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@272f5373
13:38:10,428 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@55465bfc
13:38:10,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@55465bfc
13:38:10,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@55465bfc
13:38:10,431 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35c9f527
13:38:10,432 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4bd1b07d
13:38:10,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4bd1b07d
13:38:10,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4bd1b07d
13:38:10,433 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@580e01cd
13:38:10,434 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@644c3590
13:38:10,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@644c3590
13:38:10,436 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@68e62b3b
13:38:10,436 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@68e62b3b
13:38:10,437 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@61627c9d
13:38:10,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@61627c9d
13:38:10,440 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@92775a3
13:38:10,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@92775a3
13:38:10,446 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fd77205
13:38:10,447 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fd77205
13:38:10,448 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62a6a47e
13:38:10,450 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@57a0aeb8
13:38:10,451 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@57a0aeb8
13:38:10,451 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@57a0aeb8
13:38:10,454 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:38:10,454 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:38:10,455 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23adbd6b
13:38:10,455 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@38ae69f7
13:38:10,457 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@d6879bf
13:38:10,457 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d6879bf
13:38:10,457 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@d6879bf
13:38:10,459 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fa19e4
13:38:10,459 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fa19e4
13:38:10,459 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fa19e4
13:38:10,461 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5c8e7687
13:38:10,461 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3733b1f4
13:38:10,469 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3b7dd173
13:38:10,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b7dd173
13:38:10,470 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@322593ed
13:38:10,475 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@73483d4b
13:38:10,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@73483d4b
13:38:10,478 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1c76b2fe
13:38:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1c76b2fe
13:38:10,479 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3d67e3d3
13:38:10,480 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2aeb3f3b
13:38:10,482 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2fd409c1
13:38:10,487 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3fe21d0e
13:38:10,488 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3fe21d0e
13:38:10,488 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1d7f0cd0
13:38:10,489 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@325a781c
13:38:10,489 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@113e6e06
13:38:10,489 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6ae5e1cf
13:38:10,489 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f9979cf
13:38:10,490 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e627ab8
13:38:10,490 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cce672c
13:38:10,490 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@496004e3
13:38:10,852  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:38:10,883  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:38:12,752  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:38:09 PDT 2015]; root of context hierarchy
13:38:12,802  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:38:09 PDT 2015]; root of context hierarchy
13:38:13,100  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@306a9cd8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c52df60, org.springframework.security.web.header.HeaderWriterFilter@2fe12ec3, org.springframework.security.web.csrf.CsrfFilter@678a7489, org.courseregistration.auth.CustomRestSecurityFilter@3e2a8fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6921ce3f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f1072ee, org.springframework.security.web.access.ExceptionTranslationFilter@7b0a69b9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d398b6c]
13:38:13,198  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:38:09 PDT 2015]; root of context hierarchy
13:38:13,300  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4265 ms
13:57:50,382  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 13:38:09 PDT 2015]; root of context hierarchy
13:57:50,429  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
13:57:57,037  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:57:57,125  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:57:57 PDT 2015]; root of context hierarchy
13:57:57,154  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:57:57,628  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:57:57,629  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:57:57,733  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:57:57,816  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:57:57,874  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:57:57,905  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:57:58,001  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:57:58,004  INFO Environment:213 - HHH000206: hibernate.properties not found
13:57:58,006  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:57:58,063  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:57:58,148 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:57:58,149 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:57:58,149 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:57:58,151 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@341889a1
13:57:58,153 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@feab3ae
13:57:58,154 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@11ad327f
13:57:58,156 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
13:57:58,156 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
13:57:58,156 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b6561b
13:57:58,158 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1f602930
13:57:58,158 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1f602930
13:57:58,158 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f602930
13:57:58,160 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
13:57:58,161 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
13:57:58,161 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23dda7a3
13:57:58,162 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6277a496
13:57:58,163 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6277a496
13:57:58,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6277a496
13:57:58,164 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
13:57:58,165 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
13:57:58,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a6e410c
13:57:58,168 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
13:57:58,169 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
13:57:58,170 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ac47f14
13:57:58,174 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
13:57:58,174 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
13:57:58,175 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13e5b262
13:57:58,177 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4806fbf7
13:57:58,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4806fbf7
13:57:58,180 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5923210
13:57:58,181 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5923210
13:57:58,184 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@78e4fa1
13:57:58,185 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@78e4fa1
13:57:58,186 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6258f9d1
13:57:58,187 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@694c0ed1
13:57:58,190 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a3404fa
13:57:58,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a3404fa
13:57:58,193 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1fa24e7
13:57:58,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fa24e7
13:57:58,195 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1df2e767
13:57:58,196 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1df2e767
13:57:58,197 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@407d2a01
13:57:58,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@407d2a01
13:57:58,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@407d2a01
13:57:58,199 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3881b884
13:57:58,200 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@29ce33e9
13:57:58,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29ce33e9
13:57:58,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29ce33e9
13:57:58,202 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c0d7099
13:57:58,203 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@404566e7
13:57:58,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@404566e7
13:57:58,205 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e9f48d4
13:57:58,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e9f48d4
13:57:58,207 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dfab167
13:57:58,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dfab167
13:57:58,208 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@22a22f1
13:57:58,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a22f1
13:57:58,212 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fb752f
13:57:58,212 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fb752f
13:57:58,213 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e667e95
13:57:58,214 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@10abd94f
13:57:58,215 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10abd94f
13:57:58,215 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@10abd94f
13:57:58,216 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:57:58,217 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:57:58,217 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:57:58,219 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4faaff61
13:57:58,220 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6560f387
13:57:58,220 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6560f387
13:57:58,220 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6560f387
13:57:58,221 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:57:58,222 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:57:58,222 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:57:58,222 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4f72078d
13:57:58,223 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@62fbefad
13:57:58,227 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5f1c406e
13:57:58,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f1c406e
13:57:58,228 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@362e709e
13:57:58,231 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3bc33ad9
13:57:58,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bc33ad9
13:57:58,234 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5354bfce
13:57:58,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5354bfce
13:57:58,235 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4220468
13:57:58,235 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ba815ee
13:57:58,237 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@198524ec
13:57:58,241 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@33478a2f
13:57:58,242 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33478a2f
13:57:58,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d43f205
13:57:58,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2da0770
13:57:58,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3efd3302
13:57:58,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531292ed
13:57:58,244 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41538150
13:57:58,244 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1360ef8d
13:57:58,244 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d2bbc0
13:57:58,244 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@310cc4d
13:57:58,404  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
13:57:58,420  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:57:58,443  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
13:57:59,266  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:57:59,289 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:58:16,054  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:58:16,174  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:58:16 PDT 2015]; root of context hierarchy
13:58:16,223  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:58:16,799  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:58:16,800  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:58:16,934  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:58:17,044  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:58:17,090  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:58:17,124  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:58:17,203  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:58:17,206  INFO Environment:213 - HHH000206: hibernate.properties not found
13:58:17,207  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:58:17,261  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:58:17,344 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:58:17,344 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:58:17,345 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f6d3a81
13:58:17,346 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@341889a1
13:58:17,348 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@feab3ae
13:58:17,349 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@11ad327f
13:58:17,351 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
13:58:17,352 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
13:58:17,352 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b6561b
13:58:17,353 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1f602930
13:58:17,354 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1f602930
13:58:17,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f602930
13:58:17,356 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
13:58:17,357 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
13:58:17,357 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23dda7a3
13:58:17,359 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6277a496
13:58:17,359 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6277a496
13:58:17,359 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6277a496
13:58:17,361 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
13:58:17,362 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
13:58:17,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a6e410c
13:58:17,364 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
13:58:17,364 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
13:58:17,365 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ac47f14
13:58:17,367 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
13:58:17,367 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
13:58:17,367 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13e5b262
13:58:17,370 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4806fbf7
13:58:17,371 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4806fbf7
13:58:17,374 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5923210
13:58:17,375 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5923210
13:58:17,377 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@78e4fa1
13:58:17,378 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@78e4fa1
13:58:17,379 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6258f9d1
13:58:17,380 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@694c0ed1
13:58:17,381 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a3404fa
13:58:17,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a3404fa
13:58:17,384 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1fa24e7
13:58:17,385 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fa24e7
13:58:17,387 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1df2e767
13:58:17,387 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1df2e767
13:58:17,389 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@407d2a01
13:58:17,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@407d2a01
13:58:17,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@407d2a01
13:58:17,393 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3881b884
13:58:17,394 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@29ce33e9
13:58:17,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29ce33e9
13:58:17,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29ce33e9
13:58:17,396 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c0d7099
13:58:17,397 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@404566e7
13:58:17,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@404566e7
13:58:17,398 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e9f48d4
13:58:17,398 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e9f48d4
13:58:17,399 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dfab167
13:58:17,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dfab167
13:58:17,400 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@22a22f1
13:58:17,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a22f1
13:58:17,402 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fb752f
13:58:17,402 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fb752f
13:58:17,403 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e667e95
13:58:17,404 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@10abd94f
13:58:17,404 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10abd94f
13:58:17,404 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@10abd94f
13:58:17,405 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:58:17,405 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:58:17,406 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d745ac6
13:58:17,407 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4faaff61
13:58:17,408 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6560f387
13:58:17,408 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6560f387
13:58:17,409 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6560f387
13:58:17,410 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:58:17,411 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:58:17,411 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b6e2c83
13:58:17,412 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4f72078d
13:58:17,414 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@62fbefad
13:58:17,418 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5f1c406e
13:58:17,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f1c406e
13:58:17,419 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@362e709e
13:58:17,423 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3bc33ad9
13:58:17,424 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bc33ad9
13:58:17,427 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5354bfce
13:58:17,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5354bfce
13:58:17,428 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4220468
13:58:17,428 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ba815ee
13:58:17,429 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@198524ec
13:58:17,431 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@33478a2f
13:58:17,431 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33478a2f
13:58:17,432 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d43f205
13:58:17,432 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2da0770
13:58:17,432 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3efd3302
13:58:17,433 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531292ed
13:58:17,433 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41538150
13:58:17,433 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1360ef8d
13:58:17,433 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d2bbc0
13:58:17,434 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@310cc4d
13:58:17,577  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
13:58:17,591  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:58:17,613  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
13:58:18,346  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:58:18,360 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
13:58:54,539  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
13:58:54,630  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 13:58:54 PDT 2015]; root of context hierarchy
13:58:54,668  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
13:58:55,150  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
13:58:55,151  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
13:58:55,308  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
13:58:55,390  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
13:58:55,436  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
13:58:55,480  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:58:55,573  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:58:55,576  INFO Environment:213 - HHH000206: hibernate.properties not found
13:58:55,578  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:58:55,628  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:58:55,698 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ee99964
13:58:55,698 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ee99964
13:58:55,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ee99964
13:58:55,701 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@12f49ca8
13:58:55,702 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@625a9c5d
13:58:55,705 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@9b76b60
13:58:55,707 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7c011174
13:58:55,707 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7c011174
13:58:55,707 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7c011174
13:58:55,709 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@561953e3
13:58:55,709 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@561953e3
13:58:55,709 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@561953e3
13:58:55,711 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@493ac8d3
13:58:55,711 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@493ac8d3
13:58:55,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@493ac8d3
13:58:55,713 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@51ab1ee3
13:58:55,713 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@51ab1ee3
13:58:55,714 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@51ab1ee3
13:58:55,715 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@10a98392
13:58:55,715 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@10a98392
13:58:55,716 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@10a98392
13:58:55,717 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
13:58:55,718 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7fb53256
13:58:55,718 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7fb53256
13:58:55,719 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
13:58:55,720 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@57545c3f
13:58:55,720 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57545c3f
13:58:55,722 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@591a4f8e
13:58:55,722 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@591a4f8e
13:58:55,724 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20a7953c
13:58:55,724 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20a7953c
13:58:55,727 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4e83a98
13:58:55,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4e83a98
13:58:55,728 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1ee27d73
13:58:55,729 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@53a84ff4
13:58:55,731 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7930ffa9
13:58:55,731 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7930ffa9
13:58:55,733 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@62b93086
13:58:55,733 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@62b93086
13:58:55,735 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1eff3cfb
13:58:55,735 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1eff3cfb
13:58:55,737 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3976ebfa
13:58:55,737 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3976ebfa
13:58:55,738 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3976ebfa
13:58:55,740 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4833eff3
13:58:55,742 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@3b1dc579
13:58:55,742 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b1dc579
13:58:55,742 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b1dc579
13:58:55,744 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77f905e3
13:58:55,745 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@777d191f
13:58:55,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@777d191f
13:58:55,746 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f8d86e4
13:58:55,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f8d86e4
13:58:55,748 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@767599a7
13:58:55,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@767599a7
13:58:55,750 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@463561c5
13:58:55,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@463561c5
13:58:55,751 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@235d659c
13:58:55,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@235d659c
13:58:55,752 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f5ce0bb
13:58:55,754 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@311ff287
13:58:55,754 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@311ff287
13:58:55,755 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@311ff287
13:58:55,756 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e307087
13:58:55,756 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e307087
13:58:55,757 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e307087
13:58:55,759 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4bcaa195
13:58:55,760 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6bc24e72
13:58:55,760 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6bc24e72
13:58:55,761 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6bc24e72
13:58:55,762 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5034f5dd
13:58:55,762 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5034f5dd
13:58:55,762 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5034f5dd
13:58:55,763 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@62d1dc3c
13:58:55,763 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7f2d31af
13:58:55,767 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@203d1d93
13:58:55,767 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@203d1d93
13:58:55,767 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7d979d34
13:58:55,770 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@42cc183e
13:58:55,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42cc183e
13:58:55,773 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@40d23c82
13:58:55,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40d23c82
13:58:55,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3a4ab7f7
13:58:55,775 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@550de6b8
13:58:55,776 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5befbac1
13:58:55,780 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@9efcd90
13:58:55,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@9efcd90
13:58:55,783 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c2924d7
13:58:55,783 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b5de58f
13:58:55,784 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6587305a
13:58:55,784 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@abbe000
13:58:55,784 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f81621c
13:58:55,785 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5b9499fe
13:58:55,785 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@74d6736
13:58:55,785 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52a33c3f
13:58:56,219  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:58:56,263  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:58:58,093  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:58:54 PDT 2015]; root of context hierarchy
13:58:58,141  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:58:54 PDT 2015]; root of context hierarchy
13:58:58,275  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 13:58:54 PDT 2015]; root of context hierarchy
13:58:58,370  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3828 ms
14:00:32,959 ERROR GenericExceptionMapper:21 - HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/sections/
com.sun.jersey.api.NotFoundException: HTTP 404 Not Found for uri: http://localhost:8888/courseregistration/sections/
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1543)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
14:01:07,478  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:01:07,562  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:01:07 PDT 2015]; root of context hierarchy
14:01:07,599  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:01:08,233  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:01:08,235  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:01:08,400  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:01:08,506  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:01:08,571  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:01:08,669  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:01:08,964  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:01:08,969  INFO Environment:213 - HHH000206: hibernate.properties not found
14:01:08,971  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:01:09,056  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:01:09,141 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
14:01:09,141 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f6d3a81
14:01:09,141 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f6d3a81
14:01:09,143 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@341889a1
14:01:09,144 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@feab3ae
14:01:09,145 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@11ad327f
14:01:09,146 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
14:01:09,147 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@52b6561b
14:01:09,147 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52b6561b
14:01:09,149 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1f602930
14:01:09,149 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1f602930
14:01:09,149 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f602930
14:01:09,151 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
14:01:09,151 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@23dda7a3
14:01:09,151 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@23dda7a3
14:01:09,153 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6277a496
14:01:09,153 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6277a496
14:01:09,153 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6277a496
14:01:09,154 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
14:01:09,155 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6a6e410c
14:01:09,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6a6e410c
14:01:09,157 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
14:01:09,157 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ac47f14
14:01:09,158 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ac47f14
14:01:09,159 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
14:01:09,160 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@13e5b262
14:01:09,160 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@13e5b262
14:01:09,163 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4806fbf7
14:01:09,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4806fbf7
14:01:09,165 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5923210
14:01:09,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5923210
14:01:09,166 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@78e4fa1
14:01:09,166 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@78e4fa1
14:01:09,168 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6258f9d1
14:01:09,169 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@694c0ed1
14:01:09,170 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a3404fa
14:01:09,171 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a3404fa
14:01:09,173 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1fa24e7
14:01:09,173 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fa24e7
14:01:09,176 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1df2e767
14:01:09,176 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1df2e767
14:01:09,178 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@407d2a01
14:01:09,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@407d2a01
14:01:09,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@407d2a01
14:01:09,182 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3881b884
14:01:09,184 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@29ce33e9
14:01:09,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@29ce33e9
14:01:09,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@29ce33e9
14:01:09,185 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c0d7099
14:01:09,187 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@404566e7
14:01:09,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@404566e7
14:01:09,188 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@1e9f48d4
14:01:09,189 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1e9f48d4
14:01:09,190 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dfab167
14:01:09,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dfab167
14:01:09,191 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@22a22f1
14:01:09,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@22a22f1
14:01:09,195 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fb752f
14:01:09,195 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fb752f
14:01:09,196 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2e667e95
14:01:09,197 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@10abd94f
14:01:09,197 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10abd94f
14:01:09,197 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@10abd94f
14:01:09,198 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4d745ac6
14:01:09,199 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4d745ac6
14:01:09,199 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4d745ac6
14:01:09,200 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4faaff61
14:01:09,201 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6560f387
14:01:09,202 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6560f387
14:01:09,202 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6560f387
14:01:09,203 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6b6e2c83
14:01:09,203 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6b6e2c83
14:01:09,204 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6b6e2c83
14:01:09,205 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4f72078d
14:01:09,205 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@62fbefad
14:01:09,211 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5f1c406e
14:01:09,211 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f1c406e
14:01:09,212 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@362e709e
14:01:09,216 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3bc33ad9
14:01:09,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bc33ad9
14:01:09,219 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5354bfce
14:01:09,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5354bfce
14:01:09,220 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4220468
14:01:09,220 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ba815ee
14:01:09,222 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@198524ec
14:01:09,225 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@33478a2f
14:01:09,226 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@33478a2f
14:01:09,226 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d43f205
14:01:09,226 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2da0770
14:01:09,227 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3efd3302
14:01:09,227 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@531292ed
14:01:09,227 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41538150
14:01:09,227 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1360ef8d
14:01:09,228 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44d2bbc0
14:01:09,228 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@310cc4d
14:01:09,689  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:01:09,733  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:01:12,690  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:01:07 PDT 2015]; root of context hierarchy
14:01:12,747  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:01:07 PDT 2015]; root of context hierarchy
14:01:12,891  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:01:07 PDT 2015]; root of context hierarchy
14:01:12,997  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5517 ms
14:01:28,964 ERROR GenericExceptionMapper:21 - Unexpected character ('Â' (code 194)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@13070a28[c=1518,s=STREAM]; line: 2, column: 2]
org.codehaus.jackson.JsonParseException: Unexpected character ('Â' (code 194)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@13070a28[c=1518,s=STREAM]; line: 2, column: 2]
	at org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1432)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:385)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:306)
	at org.codehaus.jackson.impl.Utf8StreamParser._handleUnusualFieldName(Utf8StreamParser.java:1531)
	at org.codehaus.jackson.impl.Utf8StreamParser._parseFieldName(Utf8StreamParser.java:1221)
	at org.codehaus.jackson.impl.Utf8StreamParser.nextToken(Utf8StreamParser.java:489)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:579)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
14:04:03,101 ERROR GenericExceptionMapper:21 - Unexpected character ('Â' (code 194)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@13070a28[c=1518,s=STREAM]; line: 2, column: 2]
org.codehaus.jackson.JsonParseException: Unexpected character ('Â' (code 194)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@13070a28[c=1518,s=STREAM]; line: 2, column: 2]
	at org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1432)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:385)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:306)
	at org.codehaus.jackson.impl.Utf8StreamParser._handleUnusualFieldName(Utf8StreamParser.java:1531)
	at org.codehaus.jackson.impl.Utf8StreamParser._parseFieldName(Utf8StreamParser.java:1221)
	at org.codehaus.jackson.impl.Utf8StreamParser.nextToken(Utf8StreamParser.java:489)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:579)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
14:12:36,711  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 14:01:07 PDT 2015]; root of context hierarchy
14:12:36,741  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
14:12:39,096  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:12:39,191  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:12:39 PDT 2015]; root of context hierarchy
14:12:39,243  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:12:39,857 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.parsing.BeanDefinitionParsingException: Configuration problem: Unable to locate Spring NamespaceHandler for XML schema namespace [http://www.springframework.org/schema/security]
Offending resource: ServletContext resource [/WEB-INF/applicationContext.xml]

	at org.springframework.beans.factory.parsing.FailFastProblemReporter.error(FailFastProblemReporter.java:70)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:85)
	at org.springframework.beans.factory.parsing.ReaderContext.error(ReaderContext.java:80)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.error(BeanDefinitionParserDelegate.java:301)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1408)
	at org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:1401)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:168)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:138)
	at org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:94)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:508)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:392)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:605)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:509)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
14:20:17,577  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:20:17,652  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:20:17 PDT 2015]; root of context hierarchy
14:20:17,683  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:20:18,008  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
14:20:18,012  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
14:20:18,046  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
14:20:18,061  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
14:20:18,224  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:20:18,225  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:20:18,356  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:20:18,459  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:20:18,503  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:20:18,530  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:20:18,616  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:20:18,618  INFO Environment:213 - HHH000206: hibernate.properties not found
14:20:18,620  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:20:18,690  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:20:18,781 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:18,781 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:18,784 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:18,786 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2932721e
14:20:18,787 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3ec52163
14:20:18,788 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6334c0d8
14:20:18,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2318651f
14:20:18,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2318651f
14:20:18,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2318651f
14:20:18,792 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3e3a07ab
14:20:18,792 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3e3a07ab
14:20:18,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e3a07ab
14:20:18,794 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@67cd193d
14:20:18,794 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@67cd193d
14:20:18,795 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67cd193d
14:20:18,796 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3c5cb013
14:20:18,797 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3c5cb013
14:20:18,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c5cb013
14:20:18,799 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13fad0c7
14:20:18,799 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13fad0c7
14:20:18,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13fad0c7
14:20:18,801 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@224e7aa5
14:20:18,801 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@224e7aa5
14:20:18,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@224e7aa5
14:20:18,803 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7621c3f7
14:20:18,804 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7621c3f7
14:20:18,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7621c3f7
14:20:18,807 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@508abc74
14:20:18,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@508abc74
14:20:18,809 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@33d2f9d3
14:20:18,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@33d2f9d3
14:20:18,810 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9d2c0ed
14:20:18,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9d2c0ed
14:20:18,811 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cf6ba1c
14:20:18,812 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7712df76
14:20:18,814 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36017835
14:20:18,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36017835
14:20:18,816 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@227c0cf7
14:20:18,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@227c0cf7
14:20:18,818 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@451f3f66
14:20:18,819 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@451f3f66
14:20:18,820 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e9a10e9
14:20:18,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e9a10e9
14:20:18,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e9a10e9
14:20:18,823 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a9f7572
14:20:18,825 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@408980aa
14:20:18,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@408980aa
14:20:18,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@408980aa
14:20:18,827 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17e4beda
14:20:18,828 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6f986031
14:20:18,828 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f986031
14:20:18,830 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@ef59aee
14:20:18,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ef59aee
14:20:18,831 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@402d76c7
14:20:18,832 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@402d76c7
14:20:18,833 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@62a6a47e
14:20:18,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62a6a47e
14:20:18,835 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56017274
14:20:18,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56017274
14:20:18,836 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11d0bff5
14:20:18,838 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@be9bf2e
14:20:18,839 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@be9bf2e
14:20:18,839 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@be9bf2e
14:20:18,840 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:18,841 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:18,841 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:18,842 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@33a58fcb
14:20:18,843 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d093067
14:20:18,844 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d093067
14:20:18,844 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d093067
14:20:18,846 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:18,846 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:18,846 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:18,847 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5776a9f8
14:20:18,849 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2c750b69
14:20:18,853 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@202fd4c4
14:20:18,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@202fd4c4
14:20:18,854 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@674d2b8b
14:20:18,858 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@498f1f63
14:20:18,858 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@498f1f63
14:20:18,862 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@121c1a08
14:20:18,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@121c1a08
14:20:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61cff1e4
14:20:18,863 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11a29c0
14:20:18,865 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@47800bd7
14:20:18,869 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@703947bd
14:20:18,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@703947bd
14:20:18,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5183131d
14:20:18,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b3da23f
14:20:18,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69c263f8
14:20:18,871 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5058fefb
14:20:18,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@198a0416
14:20:18,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f207142
14:20:18,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65871cfd
14:20:18,872 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@723f8990
14:20:19,380  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:20:19,411  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:20:21,233  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:17 PDT 2015]; root of context hierarchy
14:20:21,282  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:17 PDT 2015]; root of context hierarchy
14:20:21,600  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4fe91eed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@329cef32, org.springframework.security.web.header.HeaderWriterFilter@5f171392, org.springframework.security.web.csrf.CsrfFilter@655295bd, org.courseregistration.auth.CustomRestSecurityFilter@62cbe18c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@377b7798, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50177966, org.springframework.security.web.access.ExceptionTranslationFilter@2199e1a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c63b39a]
14:20:21,691  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:17 PDT 2015]; root of context hierarchy
14:20:21,804  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4224 ms
14:20:25,391  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 14:12:39 PDT 2015]; root of context hierarchy
14:20:25,399  WARN XmlWebApplicationContext:972 - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: Root WebApplicationContext: startup date [Tue Oct 27 14:12:39 PDT 2015]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:414)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:969)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:928)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:583)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:116)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextDestroyed(ContextHandler.java:843)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextDestroyed(ServletContextHandler.java:543)
	at org.eclipse.jetty.server.handler.ContextHandler.stopContext(ContextHandler.java:824)
	at org.eclipse.jetty.servlet.ServletContextHandler.stopContext(ServletContextHandler.java:353)
	at org.eclipse.jetty.webapp.WebAppContext.stopWebapp(WebAppContext.java:1386)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.stopWebapp(JettyWebAppContext.java:332)
	at org.eclipse.jetty.webapp.WebAppContext.stopContext(WebAppContext.java:1350)
	at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:872)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:269)
	at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:542)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStop(JettyWebAppContext.java:429)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:530)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
14:20:45,306  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:20:45,403  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:20:45 PDT 2015]; root of context hierarchy
14:20:45,437  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:20:45,932  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
14:20:45,936  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
14:20:45,985  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
14:20:46,005  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
14:20:46,177  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:20:46,179  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:20:46,295  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:20:46,392  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:20:46,440  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:20:46,479  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:20:46,564  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:20:46,568  INFO Environment:213 - HHH000206: hibernate.properties not found
14:20:46,570  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:20:46,634  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:20:46,729 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:46,730 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:46,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15a591d9
14:20:46,732 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2932721e
14:20:46,733 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3ec52163
14:20:46,734 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6334c0d8
14:20:46,736 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2318651f
14:20:46,736 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2318651f
14:20:46,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2318651f
14:20:46,738 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3e3a07ab
14:20:46,738 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3e3a07ab
14:20:46,738 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3e3a07ab
14:20:46,740 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@67cd193d
14:20:46,740 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@67cd193d
14:20:46,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67cd193d
14:20:46,742 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3c5cb013
14:20:46,742 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3c5cb013
14:20:46,743 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c5cb013
14:20:46,745 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13fad0c7
14:20:46,745 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13fad0c7
14:20:46,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13fad0c7
14:20:46,747 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@224e7aa5
14:20:46,747 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@224e7aa5
14:20:46,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@224e7aa5
14:20:46,749 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7621c3f7
14:20:46,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7621c3f7
14:20:46,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7621c3f7
14:20:46,753 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@508abc74
14:20:46,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@508abc74
14:20:46,755 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@33d2f9d3
14:20:46,755 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@33d2f9d3
14:20:46,756 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@9d2c0ed
14:20:46,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@9d2c0ed
14:20:46,758 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5cf6ba1c
14:20:46,759 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7712df76
14:20:46,760 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@36017835
14:20:46,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@36017835
14:20:46,763 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@227c0cf7
14:20:46,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@227c0cf7
14:20:46,765 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@451f3f66
14:20:46,766 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@451f3f66
14:20:46,767 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e9a10e9
14:20:46,768 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e9a10e9
14:20:46,768 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e9a10e9
14:20:46,770 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2a9f7572
14:20:46,771 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@408980aa
14:20:46,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@408980aa
14:20:46,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@408980aa
14:20:46,772 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17e4beda
14:20:46,774 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6f986031
14:20:46,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6f986031
14:20:46,775 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@ef59aee
14:20:46,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ef59aee
14:20:46,776 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@402d76c7
14:20:46,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@402d76c7
14:20:46,778 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@62a6a47e
14:20:46,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@62a6a47e
14:20:46,780 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@56017274
14:20:46,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@56017274
14:20:46,782 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@11d0bff5
14:20:46,783 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@be9bf2e
14:20:46,784 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@be9bf2e
14:20:46,784 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@be9bf2e
14:20:46,785 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:46,786 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:46,786 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@318a81a0
14:20:46,787 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@33a58fcb
14:20:46,789 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2d093067
14:20:46,789 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d093067
14:20:46,790 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2d093067
14:20:46,791 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:46,791 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:46,792 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4e93d23e
14:20:46,793 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5776a9f8
14:20:46,794 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2c750b69
14:20:46,797 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@202fd4c4
14:20:46,798 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@202fd4c4
14:20:46,798 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@674d2b8b
14:20:46,801 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@498f1f63
14:20:46,801 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@498f1f63
14:20:46,804 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@121c1a08
14:20:46,805 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@121c1a08
14:20:46,805 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61cff1e4
14:20:46,806 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11a29c0
14:20:46,808 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@47800bd7
14:20:46,812 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@703947bd
14:20:46,813 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@703947bd
14:20:46,815 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5183131d
14:20:46,817 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b3da23f
14:20:46,817 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@69c263f8
14:20:46,817 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5058fefb
14:20:46,818 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@198a0416
14:20:46,818 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f207142
14:20:46,819 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65871cfd
14:20:46,819 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@723f8990
14:20:47,281  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:20:47,328  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:20:49,865  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:45 PDT 2015]; root of context hierarchy
14:20:49,916  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:45 PDT 2015]; root of context hierarchy
14:20:50,195  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4fe91eed, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@329cef32, org.springframework.security.web.header.HeaderWriterFilter@5f171392, org.springframework.security.web.csrf.CsrfFilter@655295bd, org.courseregistration.auth.CustomRestSecurityFilter@62cbe18c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@377b7798, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50177966, org.springframework.security.web.access.ExceptionTranslationFilter@2199e1a4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c63b39a]
14:20:50,274  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:20:45 PDT 2015]; root of context hierarchy
14:20:50,406  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5096 ms
14:22:14,386 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@524b1938
14:22:14,389  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
14:22:14,435 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
14:22:14,452 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

14:22:14,452 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:22:14,499 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
14:22:14,560 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
14:22:14,563 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:22:14,564 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@9d2c0ed
14:22:14,566 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
14:22:14,567 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
14:22:14,568 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
14:22:14,577 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
14:22:14,586 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
14:22:14,587 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
14:22:14,590 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

14:22:14,591 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:22:14,602 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
14:22:14,603 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
14:22:14,604 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:22:14,642 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
14:22:14,726 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,753 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,756 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,758 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,760 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,762 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,764 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,766 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,768 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,770 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,772 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:22:14,775 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,795 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,799 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,801 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,803 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,824 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,827 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,829 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,831 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,834 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,836 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
