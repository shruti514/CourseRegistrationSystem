18:44:42,242  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:44:42,243  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:44:42,305  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:44:42,345  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:44:42,368  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:44:42,385  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:44:42,431  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:44:42,432  INFO Environment:213 - HHH000206: hibernate.properties not found
18:44:42,433  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:44:42,458  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,499 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@661b9244
18:44:42,499 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48e432f4
18:44:42,500 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@785e0135
18:44:42,500 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6f31b252
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6f31b252
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f31b252
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2fe97741
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2fe97741
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2fe97741
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7dcd22
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7dcd22
18:44:42,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7dcd22
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59341733
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59341733
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59341733
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@378a611d
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@378a611d
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4835b74
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4835b74
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@64480389
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@64480389
18:44:42,510 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54cedd43
18:44:42,510 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20a6b0e1
18:44:42,511 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@767f1496
18:44:42,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@767f1496
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1a676ff5
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a676ff5
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2e7bd5aa
18:44:42,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7bd5aa
18:44:42,513 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@655e4a1a
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,516 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@560b0a7c
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@797ebaf8
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@797ebaf8
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2bc3e002
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bc3e002
18:44:42,518 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@538882ef
18:44:42,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@538882ef
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5ce5aeb1
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ce5aeb1
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70111e0e
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70111e0e
18:44:42,520 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42621661
18:44:42,520 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@77ae4fae
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,524 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7dbb229
18:44:42,524 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@478a9045
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@22d513de
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d513de
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63c2f16a
18:44:42,529 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5f1be939
18:44:42,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f1be939
18:44:42,530 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@70003a14
18:44:42,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70003a14
18:44:42,531 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e338cbb
18:44:42,531 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d015a0b
18:44:42,532 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@73c7d42c
18:44:42,533 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@55041d96
18:44:42,533 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55041d96
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@396b6e3a
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c762c2c
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@585d19ea
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@183026d0
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a488152
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@722d57b
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37800e3c
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e1fa8ba
18:44:42,719  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:44:42,740  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:44:43,668  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,690  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,837  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@1fc17859, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@647f394d, org.springframework.security.web.header.HeaderWriterFilter@3df52edf, org.springframework.security.web.csrf.CsrfFilter@5bae73cd, org.courseregistration.auth.CustomRestSecurityFilter@4fb9db51, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@521126ba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@468669f1, org.springframework.security.web.access.ExceptionTranslationFilter@6e1e5af7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f7c6736]
18:44:43,879  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,935  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1998 ms
18:44:56,909  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:56,918  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:44:57,734  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:44:57,776  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:57,797  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:44:57,920  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:44:57,922  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:44:57,939  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:44:57,947  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:44:58,033  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:44:58,033  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:44:58,105  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:44:58,152  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:44:58,174  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:44:58,191  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:44:58,237  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:44:58,238  INFO Environment:213 - HHH000206: hibernate.properties not found
18:44:58,239  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:44:58,265  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ba7bf4d
18:44:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@21cb3d59
18:44:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2d4b930e
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7a6ad674
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7a6ad674
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a6ad674
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@270baef9
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@270baef9
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@270baef9
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e568c3e
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e568c3e
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dbc659c
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dbc659c
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@681a99c1
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@681a99c1
18:44:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4001e89f
18:44:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38be6661
18:44:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@20e55353
18:44:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@20e55353
18:44:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@288adbe6
18:44:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@288adbe6
18:44:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6006be12
18:44:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6006be12
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@71a9ced4
18:44:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a667baa
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@75557073
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@75557073
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@45399b73
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45399b73
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@841c9e3
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@841c9e3
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@29d0322b
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29d0322b
18:44:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42f50c4d
18:44:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42f50c4d
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e39f038
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1a648de
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@327ab271
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@327ab271
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@327ab271
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5f3e6ac5
18:44:58,333 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6cf2bbb9
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@735df6d6
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@735df6d6
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1be342ff
18:44:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@70338fea
18:44:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70338fea
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2e407b4a
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e407b4a
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b992601
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a62162f
18:44:58,340 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e9ac36a
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@39205727
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39205727
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b31a36b
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@935245
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@eb26736
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a10e947
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c8c2195
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6617553b
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b811518
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@369681fe
18:44:58,513  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:44:58,532  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:44:59,770  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,793  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,907  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@2ade67b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@300f142, org.springframework.security.web.header.HeaderWriterFilter@57086bad, org.springframework.security.web.csrf.CsrfFilter@63b6ad74, org.courseregistration.auth.CustomRestSecurityFilter@3a8cb555, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e02d9a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a4388c9, org.springframework.security.web.access.ExceptionTranslationFilter@7cc85df8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23b16929]
18:44:59,941  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,985  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2250 ms
18:45:16,930  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:45:16,941  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:45:17,719  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:45:17,759  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:17,780  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:45:17,897  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:45:17,899  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:45:17,915  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:45:17,925  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:45:18,004  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:45:18,004  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:45:18,067  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:45:18,106  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:45:18,127  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:45:18,143  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:45:18,184  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:45:18,186  INFO Environment:213 - HHH000206: hibernate.properties not found
18:45:18,186  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:45:18,210  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:45:18,248 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5410055b
18:45:18,250 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18c15e3e
18:45:18,250 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@175ea3f3
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2250a567
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2250a567
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2250a567
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7728bb39
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7728bb39
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7728bb39
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,257 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@406651e1
18:45:18,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@406651e1
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@759f7675
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@759f7675
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@58d04679
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@58d04679
18:45:18,259 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@381902a3
18:45:18,259 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@96b2282
18:45:18,260 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@28af0cc7
18:45:18,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28af0cc7
18:45:18,261 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@46bc8568
18:45:18,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46bc8568
18:45:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4855d10b
18:45:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4855d10b
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@648ff485
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@648ff485
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@648ff485
18:45:18,264 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16297d67
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6be4dc24
18:45:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3d52b553
18:45:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3d52b553
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7b6043ce
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b6043ce
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dce02d8
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dce02d8
18:45:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4dc2a9a3
18:45:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4dc2a9a3
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68f34960
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68f34960
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@298581ba
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@26c52480
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4a917e39
18:45:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7724720f
18:45:18,275 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3d61956e
18:45:18,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d61956e
18:45:18,276 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da310e4
18:45:18,277 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@df6b2b5
18:45:18,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@df6b2b5
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@500b8f9c
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@500b8f9c
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1883c0e7
18:45:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9907fa0
18:45:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4deaef43
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@589aaf0a
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@589aaf0a
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@532d10cd
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ec2175d
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53c7dc15
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68aab765
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53ba79c5
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d0cf410
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70c6b4d0
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d6a3432
18:45:18,449  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:45:18,468  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:45:19,353  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,376  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,498  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5d1a5cd4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@591872ac, org.springframework.security.web.header.HeaderWriterFilter@1bba624c, org.springframework.security.web.csrf.CsrfFilter@2c62409b, org.courseregistration.auth.CustomRestSecurityFilter@2311453f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3906cee3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7166638d, org.springframework.security.web.access.ExceptionTranslationFilter@4f3e83a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@662f1fc7]
18:45:19,536  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,580  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1860 ms
18:48:42,505  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:48:42,514  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:48:43,238  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:48:43,278  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:43,297  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:48:43,412  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:48:43,414  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:48:43,432  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:48:43,441  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:48:43,525  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:48:43,525  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:48:43,589  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:48:43,629  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:48:43,649  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:48:43,665  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:48:43,709  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:48:43,710  INFO Environment:213 - HHH000206: hibernate.properties not found
18:48:43,711  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:48:43,735  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f486c59
18:48:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6515144b
18:48:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@25f301
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@22962836
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@22962836
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22962836
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19010601
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19010601
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19010601
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@165ebdde
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@165ebdde
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165ebdde
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52568fc
18:48:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52568fc
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@679e9e2e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@679e9e2e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6770283e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6770283e
18:48:43,784 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1bd7ae81
18:48:43,784 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62c21b01
18:48:43,785 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3669f5ff
18:48:43,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3669f5ff
18:48:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@45dcc564
18:48:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45dcc564
18:48:43,787 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@305eb166
18:48:43,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@305eb166
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@13349a2d
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13349a2d
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13349a2d
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54ba2ea0
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f274d9f
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@56534f7
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56534f7
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2f725b20
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f725b20
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e6fc689
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e6fc689
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@565f13d0
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@565f13d0
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48f79fee
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48f79fee
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17b00103
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,796 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@ed420fc
18:48:43,796 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,798 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7c62850d
18:48:43,798 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4cc0d92f
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4a8225c4
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a8225c4
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1cf44993
18:48:43,803 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@691ffbe7
18:48:43,803 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@691ffbe7
18:48:43,804 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@635b73ca
18:48:43,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@635b73ca
18:48:43,805 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c6e1631
18:48:43,805 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@210e3295
18:48:43,806 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@525e3811
18:48:43,807 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3e5a994b
18:48:43,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e5a994b
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ddf532f
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17250d1e
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@318b47a9
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35beb18c
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@327fca3f
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d0d7c93
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66d0c494
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26a22b13
18:48:43,974  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:48:43,993  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:48:44,900  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:44,923  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:45,041  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@48bfe06c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62850f07, org.springframework.security.web.header.HeaderWriterFilter@6ae515b7, org.springframework.security.web.csrf.CsrfFilter@5e90e11f, org.courseregistration.auth.CustomRestSecurityFilter@691bd621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@232c1132, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61a6e04d, org.springframework.security.web.access.ExceptionTranslationFilter@38e76d7f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ffa0e9c]
18:48:45,077  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:45,119  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1880 ms
18:49:14,059  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:49:14,067  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:14,917  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:14,959  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:14,979  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:15,101  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:15,103  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:15,121  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:15,130  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:15,466  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:15,466  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:15,538  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:15,581  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:15,602  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:15,619  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:15,669  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:15,670  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:15,671  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:15,698  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,742 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4543bca3
18:49:15,742 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@575f299a
18:49:15,743 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27bf5891
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@319d0586
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@319d0586
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@319d0586
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6f67c25c
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6f67c25c
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f67c25c
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@284759a5
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@284759a5
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@284759a5
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25415019
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25415019
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8909a28
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8909a28
18:49:15,752 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@24ec914b
18:49:15,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24ec914b
18:49:15,753 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ce2a79c
18:49:15,753 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@39725a0f
18:49:15,754 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@34890286
18:49:15,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34890286
18:49:15,755 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5df7e917
18:49:15,755 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5df7e917
18:49:15,756 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@27611f12
18:49:15,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27611f12
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@295fdd24
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@295fdd24
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@295fdd24
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d2e7c00
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@26d50cf
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3a596c8d
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a596c8d
18:49:15,760 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f2faf3b
18:49:15,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f2faf3b
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f65bfc8
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f65bfc8
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@55317cc6
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55317cc6
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbfa0eb
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbfa0eb
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53af8c90
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@521bca43
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@521bca43
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@521bca43
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@dfbcc9f
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@67de126a
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7cc8a605
18:49:15,769 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2089e222
18:49:15,769 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2089e222
18:49:15,770 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77c9070e
18:49:15,771 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6481141b
18:49:15,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6481141b
18:49:15,773 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@13a48c95
18:49:15,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13a48c95
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67348c8e
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41c30c35
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7d91ff8a
18:49:15,776 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@783acd67
18:49:15,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@783acd67
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41405cfc
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbff046
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45d0e93c
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a33ec
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45de386b
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55f3dd56
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17a857dd
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@405aa397
18:49:15,960  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:15,984  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:16,886  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:16,907  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:17,025  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@362696ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a6744, org.springframework.security.web.header.HeaderWriterFilter@294b79f9, org.springframework.security.web.csrf.CsrfFilter@773b277d, org.courseregistration.auth.CustomRestSecurityFilter@752a44c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26096d6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54ff4ce6, org.springframework.security.web.access.ExceptionTranslationFilter@7a5199cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5dfa9644]
18:49:17,060  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:17,106  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2188 ms
18:49:40,045  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:40,054  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:40,663  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:40,707  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:40,729  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:40,843  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:40,845  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:40,862  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:40,872  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:40,958  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:40,958  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:41,026  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:41,067  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:41,089  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:41,107  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:41,156  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:41,157  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:41,158  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:41,185  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,229 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7eba94d4
18:49:41,230 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ede1c4d
18:49:41,230 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@78738396
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@443a0403
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@443a0403
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@443a0403
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3cfa9482
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3cfa9482
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3cfa9482
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,238 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6eedbbb8
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6eedbbb8
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@283344ec
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@283344ec
18:49:41,240 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7b809573
18:49:41,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7b809573
18:49:41,241 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1392ddc3
18:49:41,241 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4afb857f
18:49:41,242 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3b171162
18:49:41,242 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b171162
18:49:41,243 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@497b0f7
18:49:41,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497b0f7
18:49:41,244 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4c4d3861
18:49:41,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c4d3861
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,246 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53a05e25
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15a586f6
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3fe920f0
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fe920f0
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6befafd2
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6befafd2
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@19eaacd9
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19eaacd9
18:49:41,250 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2206018c
18:49:41,250 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2206018c
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1098b1e9
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1098b1e9
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b0c1601
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7753e27d
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6a8fba8a
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5dad3305
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3cc27345
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3cc27345
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36a0e466
18:49:41,260 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@16f54088
18:49:41,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16f54088
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@464a97d6
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@464a97d6
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a5f0288
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6369a9f6
18:49:41,263 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7cb1538e
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@29d1179a
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29d1179a
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79afb1ef
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58e30487
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b7a91d8
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39e24113
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d46bf09
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d41431a
18:49:41,266 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2caf93b
18:49:41,266 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@298bdaa8
18:49:41,448  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:41,470  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:42,527  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,557  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,711  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3facac6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a792003, org.springframework.security.web.header.HeaderWriterFilter@3043a1f9, org.springframework.security.web.csrf.CsrfFilter@1fdad6e, org.courseregistration.auth.CustomRestSecurityFilter@5b688ec7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78b2d491, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5553fe17, org.springframework.security.web.access.ExceptionTranslationFilter@39a9af0e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2628104a]
18:49:42,753  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,810  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2146 ms
18:49:52,471  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:52,481  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:57,491  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:57,543  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:57,564  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:57,749  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:57,751  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:57,771  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:57,782  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:57,880  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:57,881  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:57,949  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:58,089  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:58,122  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:58,140  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:58,190  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:58,191  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:58,192  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:58,221  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:58,295 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,296 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,297 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:49:58,297 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:49:58,298 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,300 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,301 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,301 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:49:58,304 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:49:58,305 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:49:58,305 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:49:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:49:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:49:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:49:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:49:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:49:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:49:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:49:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:49:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:49:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:49:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:49:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:49:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:49:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:49:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:49:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:49:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:49:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:49:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:49:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:49:58,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:49:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:49:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:49:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:49:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:49:58,338 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:49:58,338 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:49:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:49:58,602  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:58,626  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:59,621  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,644  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,780  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:49:59,819  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,870  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2377 ms
18:50:10,128 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@172ed062
18:50:10,128  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:50:10,153 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:50:10,160 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:50:10,161 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,180 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:10,193 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:50:10,193 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:50:10,196 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:50:10,197 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:50:10,198 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:50:10,199 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:10,200 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:50:10,205 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:50:10,205 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:10,206 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:50:10,207 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,213 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:50:10,213 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:10,213 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,233 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:10,264 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:50:10,275 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:50:10,317 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:50:10,319 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:50:10,319 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,320 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:10,320 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:50:10,320 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:50:10,321 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:50:10,321 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:50:10,322 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:50:10,323 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:50:10,323 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:50:10,323 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:50:10,323 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:50:10,324 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:50:10,324 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:10,324 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:50:10,324 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:50:10,325 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:50:10,325 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:50:10,325 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:50:10,326 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:10,326 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:50:10,326 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,327 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:50:10,327 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:50:10,327 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,327 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:50:10,333 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,334 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,336 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,337 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,339 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,340 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,341 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,343 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:38,385 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:38,390 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:50:38,391 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:50:38,412 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.code=:param0 )
18:50:38,416 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'code'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

18:50:38,417 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,417 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:38,418 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
18:50:38,419 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,419 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:50:38,419 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
18:50:38,420 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
18:50:38,420 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:50:38,420 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
18:50:38,421 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

18:50:38,421 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,421 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
18:50:38,422 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
18:50:38,422 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
18:50:38,422 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
18:50:38,422 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
18:50:38,423 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

18:50:38,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,423 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@27f3f512
18:50:38,424 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
18:50:38,425 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
18:50:38,425 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:50:38,425 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
18:50:38,425 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:38,426 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( = ( course1_.code course1_.course_id code ) ? ) ) ) )
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
18:50:38,427 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:38,427 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'code' {originalText=code}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f116ca2}

18:50:38,427 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,427 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.code=:param0 )
18:50:38,428 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and course1_.code=?
18:50:38,428 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,434 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and course1_.code=?
18:50:38,440 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:38,441 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:38,442 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:51:32,350 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:51:32,355 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:51:32,356 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:51:32,362 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
18:51:32,372 ERROR GenericExceptionMapper:21 - Cannot determine link for org.courseregistration.model.Section! No EntityLinks instance found supporting the domain type!
java.lang.IllegalArgumentException: Cannot determine link for org.courseregistration.model.Section! No EntityLinks instance found supporting the domain type!
	at org.springframework.hateoas.core.DelegatingEntityLinks.getPluginFor(DelegatingEntityLinks.java:102)
	at org.springframework.hateoas.core.DelegatingEntityLinks.linkToSingleResource(DelegatingEntityLinks.java:78)
	at org.courseregistration.controller.SectionController.findSectionById(SectionController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:52:21,971  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:52:21,977  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:52:22,845  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:52:22,895  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:22,917  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:52:23,061  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:52:23,063  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:52:23,081  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:52:23,091  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:52:23,182  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:52:23,183  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:52:23,252  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:52:23,300  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:52:23,324  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:52:23,345  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:52:23,394  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:52:23,395  INFO Environment:213 - HHH000206: hibernate.properties not found
18:52:23,396  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:52:23,421  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,461 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ab828f9
18:52:23,461 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@625a3633
18:52:23,462 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@432a95f4
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@228d63ef
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@228d63ef
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@228d63ef
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cb735f3
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cb735f3
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5cb735f3
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4856487f
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4856487f
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4856487f
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2658905a
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2658905a
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2658905a
18:52:23,469 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6dbdc774
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6dbdc774
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3423f8ba
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3423f8ba
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2ee40f40
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ee40f40
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9029c
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ba71b57
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@66e473c3
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@66e473c3
18:52:23,473 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4f5542c2
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f5542c2
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@66234dce
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66234dce
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@737559fa
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@737559fa
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@737559fa
18:52:23,476 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40a0f327
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@154b5aed
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@236351cd
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@236351cd
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@78122a84
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78122a84
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@164ef9f9
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@164ef9f9
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4b4b8031
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b4b8031
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54964f2f
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54964f2f
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ab786ce
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@117caf70
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@117caf70
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@117caf70
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4449510b
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6828d1a4
18:52:23,485 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1a257664
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3b8b3975
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b8b3975
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15a95ae0
18:52:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6d75be39
18:52:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d75be39
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5182beb5
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5182beb5
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4876a758
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@451474a8
18:52:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2b483bb7
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@13d1c192
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13d1c192
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@131d24ce
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e5dba6e
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d722fb
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@572c4d1f
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d6d2860
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e006969
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72fc4aa8
18:52:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478da55d
18:52:23,674  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:52:23,696  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:52:24,841  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:24,862  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:24,982  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5235f3ff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d1c3c55, org.springframework.security.web.header.HeaderWriterFilter@761e7af2, org.springframework.security.web.csrf.CsrfFilter@8c8274, org.courseregistration.auth.CustomRestSecurityFilter@7ddb2391, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@217956eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@243561dc, org.springframework.security.web.access.ExceptionTranslationFilter@40ced80c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@642dbc2f]
18:52:25,015  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:25,058  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2211 ms
18:52:55,994  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:56,003  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:52:56,742  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:52:56,784  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:56,806  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:52:56,929  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:52:56,931  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:52:56,948  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:52:56,961  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:52:57,054  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:52:57,055  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:52:57,122  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:52:57,164  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:52:57,184  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:52:57,553  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:52:57,606  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:52:57,607  INFO Environment:213 - HHH000206: hibernate.properties not found
18:52:57,608  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:52:57,637  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,683 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2030e9b3
18:52:57,683 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ffa119f
18:52:57,684 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@50af8358
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@e24faba
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@e24faba
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e24faba
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@691690c7
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@691690c7
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@691690c7
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2563e1ac
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2563e1ac
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2563e1ac
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3be2e05f
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3be2e05f
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@395a0afa
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@395a0afa
18:52:57,693 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6aac4716
18:52:57,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6aac4716
18:52:57,694 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5195c62b
18:52:57,694 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a6ed5a8
18:52:57,695 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1e9d9023
18:52:57,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e9d9023
18:52:57,696 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@b59e5
18:52:57,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b59e5
18:52:57,697 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@56a9b424
18:52:57,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56a9b424
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,700 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ba5acb4
18:52:57,700 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cd5e410
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@298dd188
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@298dd188
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d291f56
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d291f56
18:52:57,703 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d0d0d56
18:52:57,703 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d0d0d56
18:52:57,704 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2b4e9eb
18:52:57,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b4e9eb
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2035d47a
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2035d47a
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@195e934c
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7b719698
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b719698
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7b719698
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@61d9af54
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@473fb990
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@473fb990
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@473fb990
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@79ccd8b
18:52:57,710 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@23b02a8f
18:52:57,712 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4525cc3f
18:52:57,712 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4525cc3f
18:52:57,713 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bc684eb
18:52:57,715 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@11fde94b
18:52:57,715 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11fde94b
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@65340fb3
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65340fb3
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b6966ec
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c47fbc2
18:52:57,718 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7b952ac1
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@25b2472f
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25b2472f
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@732f7dc3
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4413d7b6
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@460c35d6
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e5643f
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dacc025
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57d81841
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@705d35e9
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5eb76341
18:52:57,916  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:52:57,935  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:52:58,852  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:58,873  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:58,994  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7428834c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1a62d8, org.springframework.security.web.header.HeaderWriterFilter@2eb4de2c, org.springframework.security.web.csrf.CsrfFilter@1cb6d79a, org.courseregistration.auth.CustomRestSecurityFilter@2cb415a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51c5ae4f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59084fe5, org.springframework.security.web.access.ExceptionTranslationFilter@73284959, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f3d5392]
18:52:59,032  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:59,079  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2336 ms
18:54:15,262  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:54:15,272  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:54:20,098  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:54:20,148  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:20,170  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:54:20,349  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:54:20,351  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:54:20,369  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:54:20,379  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:54:20,469  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:54:20,470  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:54:20,539  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:54:20,587  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:54:20,611  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:54:20,628  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:54:20,678  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:54:20,679  INFO Environment:213 - HHH000206: hibernate.properties not found
18:54:20,680  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:54:20,710  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:54:20,787 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:54:20,789 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:54:20,789 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:54:20,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,792 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:54:20,792 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:54:20,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:54:20,793 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:54:20,794 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:54:20,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,798 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:54:20,800 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:54:20,800 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:54:20,801 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:54:20,801 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:54:20,802 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:54:20,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:54:20,803 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:54:20,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:54:20,805 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:54:20,805 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:54:20,808 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:54:20,808 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:54:20,810 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:54:20,810 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:54:20,813 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:54:20,813 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:54:20,814 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,817 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:54:20,820 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:54:20,822 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:54:20,822 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:54:20,823 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:54:20,825 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:54:20,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:54:20,828 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:54:21,121  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:54:21,144  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:54:22,121  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,144  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,279  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:54:22,317  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,369  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2269 ms
18:54:45,265 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f9b8580
18:54:45,265  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:54:45,288 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:54:45,295 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:54:45,295 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,314 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:54:45,327 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:54:45,328 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:54:45,330 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:54:45,331 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:54:45,332 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:54:45,333 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:54:45,334 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:54:45,339 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:54:45,339 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:54:45,340 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:54:45,340 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,346 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:54:45,346 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:54:45,346 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,366 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:54:45,396 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:54:45,406 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:54:45,448 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
18:57:36,452  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:57:36,460  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:57:37,268  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:57:37,312  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:37,337  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:57:37,478  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:57:37,480  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:57:37,499  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:57:37,508  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:57:37,594  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:57:37,595  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:57:37,655  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:57:37,697  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:57:37,717  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:57:37,736  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:57:37,785  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:57:37,786  INFO Environment:213 - HHH000206: hibernate.properties not found
18:57:37,787  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:57:37,814  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:57:37,857 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,857 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,858 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,858 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@28c0ca9b
18:57:37,859 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@471bfae9
18:57:37,859 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56ea94a9
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@112d1321
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@112d1321
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112d1321
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@179b75bc
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@179b75bc
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@179b75bc
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4e13345f
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4e13345f
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e13345f
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3bc39b53
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3bc39b53
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3bc39b53
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@562833df
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@562833df
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@562833df
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,867 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2724cb3e
18:57:37,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2724cb3e
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@571dc6cc
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@571dc6cc
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7f8c0ede
18:57:37,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f8c0ede
18:57:37,869 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a8e5b78
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@12c2a0ee
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4be8ee86
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4be8ee86
18:57:37,871 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@dd07c30
18:57:37,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@dd07c30
18:57:37,872 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2afa715b
18:57:37,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2afa715b
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@37932648
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37932648
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37932648
18:57:37,874 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49392a81
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15130335
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@69ef6a2c
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69ef6a2c
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6ba4fbd8
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ba4fbd8
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b11c403
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b11c403
18:57:37,878 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1bde51d6
18:57:37,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bde51d6
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@31146355
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@31146355
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@582fd146
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6569054d
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6569054d
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6569054d
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,882 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1c0b4fd2
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4133024a
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4133024a
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4133024a
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3e74a979
18:57:37,885 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@790dbbec
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6d26484a
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d26484a
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63f9e33b
18:57:37,889 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@614329fd
18:57:37,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@614329fd
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@60f14760
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60f14760
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@bdaccfb
18:57:37,892 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72905b1c
18:57:37,892 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@11d5708e
18:57:37,894 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7e48a198
18:57:37,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e48a198
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75ef767f
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e905d3b
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37f804d3
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2fe1ddb7
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21b30aba
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d06f232
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a2faddd
18:57:37,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b02c74a
18:57:38,067  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:57:38,088  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:57:39,411  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,444  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,614  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@6563cfd7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@364e8ea9, org.springframework.security.web.header.HeaderWriterFilter@784e9e35, org.springframework.security.web.csrf.CsrfFilter@76eca980, org.courseregistration.auth.CustomRestSecurityFilter@d8acdfd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f733123, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43c0a1ce, org.springframework.security.web.access.ExceptionTranslationFilter@5073b09f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@bcd6a49]
18:57:39,650  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,692  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2423 ms
20:17:22,857  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
20:17:22,866  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
20:17:23,576  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:17:23,620  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:17:23 PDT 2015]; root of context hierarchy
20:17:23,640  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:17:23,759  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:17:23,761  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:17:23,780  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:17:23,789  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:17:23,869  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:17:23,870  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:17:23,936  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:17:23,981  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:17:24,187  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:17:24,203  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:17:24,256  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:17:24,257  INFO Environment:213 - HHH000206: hibernate.properties not found
20:17:24,258  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:17:24,283  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2db66860
20:17:24,323 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44cb2cd4
20:17:24,323 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4db7c217
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c513418
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c513418
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c513418
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@600b56ef
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@600b56ef
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@600b56ef
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ee14f37
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ee14f37
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ee14f37
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ff7392
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ff7392
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19ff7392
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@208470cc
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@208470cc
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@208470cc
20:17:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9aa0e94
20:17:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9aa0e94
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6dbc3b4b
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6dbc3b4b
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3615e25a
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3615e25a
20:17:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@207e5c1b
20:17:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2cd362bd
20:17:24,333 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@24aec70
20:17:24,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@24aec70
20:17:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f3f3847
20:17:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f3f3847
20:17:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2b074f1b
20:17:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b074f1b
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ba35e4e
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47d67097
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@10ce2692
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10ce2692
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@a488e35
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a488e35
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e1d45d6
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e1d45d6
20:17:24,340 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@494b4d3d
20:17:24,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@494b4d3d
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@efb260e
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@efb260e
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6af28ee
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@70f2bc4f
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@dea910a
20:17:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4b66d7b
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@ebc8db6
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ebc8db6
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b8c5c34
20:17:24,349 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@68f17362
20:17:24,349 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@68f17362
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@9c48180
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9c48180
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@138cd04d
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a2aa4d5
20:17:24,352 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@43a71742
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5e9d8868
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e9d8868
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a4fc645
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7823c9ac
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24c174b
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33686a0
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37ff156d
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51f7c497
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@336367ad
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d7f4e7
20:17:24,421  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:17:24,429  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:17:24,440  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:17:24,791  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:17:24,799 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:27:15,547  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:27:15,589  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:27:15 PDT 2015]; root of context hierarchy
20:27:15,611  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:27:15,740  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:27:15,741  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:27:15,761  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:27:15,769  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:27:15,852  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:27:15,853  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:27:15,915  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:27:15,957  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:27:15,979  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:27:15,996  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:27:16,041  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:27:16,042  INFO Environment:213 - HHH000206: hibernate.properties not found
20:27:16,043  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:27:16,069  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:27:16,109 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@19fe87af
20:27:16,111 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3982baaf
20:27:16,111 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e2ab7f4
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c0a629a
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c0a629a
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c0a629a
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2e1f485d
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2e1f485d
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e1f485d
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4b46b153
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4b46b153
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b46b153
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51058bf
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51058bf
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51058bf
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@536200d6
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@536200d6
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d3b80a2
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d3b80a2
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2c3c022d
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2c3c022d
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69dddb5c
20:27:16,120 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47dd0001
20:27:16,120 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@405cd4c9
20:27:16,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@405cd4c9
20:27:16,122 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@f96e0ec
20:27:16,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f96e0ec
20:27:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@264f7637
20:27:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@264f7637
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@360c121
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13383be1
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6ec792d6
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ec792d6
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e5aff50
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e5aff50
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@aff8a43
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@aff8a43
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@52ecccce
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52ecccce
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f96bdbd
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f96bdbd
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d5b76a9
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@20cec734
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@20cec734
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@20cec734
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@44a5348f
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4a7d74a9
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3e202815
20:27:16,135 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@cb1f688
20:27:16,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cb1f688
20:27:16,136 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca5c723
20:27:16,137 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2475aa
20:27:16,137 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2475aa
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4692b101
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4692b101
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@677c7768
20:27:16,140 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2aa6d454
20:27:16,140 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a28fe53
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6581dd99
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6581dd99
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f2ba5ff
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74adce96
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5dab231e
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22eec22a
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60289fd5
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aeb2438
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5c5ba8
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2af729db
20:27:16,212  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:27:16,221  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:27:16,232  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:27:16,577  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:27:16,583 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:33:08,160  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:33:08,209  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:33:08 PDT 2015]; root of context hierarchy
20:33:08,231  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:33:08,416  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:33:08,418  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:33:08,440  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:33:08,450  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:33:08,539  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:33:08,540  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:33:08,608  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:33:08,658  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:33:08,680  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:33:08,697  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:33:08,746  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:33:08,748  INFO Environment:213 - HHH000206: hibernate.properties not found
20:33:08,749  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:33:08,777  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:33:08,854 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
20:33:08,856 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
20:33:08,857 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
20:33:08,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,860 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:33:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:33:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,866 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:33:08,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:33:08,867 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
20:33:08,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
20:33:08,868 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
20:33:08,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
20:33:08,869 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
20:33:08,870 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
20:33:08,870 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
20:33:08,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
20:33:08,872 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
20:33:08,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
20:33:08,873 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
20:33:08,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
20:33:08,875 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,877 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
20:33:08,877 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
20:33:08,879 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
20:33:08,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
20:33:08,880 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
20:33:08,880 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,883 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,884 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,884 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,887 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,887 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
20:33:08,888 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
20:33:08,890 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
20:33:08,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
20:33:08,891 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
20:33:08,893 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
20:33:08,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
20:33:08,896 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
20:33:08,897 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
20:33:08,898 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
20:33:09,053  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:33:09,060  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:33:09,072  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:33:09,434  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 64 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 69 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 75 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 93 more
20:33:09,444 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 64 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 69 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 75 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 93 more
20:34:12,483  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:34:12,536  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:12,558  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:34:12,764  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:34:12,766  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:34:12,784  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:34:12,793  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:34:12,881  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:34:12,882  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:34:12,949  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:34:12,999  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:34:13,022  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:34:13,041  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:34:13,092  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:34:13,093  INFO Environment:213 - HHH000206: hibernate.properties not found
20:34:13,094  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:34:13,123  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,198 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
20:34:13,198 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
20:34:13,199 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
20:34:13,204 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:34:13,204 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:34:13,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,209 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:34:13,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
20:34:13,211 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
20:34:13,211 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
20:34:13,212 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
20:34:13,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
20:34:13,214 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
20:34:13,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
20:34:13,215 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
20:34:13,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
20:34:13,218 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
20:34:13,218 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
20:34:13,220 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
20:34:13,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
20:34:13,223 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
20:34:13,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
20:34:13,224 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
20:34:13,229 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,229 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,230 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,230 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
20:34:13,231 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
20:34:13,233 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
20:34:13,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
20:34:13,234 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
20:34:13,236 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
20:34:13,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
20:34:13,239 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
20:34:13,239 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
20:34:13,241 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
20:34:13,241 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
20:34:13,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
20:34:13,535  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:34:13,557  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
20:34:14,543  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,565  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,697  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
20:34:14,736  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,785  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2300 ms
20:34:21,204 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@32f5e427
20:34:21,204  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
20:34:21,227 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
20:34:21,235 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

20:34:21,235 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,254 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
20:34:21,267 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
20:34:21,268 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
20:34:21,270 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
20:34:21,271 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
20:34:21,272 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
20:34:21,273 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
20:34:21,273 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
20:34:21,278 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
20:34:21,278 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
20:34:21,279 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

20:34:21,279 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,285 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
20:34:21,285 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:21,285 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,306 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:21,336 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
20:34:21,347 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
20:34:21,390 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
20:34:34,376 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:34,382 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
20:34:34,383 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
20:34:34,395 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
20:34:34,397 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

20:34:34,397 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,398 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
20:34:34,398 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
20:34:34,399 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
20:34:34,399 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
20:34:34,400 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
20:34:34,401 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
20:34:34,402 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
20:34:34,402 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
20:34:34,402 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
20:34:34,403 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
20:34:34,403 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
20:34:34,403 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
20:34:34,403 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
20:34:34,404 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
20:34:34,404 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
20:34:34,405 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
20:34:34,405 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
20:34:34,405 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
20:34:34,406 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

20:34:34,406 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,406 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
20:34:34,406 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
20:34:34,406 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,407 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
20:34:34,412 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,413 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,415 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,416 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,417 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,420 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,421 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,423 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:39:37,856  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:39:37,862  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
20:39:38,661  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:39:38,708  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:38,734  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:39:38,881  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:39:38,883  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:39:38,903  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:39:38,912  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:39:38,998  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:39:38,999  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:39:39,062  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:39:39,105  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:39:39,126  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:39:39,147  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:39:39,198  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:39:39,200  INFO Environment:213 - HHH000206: hibernate.properties not found
20:39:39,201  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:39:39,232  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:39:39,276 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@528e9a3b
20:39:39,278 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6393d402
20:39:39,278 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e061ade
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5afc4022
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5afc4022
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5afc4022
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75af7231
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75af7231
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@75af7231
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,286 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@510d8ee0
20:39:39,286 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@510d8ee0
20:39:39,287 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20f51fd7
20:39:39,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20f51fd7
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@16f4c625
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@16f4c625
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28515f66
20:39:39,289 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fa8189d
20:39:39,289 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@16229c1d
20:39:39,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16229c1d
20:39:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@10e4efe4
20:39:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10e4efe4
20:39:39,292 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6cee6787
20:39:39,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cee6787
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,294 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1097d934
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@41d02757
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3d65b692
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3d65b692
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@de0f8b
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@de0f8b
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@638d1ad
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@638d1ad
20:39:39,298 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@779c49f1
20:39:39,298 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@779c49f1
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8788aa8
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8788aa8
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e7d6497
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c863581
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c863581
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c863581
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@48abf1b5
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2d6eaca1
20:39:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ac7e822
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5988a793
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5988a793
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19e76a5c
20:39:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1d16a1c
20:39:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d16a1c
20:39:39,311 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1bb288b1
20:39:39,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bb288b1
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@62253cce
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@190dba03
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5dfd397e
20:39:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6203abce
20:39:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6203abce
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37bbc674
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48194696
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27a121c0
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44f6ccda
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d972a56
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2fb8e484
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1397f92
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@735be373
20:39:39,495  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:39:39,517  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
20:39:40,566  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:40,590  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:41,073  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@79333eff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35596a6, org.springframework.security.web.header.HeaderWriterFilter@28a63f90, org.springframework.security.web.csrf.CsrfFilter@130c5d0a, org.courseregistration.auth.CustomRestSecurityFilter@73284d52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ce70537, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4524eb84, org.springframework.security.web.access.ExceptionTranslationFilter@34311a27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@542832e]
20:39:41,125  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:41,189  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2526 ms
08:02:03,508  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
08:02:03,538  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
08:02:04,835  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
08:02:04,887  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
08:02:04,914  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
08:02:04,941 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 41 in XML document from ServletContext resource [/WEB-INF/applicationContext.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:605)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:509)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:441)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1437)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2636)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2734)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:348)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 30 more
08:27:33,444  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
08:27:33,446  WARN XmlWebApplicationContext:972 - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:414)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:969)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:928)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:583)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:116)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextDestroyed(ContextHandler.java:843)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextDestroyed(ServletContextHandler.java:543)
	at org.eclipse.jetty.server.handler.ContextHandler.stopContext(ContextHandler.java:824)
	at org.eclipse.jetty.servlet.ServletContextHandler.stopContext(ServletContextHandler.java:353)
	at org.eclipse.jetty.webapp.WebAppContext.stopWebapp(WebAppContext.java:1386)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.stopWebapp(JettyWebAppContext.java:332)
	at org.eclipse.jetty.webapp.WebAppContext.stopContext(WebAppContext.java:1350)
	at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:872)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:269)
	at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:542)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStop(JettyWebAppContext.java:429)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:530)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
09:03:02,528  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:03:02,582  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:02,603  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:03:02,846  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:03:02,848  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:03:02,866  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:03:02,880  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:03:02,968  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:03:02,969  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:03:03,041  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:03:03,088  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:03:03,111  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:03:03,129  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:03:03,174  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:03:03,175  INFO Environment:213 - HHH000206: hibernate.properties not found
09:03:03,176  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:03:03,208  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:03:03,291 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb46040
09:03:03,293 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@347f0950
09:03:03,293 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3aebdb4
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3956e933
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3956e933
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3956e933
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@375682a5
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@375682a5
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@375682a5
09:03:03,296 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@466bf366
09:03:03,296 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@466bf366
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@466bf366
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,298 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@66694050
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@66694050
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66694050
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@197da701
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@197da701
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@197da701
09:03:03,302 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6023b54f
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6023b54f
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ddc5857
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ddc5857
09:03:03,304 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@289b7efe
09:03:03,304 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@289b7efe
09:03:03,305 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@606d2a92
09:03:03,305 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20ee660b
09:03:03,306 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7ef34eb3
09:03:03,306 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ef34eb3
09:03:03,307 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3ba6707e
09:03:03,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3ba6707e
09:03:03,310 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1cd853ee
09:03:03,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd853ee
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@30d3f583
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30d3f583
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30d3f583
09:03:03,313 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@104e6540
09:03:03,314 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,315 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c3e5e3c
09:03:03,316 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@13563e64
09:03:03,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13563e64
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@66d766b9
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66d766b9
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74eae1e0
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74eae1e0
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1e3689e7
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e3689e7
09:03:03,319 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49d5c751
09:03:03,319 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49d5c751
09:03:03,320 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c438795
09:03:03,320 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5257123d
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6e818345
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e818345
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6e818345
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@12921ee1
09:03:03,325 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17e725fb
09:03:03,327 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1f8a1b
09:03:03,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f8a1b
09:03:03,328 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11ec699
09:03:03,330 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6d3a56ea
09:03:03,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d3a56ea
09:03:03,332 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2bc52b08
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bc52b08
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41d6d6c4
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11df0bc7
09:03:03,334 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@235b4aea
09:03:03,336 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5a110e7d
09:03:03,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a110e7d
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@453bbb9b
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@170b27a7
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@79392584
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@cf82c58
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1407b93f
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5aff8207
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a5a99d9
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@278df226
09:03:03,561  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:03:03,584  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:03:04,902  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:04,926  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:05,059  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@2fad7002, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18b431ea, org.springframework.security.web.header.HeaderWriterFilter@7c58c10f, org.springframework.security.web.csrf.CsrfFilter@389f4282, org.courseregistration.auth.CustomRestSecurityFilter@7cf618f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45745de6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f9ebcfe, org.springframework.security.web.access.ExceptionTranslationFilter@3d577add, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@712adc04]
09:03:05,100  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:05,154  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2624 ms
09:04:07,243 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4efa12ae
09:04:07,244  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:04:07,272 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:04:07,283 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:04:07,284 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,308 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:04:07,322 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:04:07,323 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:04:07,326 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:04:07,328 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@289b7efe
09:04:07,329 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:04:07,330 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:04:07,330 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:04:07,336 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:04:07,336 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:04:07,338 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@289b7efe}

09:04:07,338 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,345 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:04:07,345 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:04:07,346 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,368 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:04:07,395 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:05:01,056 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:05:01,062 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:09:31,548 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:09:31,553 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:09:37,239  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:09:37,246  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:09:38,186  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:09:38,229  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:38,249  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:09:38,373  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:09:38,374  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:09:38,392  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:09:38,400  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:09:38,483  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:09:38,483  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:09:38,544  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:38,585  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:09:38,607  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:09:38,624  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:09:38,670  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:09:38,671  INFO Environment:213 - HHH000206: hibernate.properties not found
09:09:38,672  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:09:38,698  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,742 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10912c91
09:09:38,742 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b37b84a
09:09:38,743 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@41d797a4
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6770543b
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6770543b
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6770543b
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1df55adf
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1df55adf
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1df55adf
09:09:38,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@c659ea1
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@c659ea1
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c659ea1
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46efa23b
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46efa23b
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46efa23b
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3bea2a1a
09:09:38,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3bea2a1a
09:09:38,752 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@693b1367
09:09:38,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@693b1367
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6dab78b0
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dab78b0
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79248390
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ccbce86
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7332d7bc
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7332d7bc
09:09:38,755 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1e639bc4
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e639bc4
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2272f178
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2272f178
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,758 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19752570
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@72127326
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@72127326
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@72127326
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e331059
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1cb118d3
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1cb118d3
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f659074
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f659074
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@269fc391
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@269fc391
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2f480590
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f480590
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28c02f60
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28c02f60
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@561d319b
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@14194c2d
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@14194c2d
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@14194c2d
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25458b49
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@318647f1
09:09:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@42c34564
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@796b8f53
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@796b8f53
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66e71004
09:09:38,772 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2822d37d
09:09:38,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2822d37d
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@6f18da34
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f18da34
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@bbcd272
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43d7e8
09:09:38,775 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@23ec6d41
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@558354e9
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@558354e9
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27d1af8e
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@683a9381
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c16c2b5
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56e6e77a
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ce18ff7
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@407bbd71
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a32dca1
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b0e37aa
09:09:38,958  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:09:38,986  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:09:39,985  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,006  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,122  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@23964d6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55b2e9f8, org.springframework.security.web.header.HeaderWriterFilter@5909059, org.springframework.security.web.csrf.CsrfFilter@731ba2e2, org.courseregistration.auth.CustomRestSecurityFilter@62775cf6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20488469, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21dbda61, org.springframework.security.web.access.ExceptionTranslationFilter@ff9600a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57b11def]
09:09:40,156  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,198  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2011 ms
09:10:38,605 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@367d965c
09:10:38,606  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:10:38,629 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:10:38,634 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:10:38,634 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,649 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:10:38,660 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:10:38,661 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:10:38,662 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:10:38,663 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@6dab78b0
09:10:38,664 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:10:38,665 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:10:38,665 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:10:38,670 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:10:38,670 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:10:38,671 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@6dab78b0}

09:10:38,671 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,675 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:10:38,675 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:10:38,676 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,691 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:10:38,709 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy196.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$bb900ee0.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:10:58,434  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:10:58,440  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:11:05,061  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:11:05,113  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:05,134  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:11:05,334  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:11:05,336  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:11:05,356  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:11:05,366  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:11:05,455  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:11:05,455  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:11:05,524  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:11:05,573  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:11:05,596  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:11:05,614  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:11:05,663  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:11:05,664  INFO Environment:213 - HHH000206: hibernate.properties not found
09:11:05,665  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:11:05,693  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:11:05,766 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:11:05,768 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:11:05,768 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:11:05,769 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:11:05,769 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:11:05,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:11:05,771 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:11:05,773 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:11:05,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:11:05,780 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:11:05,780 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:11:05,781 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:11:05,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:11:05,782 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:11:05,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:11:05,783 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:11:05,784 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:11:05,784 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:11:05,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:11:05,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:11:05,786 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:11:05,788 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:11:05,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:11:05,790 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:11:05,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:11:05,791 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:11:05,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,794 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,794 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:11:05,797 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:11:05,802 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:11:05,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:11:05,803 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:11:05,805 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:11:06,052  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:11:06,076  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:11:07,076  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,099  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,233  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:11:07,271  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,324  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2261 ms
09:11:37,863 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@53f3bf28
09:11:37,863  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:11:37,886 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:11:37,894 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:11:37,894 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,914 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:11:37,931 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:11:37,932 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:11:37,935 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:11:37,936 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:11:37,937 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:11:37,939 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:11:37,939 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:11:37,946 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:11:37,946 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:11:37,947 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:11:37,947 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,954 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:11:37,954 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:11:37,955 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,976 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:11:37,998 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:13:04,294 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:13:04,300 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:13:18,418 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:13:18,423 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:26:27,419 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:27,441 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:27,455 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:27,514 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:27,518 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'code'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:27,518 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,518 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:27,519 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:27,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,520 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:27,520 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:27,521 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:27,521 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:27,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:27,522 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:27,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,523 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:27,523 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:27,523 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:27,523 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:27,523 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:27,524 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:27,524 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,524 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:26:27,525 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,525 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,526 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,527 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,527 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,527 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,527 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,528 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,528 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:27,528 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( course1_.code course1_.course_id code ) ? ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:27,528 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:27,529 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:27,529 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:27,529 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:27,530 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:27,530 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,530 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:27,531 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:27,531 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,535 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:27,544 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:27,545 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:27,548 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,012 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:43,017 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:43,018 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:43,020 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:43,028 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:43,028 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,028 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:43,029 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:43,030 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,030 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:43,030 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:43,030 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:43,031 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:43,031 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:43,031 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:43,031 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,032 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:43,032 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:43,032 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:43,033 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:43,033 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:43,033 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:43,033 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,035 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,035 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:43,036 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:43,037 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:43,037 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:43,037 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,037 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:43,038 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:43,038 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,038 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:43,044 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,046 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,049 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,050 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,051 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,053 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,053 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,055 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:53,995 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:53,999 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:54,000 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:54,002 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=0 )
09:26:54,007 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '100'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:54,007 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,008 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:54,008 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:54,009 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,009 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:54,010 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:54,010 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:54,010 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:54,011 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:54,011 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:54,011 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,012 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:54,012 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:54,012 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:54,013 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:54,013 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:54,013 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:54,013 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,014 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,015 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,015 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,015 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,015 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,016 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,016 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:54,016 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 100 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:54,016 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:54,016 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:54,017 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:54,017 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:54,017 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:54,017 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,018 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=0 )
09:26:54,018 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=0
09:26:54,018 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,018 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=0
09:27:13,424 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:27:13,429 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:27:13,430 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:27:13,433 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=400 )
09:27:13,437 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '100'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '400'

09:27:13,437 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,437 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:27:13,438 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:27:13,438 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,438 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:27:13,438 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:27:13,438 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:27:13,439 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:27:13,439 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:27:13,439 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:27:13,439 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,440 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:27:13,440 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:27:13,440 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:27:13,440 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:27:13,440 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:27:13,441 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,441 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,442 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,442 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,443 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,443 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:27:13,443 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 100 ) ) ( <= ( section0_.price section0_.section_id price ) 400 ) ) ) )
09:27:13,443 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:27:13,444 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:27:13,444 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:27:13,444 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:27:13,445 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '400'

09:27:13,445 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,445 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=400 )
09:27:13,445 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:27:13,445 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,446 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:03,668 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:03,673 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:03,674 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:03,676 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:06,834 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:06,838 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:06,839 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:06,841 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:18,428 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:18,432 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:18,433 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:18,435 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:24,038 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:24,042 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:24,043 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:24,045 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=400 )
09:28:24,049 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '400'

09:28:24,049 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,049 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:28:24,050 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:28:24,050 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,050 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:28:24,050 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:28:24,051 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:28:24,051 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:28:24,051 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:28:24,051 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:28:24,052 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,052 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:28:24,052 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:28:24,052 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:28:24,053 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:28:24,053 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:28:24,053 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,054 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,055 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,055 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,056 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,056 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:28:24,056 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 400 ) ) ) )
09:28:24,056 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:28:24,057 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:28:24,057 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:28:24,057 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:28:24,057 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '400'

09:28:24,057 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,058 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=400 )
09:28:24,058 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=400
09:28:24,058 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,059 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=400
09:28:36,871 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:36,877 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:36,878 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:36,880 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=300 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:28:36,883 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '300'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:28:36,883 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,883 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:28:36,884 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:28:36,884 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,884 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:28:36,884 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:28:36,885 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:28:36,885 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:28:36,885 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:28:36,886 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:28:36,886 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,886 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:28:36,887 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:28:36,887 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:28:36,887 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:28:36,887 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:28:36,888 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:28:36,888 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,888 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,889 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,889 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,889 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,890 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,890 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,890 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,890 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,891 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,891 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:28:36,891 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 300 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:28:36,892 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:28:36,893 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '300'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:28:36,893 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,893 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=300 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:28:36,893 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=300 and section0_.price>=0 and section0_.price<=0
09:28:36,893 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,894 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=300 and section0_.price>=0 and section0_.price<=0
09:28:47,591  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:28:47,598  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:28:53,210  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:28:53,260  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:53,280  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:28:53,462  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:28:53,464  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:28:53,483  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:28:53,493  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:28:53,578  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:28:53,579  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:28:53,643  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:28:53,692  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:28:53,715  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:28:53,732  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:28:53,779  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:28:53,780  INFO Environment:213 - HHH000206: hibernate.properties not found
09:28:53,781  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:28:53,810  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:28:53,885 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:28:53,887 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:28:53,887 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:28:53,888 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:28:53,890 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:28:53,890 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:28:53,894 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,896 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,897 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:28:53,897 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:28:53,898 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:28:53,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:28:53,899 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:28:53,899 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:28:53,900 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:28:53,900 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:28:53,901 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:28:53,902 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:28:53,903 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:28:53,903 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:28:53,904 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:28:53,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:28:53,905 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:28:53,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:28:53,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:28:53,907 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:28:53,910 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:28:53,910 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:28:53,911 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:28:53,911 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:28:53,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:28:53,913 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:28:53,914 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:28:53,914 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:28:53,915 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:28:53,915 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,916 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,916 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,919 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:28:53,920 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:28:53,924 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:28:53,924 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:28:53,926 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:28:53,926 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:28:53,927 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:28:53,927 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:28:53,928 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:28:53,929 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:28:54,188  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:28:54,213  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:28:55,212  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,236  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,368  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:28:55,407  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,454  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2242 ms
09:29:03,056 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@129a403b
09:29:03,057  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:29:03,080 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:29:03,089 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:29:03,089 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,109 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:29:03,125 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:29:03,126 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:29:03,128 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:29:03,129 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:29:03,130 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:29:03,131 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:29:03,131 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:29:03,137 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:29:03,138 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:29:03,139 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:29:03,139 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,146 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:29:03,146 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:03,146 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,169 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:03,204 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:29:03,215 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:29:03,274 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=300 )
09:29:03,278 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[GE] Node: '>='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '300'

09:29:03,278 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,279 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:29:03,279 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:29:03,279 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,280 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:29:03,280 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:29:03,281 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:29:03,281 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:29:03,281 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:29:03,282 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:29:03,282 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,283 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:29:03,283 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:29:03,283 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:29:03,283 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:29:03,284 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:29:03,284 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:29:03,284 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,285 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,285 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,285 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,287 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,288 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,288 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,288 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:29:03,288 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 300 ) ) ) )
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:29:03,289 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:29:03,290 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '300'

09:29:03,290 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,290 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=300 )
09:29:03,290 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:29:03,291 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,295 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:29:14,778 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:14,783 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:29:14,784 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:29:14,786 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:30:01,962 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:01,967 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:01,968 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:01,973 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:30:07,285 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:07,290 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:07,291 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:07,294 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:30:07,297 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

09:30:07,297 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,298 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:07,299 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
09:30:07,299 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:30:07,300 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:30:07,301 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:07,301 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
09:30:07,302 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
09:30:07,302 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:07,303 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
09:30:07,303 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:30:07,304 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
09:30:07,304 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:07,304 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
09:30:07,305 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:07,305 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
09:30:07,306 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
09:30:07,306 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
09:30:07,307 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:07,307 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

09:30:07,307 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,308 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:30:07,308 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:30:07,308 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,309 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:30:07,316 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,317 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,320 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,322 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,324 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,325 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,326 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,328 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:28,338 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:28,342 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:28,343 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:28,345 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=100 )
09:30:28,351 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[GE] Node: '>='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '100'

09:30:28,351 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,352 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:28,352 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:30:28,353 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,353 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:28,353 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:30:28,353 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:30:28,354 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:28,354 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:30:28,354 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:30:28,354 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,355 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:30:28,355 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:30:28,356 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:30:28,356 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:30:28,356 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:30:28,357 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:30:28,357 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,357 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,357 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,358 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,359 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,359 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,359 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,359 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:28,359 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 100 ) ) ) )
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:30:28,360 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:28,361 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '100'

09:30:28,361 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,361 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=100 )
09:30:28,361 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=100
09:30:28,361 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,362 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=100
09:30:59,371 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:59,376 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:59,378 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:59,383 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 )
09:30:59,389 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'code'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:30:59,389 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,389 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:59,390 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:30:59,390 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,391 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:59,391 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:30:59,391 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:30:59,392 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:59,392 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:30:59,392 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:30:59,393 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,393 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:30:59,393 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:30:59,394 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:30:59,394 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:30:59,394 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:30:59,395 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:30:59,396 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,396 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:30:59,396 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,397 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,398 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,398 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,399 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,399 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:59,399 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( course1_.code course1_.course_id code ) ? ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:30:59,399 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:59,400 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:30:59,400 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:30:59,400 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:59,401 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:30:59,401 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,401 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 )
09:30:59,401 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:30:59,402 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,402 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:14,246 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:14,251 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:14,252 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:14,256 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:34,596 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:34,601 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:34,601 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:34,603 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:56,125 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:56,130 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:56,131 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:56,134 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
09:32:56,139 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[GE] Node: '>='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[LE] Node: '<='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

09:32:56,139 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,140 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:32:56,140 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:32:56,140 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,140 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:32:56,140 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:32:56,141 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:32:56,141 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:32:56,141 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:32:56,141 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:32:56,142 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,142 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:32:56,142 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:32:56,142 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:32:56,142 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:32:56,142 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:32:56,143 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:32:56,143 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,143 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,143 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,144 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,145 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:32:56,146 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@193bb809
09:32:56,146 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.name -> course1_.name
09:32:56,146 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:32:56,147 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( like ( course1_.name course1_.course_id name ) ? ) ) ) )
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:32:56,148 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:32:56,148 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[LE] BinaryLogicOperatorNode: '<='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'course1_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

09:32:56,148 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,149 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
09:32:56,149 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:32:56,149 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,150 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:33:37,747 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:33:37,752 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:33:37,753 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:33:37,756 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:34:40,514  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:34:40,521  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:34:41,359  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:34:41,400  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:41,421  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:34:41,559  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:34:41,560  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:34:41,577  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:34:41,585  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:34:41,665  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:34:41,666  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:34:41,727  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:34:41,768  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:34:41,791  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:34:41,814  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:34:41,863  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:34:41,864  INFO Environment:213 - HHH000206: hibernate.properties not found
09:34:41,865  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:34:41,893  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,941 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23067d0a
09:34:41,942 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@593805f9
09:34:41,942 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b156184
09:34:41,943 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,944 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,944 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@50fb03de
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@50fb03de
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50fb03de
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,948 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f113ebc
09:34:41,949 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f113ebc
09:34:41,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f113ebc
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16be5000
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16be5000
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16be5000
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,952 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e9ef7a8
09:34:41,952 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e9ef7a8
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cee6a6f
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cee6a6f
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@60bd94d8
09:34:41,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@60bd94d8
09:34:41,954 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51d766fb
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@764f158c
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@6df142bb
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6df142bb
09:34:41,957 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f3c5536
09:34:41,957 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f3c5536
09:34:41,958 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@45e71414
09:34:41,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45e71414
09:34:41,960 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,962 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5812f635
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fedf03
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@669056f4
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@669056f4
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7d560376
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d560376
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@967691f
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@967691f
09:34:41,966 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3a11c50a
09:34:41,966 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a11c50a
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@9317f39
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@9317f39
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1dc791e7
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,970 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@383d69c
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1b71d3fa
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@20bfbaaf
09:34:41,975 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@429e4dcf
09:34:41,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@429e4dcf
09:34:41,976 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a7f4e73
09:34:41,978 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@645524f0
09:34:41,978 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@645524f0
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5095b693
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5095b693
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@24287412
09:34:41,982 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@db9b890
09:34:41,982 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@73e42b16
09:34:41,984 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@128436aa
09:34:41,984 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@128436aa
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35d19c7
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30df4e60
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fc094b
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5666050
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e1ec21a
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24f82df7
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47adce72
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@717f5237
09:34:42,171  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:34:42,199  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:34:43,207  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,230  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,365  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@642ff2ce, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fba8066, org.springframework.security.web.header.HeaderWriterFilter@59383544, org.springframework.security.web.csrf.CsrfFilter@2a10bdd5, org.courseregistration.auth.CustomRestSecurityFilter@31b283db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a208c3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22a082e, org.springframework.security.web.access.ExceptionTranslationFilter@2d7bf3ab, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8720184]
09:34:43,408  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,459  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2099 ms
09:35:34,890  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:35:34,900  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:35:39,727  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:35:39,774  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:39,795  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:35:39,985  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:35:39,987  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:35:40,007  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:35:40,016  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:35:40,123  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:35:40,123  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:35:40,193  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:40,241  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:35:40,263  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:35:40,280  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:35:40,328  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:35:40,329  INFO Environment:213 - HHH000206: hibernate.properties not found
09:35:40,330  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:35:40,359  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,435 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:35:40,435 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:35:40,436 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:35:40,439 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,440 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:35:40,444 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,444 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,445 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,446 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:35:40,446 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:35:40,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:35:40,448 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:35:40,451 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:35:40,451 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:35:40,452 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:35:40,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:35:40,455 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:35:40,457 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:35:40,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:35:40,458 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:35:40,458 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:35:40,460 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:35:40,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:35:40,461 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:35:40,463 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,463 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,464 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,464 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:35:40,467 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:35:40,469 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:35:40,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:35:40,470 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:35:40,472 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:35:40,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:35:40,475 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:35:40,476 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:35:40,477 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:35:40,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:35:40,794  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:35:40,816  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:35:41,806  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:41,830  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:41,974  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:35:42,012  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:42,068  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2339 ms
09:35:57,722 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@37192869
09:35:57,723  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:35:57,746 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:35:57,756 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:35:57,756 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,781 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:35:57,799 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:35:57,800 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:35:57,803 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:35:57,804 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:35:57,804 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:35:57,806 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:35:57,806 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:35:57,814 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:35:57,814 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:35:57,815 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:35:57,815 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,820 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:35:57,821 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:35:57,821 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,844 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:35:57,875 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:35:57,886 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:35:57,924 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:35:57,926 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

09:35:57,926 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,927 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:35:57,927 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
09:35:57,928 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:35:57,928 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:35:57,929 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:35:57,929 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
09:35:57,930 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
09:35:57,930 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:35:57,931 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
09:35:57,931 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:35:57,931 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
09:35:57,932 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:35:57,932 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
09:35:57,932 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:35:57,932 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
09:35:57,933 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
09:35:57,933 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
09:35:57,933 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:35:57,933 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

09:35:57,934 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,934 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:35:57,934 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:35:57,934 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,935 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:35:57,940 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,941 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,944 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,945 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,946 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,948 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,949 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,951 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:36:19,200 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:36:19,206 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:36:19,207 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:36:19,231 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:36:19,235 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:36:19,235 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,236 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:36:19,236 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:36:19,237 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,237 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:36:19,237 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:36:19,237 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:36:19,238 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:36:19,238 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:36:19,238 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:36:19,238 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,239 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:36:19,239 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:36:19,239 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:36:19,240 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:36:19,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:36:19,240 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:36:19,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,241 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,241 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,241 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,242 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:36:19,243 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,244 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,244 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,244 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:36:19,244 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:36:19,244 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:36:19,245 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:36:19,245 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:36:19,245 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:36:19,246 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:36:19,246 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,246 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:36:19,246 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:36:19,247 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,251 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:39:53,134  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:39:53,140  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:39:58,556  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:39:58,606  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:39:58,626  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:39:58,811  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:39:58,813  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:39:58,832  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:39:58,842  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:39:58,929  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:39:58,930  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:39:58,992  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:39:59,038  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:39:59,061  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:39:59,079  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:39:59,129  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:39:59,130  INFO Environment:213 - HHH000206: hibernate.properties not found
09:39:59,131  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:39:59,160  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:39:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,235 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:39:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:39:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:39:59,242 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,244 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,245 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:39:59,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:39:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:39:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:39:59,247 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:39:59,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:39:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:39:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:39:59,249 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:39:59,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:39:59,250 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:39:59,250 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:39:59,252 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:39:59,252 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:39:59,254 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,256 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:39:59,259 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:39:59,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:39:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:39:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:39:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:39:59,263 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,267 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:39:59,267 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:39:59,269 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:39:59,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:39:59,270 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:39:59,272 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:39:59,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:39:59,273 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:39:59,275 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:39:59,276 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:39:59,584  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:39:59,610  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:40:00,596  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,618  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,753  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:40:00,792  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,842  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2285 ms
09:40:15,755 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5ffc47a1
09:40:15,756  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:40:15,778 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:40:15,786 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:40:15,787 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,807 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:40:15,823 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:40:15,824 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:40:15,827 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:40:15,830 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:40:15,831 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:40:15,833 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:40:15,833 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:40:15,840 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:40:15,841 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:40:15,842 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:40:15,842 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,850 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:40:15,850 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:40:15,851 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,871 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:40:15,903 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:40:15,915 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:40:15,973 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 )
09:40:15,978 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LE] Node: '<='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

09:40:15,978 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,979 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:40:15,979 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:40:15,980 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,980 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:40:15,980 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:40:15,981 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:40:15,981 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:40:15,981 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:40:15,982 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:40:15,982 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,983 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:40:15,983 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:40:15,983 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:40:15,983 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:40:15,984 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:40:15,984 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:40:15,984 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,985 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,985 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,985 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,986 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,987 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,987 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,987 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,987 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:40:15,988 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:40:15,988 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:40:15,989 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( <= ( section0_.price section0_.section_id price ) 0 ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
09:40:15,989 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:40:15,989 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:40:15,990 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:40:15,990 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:40:15,990 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LE] BinaryLogicOperatorNode: '<='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

09:40:15,990 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,991 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 )
09:40:15,991 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price<=0 and section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?)
09:40:15,991 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,996 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price<=0 and section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?)
09:42:31,898  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:42:31,904  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:42:32,847  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:42:32,890  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:32,911  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:42:33,039  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:42:33,041  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:42:33,059  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:42:33,067  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:42:33,151  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:42:33,152  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:42:33,214  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:42:33,255  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:42:33,275  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:42:33,292  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:42:33,338  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:42:33,340  INFO Environment:213 - HHH000206: hibernate.properties not found
09:42:33,341  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:42:33,366  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30b6a82f
09:42:33,407 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@565f3c0a
09:42:33,407 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6906bcb4
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@29fcf403
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@29fcf403
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29fcf403
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@51de5d04
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@51de5d04
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51de5d04
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@56740a51
09:42:33,414 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@56740a51
09:42:33,414 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56740a51
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@364e060e
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@364e060e
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@595645d
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@595645d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@514efa3d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@514efa3d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@82a0d15
09:42:33,417 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f22857
09:42:33,418 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@12d4be87
09:42:33,418 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4be87
09:42:33,419 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@21c129cf
09:42:33,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21c129cf
09:42:33,420 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2035b620
09:42:33,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2035b620
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@42645c75
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42645c75
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42645c75
09:42:33,422 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a56392
09:42:33,422 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47cf665d
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@475f2a9e
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475f2a9e
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@15a8b3c1
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15a8b3c1
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ddd780a
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ddd780a
09:42:33,426 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@766c36fe
09:42:33,426 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@766c36fe
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@614be8e
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@614be8e
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6ddf64cd
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@50320478
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@50320478
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@50320478
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1057037b
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@58344b09
09:42:33,432 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1f897467
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@619f50f6
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@619f50f6
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@541b5662
09:42:33,436 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@276d824f
09:42:33,436 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@276d824f
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@d91ec2a
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d91ec2a
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1875ddea
09:42:33,439 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@70874eca
09:42:33,439 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5375a652
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7f17c066
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f17c066
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21b1ed82
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60e40d22
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38d10ff3
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c4b43f0
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42386e06
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f5e67e
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@326bcf44
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4094e3a
09:42:33,618  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:42:33,638  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:42:34,517  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,538  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,664  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3eb157c9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f9ba5b6, org.springframework.security.web.header.HeaderWriterFilter@3b44a383, org.springframework.security.web.csrf.CsrfFilter@651c71c5, org.courseregistration.auth.CustomRestSecurityFilter@51276db0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c3c437, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d852777, org.springframework.security.web.access.ExceptionTranslationFilter@1b91ef5b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71b15b74]
09:42:34,702  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,746  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1898 ms
09:49:13,345 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7705643
09:49:13,345  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:49:13,363 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:49:13,368 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:49:13,368 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,382 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:49:13,391 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:49:13,392 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:49:13,394 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:49:13,395 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@514efa3d
09:49:13,396 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:49:13,397 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:49:13,398 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:49:13,402 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:49:13,403 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:49:13,403 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@514efa3d}

09:49:13,403 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,408 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:49:13,408 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:49:13,408 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,423 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:49:13,450 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:49:13,459 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:49:13,511 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:49:13,515 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:49:13,515 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,515 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:49:13,515 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:49:13,516 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,516 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:49:13,516 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:49:13,517 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:49:13,517 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:49:13,517 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:49:13,518 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:49:13,518 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,518 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:49:13,518 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:49:13,519 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:49:13,519 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:49:13,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:49:13,519 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:49:13,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,520 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,520 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,520 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,521 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,521 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,521 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:49:13,522 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@514efa3d
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,522 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,523 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,523 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:49:13,523 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:49:13,523 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:49:13,524 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:49:13,524 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:49:13,524 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:49:13,524 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@514efa3d}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:49:13,525 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,525 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:49:13,525 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:49:13,525 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,529 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
10:08:40,691 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:08:40,696 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
10:08:40,697 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
10:08:40,700 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
10:09:59,512  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
10:09:59,518  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:10:00,279  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:10:00,320  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:00,342  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:10:00,466  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:10:00,467  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:10:00,485  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:10:00,495  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:10:00,583  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:10:00,584  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:10:00,650  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:10:00,691  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:10:00,712  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:10:00,728  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:10:01,181  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:10:01,182  INFO Environment:213 - HHH000206: hibernate.properties not found
10:10:01,183  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:10:01,211  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45afb9fd
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ab9848
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e93b7d1
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1da60a0f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1da60a0f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1da60a0f
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@30566a4c
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@30566a4c
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@30566a4c
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7a678543
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7a678543
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a678543
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48e91ef9
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48e91ef9
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9e2af2e
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9e2af2e
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@eba8e92
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@eba8e92
10:10:01,265 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37a632bc
10:10:01,265 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a83b252
10:10:01,266 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3d58aac2
10:10:01,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d58aac2
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@38002dca
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38002dca
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@51c166ae
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c166ae
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@62bd1399
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62bd1399
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62bd1399
10:10:01,269 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fb368ff
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78160d6b
10:10:01,271 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3797f5b4
10:10:01,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3797f5b4
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6c3f6a0e
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c3f6a0e
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30abd5c2
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30abd5c2
10:10:01,273 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@293febe1
10:10:01,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@293febe1
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c1243e0
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c1243e0
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c3a21df
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@73e3285f
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@c6826d6
10:10:01,278 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2b710c2f
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3717b461
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3717b461
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4fc0c5b3
10:10:01,282 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@24647591
10:10:01,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24647591
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d2b136f
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2b136f
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195585ed
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cdc037d
10:10:01,285 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5a932b3c
10:10:01,286 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@61210aca
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61210aca
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68712f34
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16f1faa
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b8cabfb
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1328d07a
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@724145a4
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b2a8609
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@659727e4
10:10:01,288 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30e9802c
10:10:01,473  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:10:01,492  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:10:02,381  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,404  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,519  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@30501391, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@703bf44f, org.springframework.security.web.header.HeaderWriterFilter@6ee18f85, org.springframework.security.web.csrf.CsrfFilter@79a9cabc, org.courseregistration.auth.CustomRestSecurityFilter@49d58283, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66639e7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49ca894, org.springframework.security.web.access.ExceptionTranslationFilter@33d77e91, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56f333f2]
10:10:02,558  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,610  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2330 ms
10:10:34,907  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:34,918  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:10:40,236  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:10:40,285  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:40,305  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:10:40,484  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:10:40,486  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:10:40,505  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:10:40,515  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:10:40,612  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:10:40,613  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:10:40,680  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:10:40,728  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:10:40,752  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:10:40,769  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:10:40,819  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:10:40,820  INFO Environment:213 - HHH000206: hibernate.properties not found
10:10:40,821  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:10:40,849  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:10:40,923 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,923 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
10:10:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
10:10:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
10:10:40,926 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
10:10:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
10:10:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
10:10:40,932 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
10:10:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
10:10:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,935 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
10:10:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
10:10:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
10:10:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
10:10:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
10:10:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
10:10:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
10:10:40,941 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
10:10:40,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
10:10:40,942 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
10:10:40,942 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
10:10:40,945 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
10:10:40,945 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
10:10:40,947 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
10:10:40,947 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
10:10:40,948 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
10:10:40,948 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
10:10:40,950 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
10:10:40,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
10:10:40,951 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
10:10:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
10:10:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
10:10:40,953 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
10:10:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
10:10:40,963 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
10:10:40,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
10:10:40,965 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
10:10:40,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
10:10:40,966 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
10:10:40,966 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
10:10:40,967 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
10:10:40,968 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
10:10:41,291  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:10:41,316  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:10:42,322  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,346  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,484  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
10:10:42,527  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,579  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2341 ms
10:10:47,083 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f53cf0b
10:10:47,083  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:10:47,106 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
10:10:47,113 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

10:10:47,113 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,132 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
10:10:47,145 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
10:10:47,146 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
10:10:47,148 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
10:10:47,149 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
10:10:47,149 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
10:10:47,150 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
10:10:47,151 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
10:10:47,156 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
10:10:47,156 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
10:10:47,157 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

10:10:47,157 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,163 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
10:10:47,163 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:10:47,163 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,182 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:10:47,215 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
10:10:47,226 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
10:10:47,283 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
10:10:47,286 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

10:10:47,287 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,287 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
10:10:47,287 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
10:10:47,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,288 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
10:10:47,288 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
10:10:47,289 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
10:10:47,289 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
10:10:47,289 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
10:10:47,289 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

10:10:47,290 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,290 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
10:10:47,291 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
10:10:47,291 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
10:10:47,291 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
10:10:47,291 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
10:10:47,292 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

10:10:47,292 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,293 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,293 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
10:10:47,294 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
10:10:47,295 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
10:10:47,295 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
10:10:47,295 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
10:10:47,295 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
10:10:47,296 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
10:10:47,297 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
10:10:47,297 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

10:10:47,297 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,298 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
10:10:47,298 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
10:10:47,298 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,302 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
10:11:30,635  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:11:30,640  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:11:31,687  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:11:31,731  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:11:31 PDT 2015]; root of context hierarchy
10:11:31,752  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:11:31,891  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:11:31,892  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:11:31,910  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:11:31,919  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:11:32,006  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:11:32,007  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:11:32,069  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:11:32,110  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:11:32,131  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:11:32,147  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:11:32,196  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:11:32,198  INFO Environment:213 - HHH000206: hibernate.properties not found
10:11:32,199  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:11:32,225  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:11:32,270 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48191402
10:11:32,272 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55d45101
10:11:32,272 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d8ec13c
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@26f6933b
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@26f6933b
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26f6933b
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1392af3a
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1392af3a
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1392af3a
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,279 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dd61435
10:11:32,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dd61435
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14f3e618
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14f3e618
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@498fd7e2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@498fd7e2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1ceb1de2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6940b14c
10:11:32,282 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@301b4cdc
10:11:32,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@301b4cdc
10:11:32,283 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@14bd8a12
10:11:32,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@14bd8a12
10:11:32,284 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@17eb850d
10:11:32,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17eb850d
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,286 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c7dc31
10:11:32,286 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1a93da84
10:11:32,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a93da84
10:11:32,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a93da84
