<<<<<<< HEAD
18:44:42,242  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:44:42,243  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:44:42,305  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:44:42,345  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:44:42,368  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:44:42,385  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
=======
14:22:14,843 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,844 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,846 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,848 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,850 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,852 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,854 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,856 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,859 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,861 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,863 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:22:14,864 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:22:14,866 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:27:17,933  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:27:18,026  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:27:18 PDT 2015]; root of context hierarchy
14:27:18,062  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:27:18,398  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
14:27:18,400  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
14:27:18,432  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
14:27:18,446  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
14:27:18,598  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:27:18,599  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:27:18,711  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:27:18,809  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:27:18,850  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:27:18,882  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git
	name: student_registration_system
	...]
<<<<<<< HEAD
18:44:42,431  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:44:42,432  INFO Environment:213 - HHH000206: hibernate.properties not found
18:44:42,433  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:44:42,458  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,498 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f314ba7
18:44:42,499 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@661b9244
18:44:42,499 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48e432f4
18:44:42,500 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@785e0135
18:44:42,500 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@594118b9
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6f31b252
18:44:42,501 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6f31b252
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6f31b252
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,502 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@218f8bc8
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2fe97741
18:44:42,503 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2fe97741
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2fe97741
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7dcd22
18:44:42,504 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7dcd22
18:44:42,505 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7dcd22
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59341733
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@59341733
18:44:42,506 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@59341733
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,507 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e28c84f
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@378a611d
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@378a611d
18:44:42,508 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4835b74
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4835b74
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@64480389
18:44:42,509 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@64480389
18:44:42,510 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@54cedd43
18:44:42,510 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20a6b0e1
18:44:42,511 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@767f1496
18:44:42,511 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@767f1496
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1a676ff5
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1a676ff5
18:44:42,512 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2e7bd5aa
18:44:42,513 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2e7bd5aa
18:44:42,513 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@77023dc9
18:44:42,514 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@655e4a1a
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@123dc595
18:44:42,516 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@560b0a7c
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@797ebaf8
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@797ebaf8
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2bc3e002
18:44:42,517 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2bc3e002
18:44:42,518 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@538882ef
18:44:42,518 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@538882ef
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5ce5aeb1
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5ce5aeb1
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@70111e0e
18:44:42,519 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@70111e0e
18:44:42,520 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42621661
18:44:42,520 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1a7030d
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,521 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@71120696
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@77ae4fae
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,522 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5216b0cd
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,523 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17358eb7
18:44:42,524 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7dbb229
18:44:42,524 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@478a9045
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@22d513de
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@22d513de
18:44:42,527 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63c2f16a
18:44:42,529 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5f1be939
18:44:42,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f1be939
18:44:42,530 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@70003a14
18:44:42,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@70003a14
18:44:42,531 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1e338cbb
18:44:42,531 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6d015a0b
18:44:42,532 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@73c7d42c
18:44:42,533 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@55041d96
18:44:42,533 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@55041d96
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@396b6e3a
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4c762c2c
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@585d19ea
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@183026d0
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a488152
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@722d57b
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37800e3c
18:44:42,534 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e1fa8ba
18:44:42,719  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:44:42,740  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:44:43,668  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,690  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,837  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@1fc17859, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@647f394d, org.springframework.security.web.header.HeaderWriterFilter@3df52edf, org.springframework.security.web.csrf.CsrfFilter@5bae73cd, org.courseregistration.auth.CustomRestSecurityFilter@4fb9db51, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@521126ba, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@468669f1, org.springframework.security.web.access.ExceptionTranslationFilter@6e1e5af7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f7c6736]
18:44:43,879  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:43,935  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1998 ms
18:44:56,909  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:44:41 PDT 2015]; root of context hierarchy
18:44:56,918  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:44:57,734  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:44:57,776  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:57,797  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:44:57,920  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:44:57,922  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:44:57,939  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:44:57,947  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:44:58,033  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:44:58,033  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:44:58,105  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:44:58,152  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:44:58,174  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:44:58,191  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:44:58,237  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:44:58,238  INFO Environment:213 - HHH000206: hibernate.properties not found
18:44:58,239  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:44:58,265  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@788949e3
18:44:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4ba7bf4d
18:44:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@21cb3d59
18:44:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2d4b930e
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a1c26bf
18:44:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d2686b0
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fb37b1a
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3dbfaa79
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7a6ad674
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7a6ad674
18:44:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7a6ad674
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@270baef9
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@270baef9
18:44:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@270baef9
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@66cafaf
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e568c3e
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e568c3e
18:44:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2dbc659c
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2dbc659c
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@681a99c1
18:44:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@681a99c1
18:44:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4001e89f
18:44:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@38be6661
18:44:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@20e55353
18:44:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@20e55353
18:44:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@288adbe6
18:44:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@288adbe6
18:44:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6006be12
18:44:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6006be12
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4e66eda2
18:44:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@71a9ced4
18:44:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61fdc6b2
18:44:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@a667baa
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@75557073
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@75557073
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@45399b73
18:44:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@45399b73
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@841c9e3
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@841c9e3
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@29d0322b
18:44:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@29d0322b
18:44:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@42f50c4d
18:44:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@42f50c4d
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7e39f038
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2079a0d3
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,330 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6e5141c9
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1a648de
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@327ab271
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@327ab271
18:44:58,331 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@327ab271
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1794d7ad
18:44:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5f3e6ac5
18:44:58,333 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6cf2bbb9
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@735df6d6
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@735df6d6
18:44:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1be342ff
18:44:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@70338fea
18:44:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@70338fea
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2e407b4a
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2e407b4a
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2b992601
18:44:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5a62162f
18:44:58,340 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3e9ac36a
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@39205727
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@39205727
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b31a36b
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@935245
18:44:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@eb26736
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4a10e947
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c8c2195
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6617553b
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b811518
18:44:58,343 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@369681fe
18:44:58,513  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:44:58,532  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:44:59,770  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,793  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,907  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@2ade67b0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@300f142, org.springframework.security.web.header.HeaderWriterFilter@57086bad, org.springframework.security.web.csrf.CsrfFilter@63b6ad74, org.courseregistration.auth.CustomRestSecurityFilter@3a8cb555, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e02d9a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a4388c9, org.springframework.security.web.access.ExceptionTranslationFilter@7cc85df8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23b16929]
18:44:59,941  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:44:59,985  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2250 ms
18:45:16,930  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:44:57 PDT 2015]; root of context hierarchy
18:45:16,941  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:45:17,719  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:45:17,759  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:17,780  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:45:17,897  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:45:17,899  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:45:17,915  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:45:17,925  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:45:18,004  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:45:18,004  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:45:18,067  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:45:18,106  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:45:18,127  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:45:18,143  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:45:18,184  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:45:18,186  INFO Environment:213 - HHH000206: hibernate.properties not found
18:45:18,186  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:45:18,210  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:45:18,248 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32d8baee
18:45:18,249 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5410055b
18:45:18,250 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18c15e3e
18:45:18,250 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@175ea3f3
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2bae6c75
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6df94cb
18:45:18,252 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2b526870
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2250a567
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2250a567
18:45:18,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2250a567
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7728bb39
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@7728bb39
18:45:18,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7728bb39
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1cd9b3e9
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,256 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f9dfc79
18:45:18,257 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@406651e1
18:45:18,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@406651e1
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@759f7675
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@759f7675
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@58d04679
18:45:18,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@58d04679
18:45:18,259 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@381902a3
18:45:18,259 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@96b2282
18:45:18,260 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@28af0cc7
18:45:18,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@28af0cc7
18:45:18,261 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@46bc8568
18:45:18,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@46bc8568
18:45:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4855d10b
18:45:18,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4855d10b
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@648ff485
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@648ff485
18:45:18,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@648ff485
18:45:18,264 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@16297d67
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fc9f354
18:45:18,265 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6be4dc24
18:45:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3d52b553
18:45:18,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3d52b553
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7b6043ce
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7b6043ce
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dce02d8
18:45:18,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dce02d8
18:45:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4dc2a9a3
18:45:18,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4dc2a9a3
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68f34960
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68f34960
18:45:18,269 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@298581ba
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6b19700f
18:45:18,270 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7c7b2601
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@26c52480
18:45:18,271 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@14d26ed7
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,272 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@28a1622
18:45:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4a917e39
18:45:18,273 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7724720f
18:45:18,275 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3d61956e
18:45:18,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3d61956e
18:45:18,276 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@da310e4
18:45:18,277 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@df6b2b5
18:45:18,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@df6b2b5
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@500b8f9c
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@500b8f9c
18:45:18,279 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1883c0e7
18:45:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@9907fa0
18:45:18,280 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4deaef43
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@589aaf0a
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@589aaf0a
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@532d10cd
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ec2175d
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53c7dc15
18:45:18,282 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68aab765
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53ba79c5
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d0cf410
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70c6b4d0
18:45:18,283 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d6a3432
18:45:18,449  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:45:18,468  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:45:19,353  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,376  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,498  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5d1a5cd4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@591872ac, org.springframework.security.web.header.HeaderWriterFilter@1bba624c, org.springframework.security.web.csrf.CsrfFilter@2c62409b, org.courseregistration.auth.CustomRestSecurityFilter@2311453f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3906cee3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7166638d, org.springframework.security.web.access.ExceptionTranslationFilter@4f3e83a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@662f1fc7]
18:45:19,536  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:45:19,580  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1860 ms
18:48:42,505  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:45:17 PDT 2015]; root of context hierarchy
18:48:42,514  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:48:43,238  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:48:43,278  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:43,297  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:48:43,412  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:48:43,414  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:48:43,432  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:48:43,441  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:48:43,525  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:48:43,525  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:48:43,589  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:48:43,629  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:48:43,649  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:48:43,665  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:48:43,709  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:48:43,710  INFO Environment:213 - HHH000206: hibernate.properties not found
18:48:43,711  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:48:43,735  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4d261917
18:48:43,774 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@f486c59
18:48:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6515144b
18:48:43,775 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@25f301
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e56574e
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@122c0ddc
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@193426f5
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@22962836
18:48:43,778 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@22962836
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22962836
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19010601
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@19010601
18:48:43,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@19010601
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@165ebdde
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@165ebdde
18:48:43,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@165ebdde
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ec0e7f4
18:48:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52568fc
18:48:43,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52568fc
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@679e9e2e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@679e9e2e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6770283e
18:48:43,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6770283e
18:48:43,784 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1bd7ae81
18:48:43,784 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@62c21b01
18:48:43,785 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3669f5ff
18:48:43,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3669f5ff
18:48:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@45dcc564
18:48:43,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@45dcc564
18:48:43,787 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@305eb166
18:48:43,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@305eb166
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@13349a2d
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@13349a2d
18:48:43,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@13349a2d
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@54ba2ea0
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2bb389dc
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f274d9f
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@56534f7
18:48:43,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56534f7
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2f725b20
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2f725b20
18:48:43,791 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2e6fc689
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2e6fc689
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@565f13d0
18:48:43,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@565f13d0
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@48f79fee
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@48f79fee
18:48:43,793 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@17b00103
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,794 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6682e0d4
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,795 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7a9e5804
18:48:43,796 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@ed420fc
18:48:43,796 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@54c6fcd0
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,797 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58d4dd9e
18:48:43,798 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7c62850d
18:48:43,798 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4cc0d92f
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4a8225c4
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a8225c4
18:48:43,801 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1cf44993
18:48:43,803 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@691ffbe7
18:48:43,803 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@691ffbe7
18:48:43,804 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@635b73ca
18:48:43,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@635b73ca
18:48:43,805 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4c6e1631
18:48:43,805 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@210e3295
18:48:43,806 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@525e3811
18:48:43,807 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3e5a994b
18:48:43,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e5a994b
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7ddf532f
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@17250d1e
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@318b47a9
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35beb18c
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@327fca3f
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@d0d7c93
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66d0c494
18:48:43,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26a22b13
18:48:43,974  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:48:43,993  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:48:44,900  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:44,923  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:45,041  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@48bfe06c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@62850f07, org.springframework.security.web.header.HeaderWriterFilter@6ae515b7, org.springframework.security.web.csrf.CsrfFilter@5e90e11f, org.courseregistration.auth.CustomRestSecurityFilter@691bd621, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@232c1132, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61a6e04d, org.springframework.security.web.access.ExceptionTranslationFilter@38e76d7f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ffa0e9c]
18:48:45,077  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:48:45,119  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1880 ms
18:49:14,059  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:48:43 PDT 2015]; root of context hierarchy
18:49:14,067  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:14,917  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:14,959  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:14,979  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:15,101  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:15,103  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:15,121  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:15,130  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:15,466  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:15,466  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:15,538  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:15,581  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:15,602  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:15,619  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:15,669  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:15,670  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:15,671  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:15,698  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@718f6409
18:49:15,742 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4543bca3
18:49:15,742 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@575f299a
18:49:15,743 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27bf5891
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1d41d1a0
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@377e5f3e
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,746 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3e69ba35
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@319d0586
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@319d0586
18:49:15,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@319d0586
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6f67c25c
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6f67c25c
18:49:15,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6f67c25c
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@284759a5
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@284759a5
18:49:15,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@284759a5
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c905c7b
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25415019
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25415019
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8909a28
18:49:15,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8909a28
18:49:15,752 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@24ec914b
18:49:15,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@24ec914b
18:49:15,753 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@ce2a79c
18:49:15,753 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@39725a0f
18:49:15,754 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@34890286
18:49:15,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34890286
18:49:15,755 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5df7e917
18:49:15,755 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5df7e917
18:49:15,756 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@27611f12
18:49:15,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@27611f12
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@295fdd24
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@295fdd24
18:49:15,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@295fdd24
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d2e7c00
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4c8861bf
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@26d50cf
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3a596c8d
18:49:15,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3a596c8d
18:49:15,760 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f2faf3b
18:49:15,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f2faf3b
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f65bfc8
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f65bfc8
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@55317cc6
18:49:15,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55317cc6
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2bbfa0eb
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2bbfa0eb
18:49:15,762 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@53af8c90
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@521bca43
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@521bca43
18:49:15,763 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@521bca43
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6c508081
18:49:15,764 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@dfbcc9f
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1953a460
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,765 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@53ec8755
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@67de126a
18:49:15,766 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7cc8a605
18:49:15,769 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2089e222
18:49:15,769 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2089e222
18:49:15,770 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@77c9070e
18:49:15,771 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6481141b
18:49:15,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6481141b
18:49:15,773 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@13a48c95
18:49:15,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@13a48c95
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67348c8e
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41c30c35
18:49:15,774 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7d91ff8a
18:49:15,776 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@783acd67
18:49:15,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@783acd67
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@41405cfc
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6fbff046
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45d0e93c
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63a33ec
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@45de386b
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@55f3dd56
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@17a857dd
18:49:15,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@405aa397
18:49:15,960  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:15,984  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:16,886  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:16,907  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:17,025  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@362696ad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a6744, org.springframework.security.web.header.HeaderWriterFilter@294b79f9, org.springframework.security.web.csrf.CsrfFilter@773b277d, org.courseregistration.auth.CustomRestSecurityFilter@752a44c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26096d6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54ff4ce6, org.springframework.security.web.access.ExceptionTranslationFilter@7a5199cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5dfa9644]
18:49:17,060  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:17,106  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2188 ms
18:49:40,045  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:14 PDT 2015]; root of context hierarchy
18:49:40,054  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:40,663  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:40,707  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:40,729  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:40,843  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:40,845  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:40,862  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:40,872  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:40,958  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:40,958  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:41,026  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:41,067  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:41,089  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:41,107  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:41,156  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:41,157  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:41,158  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:41,185  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@73e426fa
18:49:41,229 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7eba94d4
18:49:41,230 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4ede1c4d
18:49:41,230 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@78738396
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,231 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5daf86aa
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,232 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@73ac45f6
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@443a0403
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@443a0403
18:49:41,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@443a0403
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,234 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4f18d22c
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3cfa9482
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3cfa9482
18:49:41,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3cfa9482
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28cb3ea2
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4bf83faf
18:49:41,238 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6eedbbb8
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6eedbbb8
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@283344ec
18:49:41,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@283344ec
18:49:41,240 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7b809573
18:49:41,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7b809573
18:49:41,241 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1392ddc3
18:49:41,241 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4afb857f
18:49:41,242 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3b171162
18:49:41,242 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b171162
18:49:41,243 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@497b0f7
18:49:41,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@497b0f7
18:49:41,244 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4c4d3861
18:49:41,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4c4d3861
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@82b6dc8
18:49:41,246 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@53a05e25
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4aa1a87d
18:49:41,247 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15a586f6
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3fe920f0
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fe920f0
18:49:41,248 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6befafd2
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6befafd2
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@19eaacd9
18:49:41,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@19eaacd9
18:49:41,250 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2206018c
18:49:41,250 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2206018c
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1098b1e9
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1098b1e9
18:49:41,251 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5b0c1601
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4f9d63ce
18:49:41,252 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@378d73b5
18:49:41,253 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7753e27d
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4bcfa51
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,254 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@750b9828
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6a8fba8a
18:49:41,255 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5dad3305
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3cc27345
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3cc27345
18:49:41,258 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36a0e466
18:49:41,260 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@16f54088
18:49:41,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@16f54088
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@464a97d6
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@464a97d6
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a5f0288
18:49:41,262 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6369a9f6
18:49:41,263 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7cb1538e
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@29d1179a
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29d1179a
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@79afb1ef
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58e30487
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b7a91d8
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39e24113
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d46bf09
18:49:41,265 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7d41431a
18:49:41,266 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2caf93b
18:49:41,266 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@298bdaa8
18:49:41,448  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:41,470  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:42,527  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,557  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,711  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3facac6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a792003, org.springframework.security.web.header.HeaderWriterFilter@3043a1f9, org.springframework.security.web.csrf.CsrfFilter@1fdad6e, org.courseregistration.auth.CustomRestSecurityFilter@5b688ec7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78b2d491, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5553fe17, org.springframework.security.web.access.ExceptionTranslationFilter@39a9af0e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2628104a]
18:49:42,753  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:42,810  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2146 ms
18:49:52,471  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:40 PDT 2015]; root of context hierarchy
18:49:52,481  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:49:57,491  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:49:57,543  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:57,564  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:49:57,749  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:49:57,751  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:49:57,771  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:49:57,782  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:49:57,880  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:49:57,881  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:49:57,949  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:49:58,089  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:49:58,122  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:49:58,140  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:49:58,190  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:49:58,191  INFO Environment:213 - HHH000206: hibernate.properties not found
18:49:58,192  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:49:58,221  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:49:58,295 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,296 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:49:58,297 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:49:58,297 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:49:58,298 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:49:58,300 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,301 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,301 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:49:58,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:49:58,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:49:58,304 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:49:58,305 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:49:58,305 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,306 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:49:58,308 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:49:58,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:49:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:49:58,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:49:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:49:58,311 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:49:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:49:58,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:49:58,313 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:49:58,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:49:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:49:58,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:49:58,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:49:58,317 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:49:58,319 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:49:58,320 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:49:58,321 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:49:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:49:58,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:49:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:49:58,323 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:49:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:49:58,324 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:49:58,325 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:49:58,326 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:49:58,327 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,328 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:49:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:49:58,329 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:49:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:49:58,332 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:49:58,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:49:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:49:58,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:49:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:49:58,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:49:58,338 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:49:58,338 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:49:58,339 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:49:58,341 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:49:58,342 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:49:58,602  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:49:58,626  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:49:59,621  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,644  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,780  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:49:59,819  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:49:59,870  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2377 ms
18:50:10,128 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@172ed062
18:50:10,128  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:50:10,153 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:50:10,160 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
=======
14:27:18,947  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:27:18,949  INFO Environment:213 - HHH000206: hibernate.properties not found
14:27:18,951  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:27:18,999  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:27:19,075 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@560c3758
14:27:19,075 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@560c3758
14:27:19,075 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@560c3758
14:27:19,076 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6d2f910b
14:27:19,078 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@224e7aa5
14:27:19,079 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1f57fa23
14:27:19,080 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3d8b9dee
14:27:19,081 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3d8b9dee
14:27:19,081 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d8b9dee
14:27:19,082 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1bca9b64
14:27:19,082 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1bca9b64
14:27:19,083 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bca9b64
14:27:19,084 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7ec176da
14:27:19,084 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7ec176da
14:27:19,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7ec176da
14:27:19,086 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@445c693
14:27:19,086 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@445c693
14:27:19,086 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@445c693
14:27:19,087 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cca5ff3
14:27:19,087 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cca5ff3
14:27:19,087 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5cca5ff3
14:27:19,090 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@36017835
14:27:19,091 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@36017835
14:27:19,091 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@36017835
14:27:19,092 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f05d08c
14:27:19,093 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1f05d08c
14:27:19,093 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1f05d08c
14:27:19,095 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@451f3f66
14:27:19,095 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@451f3f66
14:27:19,096 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@580e01cd
14:27:19,096 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@580e01cd
14:27:19,097 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@644c3590
14:27:19,097 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@644c3590
14:27:19,098 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68e62b3b
14:27:19,099 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@61627c9d
14:27:19,100 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@92775a3
14:27:19,101 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@92775a3
14:27:19,102 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3b9c05f
14:27:19,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b9c05f
14:27:19,104 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@57a0aeb8
14:27:19,104 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@57a0aeb8
14:27:19,106 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11d0bff5
14:27:19,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11d0bff5
14:27:19,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11d0bff5
14:27:19,109 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2c955487
14:27:19,110 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4b3eaf39
14:27:19,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4b3eaf39
14:27:19,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4b3eaf39
14:27:19,112 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@318a81a0
14:27:19,113 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@33a58fcb
14:27:19,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@33a58fcb
14:27:19,114 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d093067
14:27:19,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d093067
14:27:19,115 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70f0c352
14:27:19,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70f0c352
14:27:19,116 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@78e34499
14:27:19,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@78e34499
14:27:19,117 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ddb6c71
14:27:19,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ddb6c71
14:27:19,118 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29a5f924
14:27:19,120 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@22f0e329
14:27:19,122 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@22f0e329
14:27:19,123 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@22f0e329
14:27:19,126 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7552f05b
14:27:19,127 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7552f05b
14:27:19,129 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7552f05b
14:27:19,133 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7747571c
14:27:19,135 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@20e7152a
14:27:19,136 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@20e7152a
14:27:19,136 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@20e7152a
14:27:19,138 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1677f98b
14:27:19,138 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1677f98b
14:27:19,139 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1677f98b
14:27:19,140 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@58701e8c
14:27:19,141 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6bc08a77
14:27:19,153 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@14af57c3
14:27:19,154 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14af57c3
14:27:19,154 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@281028ce
14:27:19,158 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@f9979cf
14:27:19,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f9979cf
14:27:19,162 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1ae90cb9
14:27:19,162 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1ae90cb9
14:27:19,163 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7dc9b41a
14:27:19,164 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6f53295e
14:27:19,165 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@31885b4b
14:27:19,170 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5b5f61cc
14:27:19,170 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5b5f61cc
14:27:19,171 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2468c0e4
14:27:19,171 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49994a4
14:27:19,171 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a82453
14:27:19,172 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3df54fd5
14:27:19,172 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ff8d76f
14:27:19,172 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@178c4480
14:27:19,172 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5746609e
14:27:19,173 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40da1644
14:27:19,476  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:27:19,506  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:27:21,420  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:27:18 PDT 2015]; root of context hierarchy
14:27:21,466  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:27:18 PDT 2015]; root of context hierarchy
14:27:21,796  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@76d4e1af, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@483f19c0, org.springframework.security.web.header.HeaderWriterFilter@f111e97, org.springframework.security.web.csrf.CsrfFilter@35d44cd3, org.courseregistration.auth.CustomRestSecurityFilter@64dc0a5f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@549dfe1d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@537fb7bf, org.springframework.security.web.access.ExceptionTranslationFilter@445adbd7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40d0bff1]
14:27:21,891  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:27:18 PDT 2015]; root of context hierarchy
14:27:22,054  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4118 ms
14:30:54,157  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
14:30:54,253  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 14:30:54 PDT 2015]; root of context hierarchy
14:30:54,297  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
14:30:54,669  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
14:30:54,672  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
14:30:54,713  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
14:30:54,731  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
14:30:54,921  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
14:30:54,922  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
14:30:55,067  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
14:30:55,185  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
14:30:55,238  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
14:30:55,271  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
14:30:55,366  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
14:30:55,370  INFO Environment:213 - HHH000206: hibernate.properties not found
14:30:55,372  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
14:30:55,436  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
14:30:55,515 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@489a722d
14:30:55,515 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@489a722d
14:30:55,515 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@489a722d
14:30:55,516 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2fe12ec3
14:30:55,518 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4fe91eed
14:30:55,519 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@62cbe18c
14:30:55,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e729046
14:30:55,521 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@7e729046
14:30:55,521 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e729046
14:30:55,523 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@49976824
14:30:55,524 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@49976824
14:30:55,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@49976824
14:30:55,526 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b9ce7a3
14:30:55,527 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b9ce7a3
14:30:55,527 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6b9ce7a3
14:30:55,528 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7b0d88e0
14:30:55,529 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7b0d88e0
14:30:55,529 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b0d88e0
14:30:55,531 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@64dc0a5f
14:30:55,531 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@64dc0a5f
14:30:55,531 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@64dc0a5f
14:30:55,533 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@460a4935
14:30:55,534 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@460a4935
14:30:55,534 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@460a4935
14:30:55,535 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@119f02d2
14:30:55,536 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@119f02d2
14:30:55,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@119f02d2
14:30:55,539 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@25af2afe
14:30:55,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@25af2afe
14:30:55,541 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5016934
14:30:55,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5016934
14:30:55,543 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7b3d3d3d
14:30:55,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7b3d3d3d
14:30:55,545 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@45cce4c2
14:30:55,546 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@79690a0a
14:30:55,548 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@34a48013
14:30:55,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a48013
14:30:55,550 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@29f58b44
14:30:55,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@29f58b44
14:30:55,553 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@3152d449
14:30:55,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3152d449
14:30:55,555 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5e8f1db2
14:30:55,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5e8f1db2
14:30:55,556 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5e8f1db2
14:30:55,558 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35ec3604
14:30:55,560 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4a648b35
14:30:55,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a648b35
14:30:55,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a648b35
14:30:55,561 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64a0ee65
14:30:55,563 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@753cfae3
14:30:55,563 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@753cfae3
14:30:55,564 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@72f5fb36
14:30:55,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72f5fb36
14:30:55,566 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77fa2dcc
14:30:55,566 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77fa2dcc
14:30:55,567 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@30dabb23
14:30:55,568 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@30dabb23
14:30:55,569 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@558fa64a
14:30:55,569 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@558fa64a
14:30:55,570 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5a63de07
14:30:55,572 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@c53c04e
14:30:55,572 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@c53c04e
14:30:55,572 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@c53c04e
14:30:55,574 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@68596992
14:30:55,574 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@68596992
14:30:55,574 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@68596992
14:30:55,575 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@119de68f
14:30:55,577 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@13c36d48
14:30:55,577 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@13c36d48
14:30:55,577 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@13c36d48
14:30:55,578 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25192b6e
14:30:55,579 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25192b6e
14:30:55,579 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25192b6e
14:30:55,580 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5e8359da
14:30:55,581 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@79c9a128
14:30:55,585 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4a9c188f
14:30:55,586 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4a9c188f
14:30:55,586 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60abe420
14:30:55,590 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@172f2717
14:30:55,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@172f2717
14:30:55,594 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4194a77f
14:30:55,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4194a77f
14:30:55,595 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@500d4de8
14:30:55,596 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f8b6743
14:30:55,598 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4414ee28
14:30:55,601 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1c12f0f4
14:30:55,602 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c12f0f4
14:30:55,602 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@86abdbd
14:30:55,603 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@42e14655
14:30:55,603 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@81198ed
14:30:55,603 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2806fe58
14:30:55,603 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@755c29b0
14:30:55,604 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dc70aa0
14:30:55,604 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39153b05
14:30:55,604 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26fee641
14:30:56,011  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
14:30:56,070  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
14:30:58,450  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:30:54 PDT 2015]; root of context hierarchy
14:30:58,505  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:30:54 PDT 2015]; root of context hierarchy
14:30:58,962  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@2c1c3c13, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3df99d5e, org.springframework.security.web.header.HeaderWriterFilter@1483ecad, org.springframework.security.web.csrf.CsrfFilter@7118a1b9, org.courseregistration.auth.CustomRestSecurityFilter@3ca9e72d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4dcb8e8b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46a6f51b, org.springframework.security.web.access.ExceptionTranslationFilter@7287811f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1e490ed]
14:30:59,081  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 14:30:54 PDT 2015]; root of context hierarchy
14:30:59,260  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5099 ms
14:31:26,208 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@566c50eb
14:31:26,210  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
14:31:26,261 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
14:31:26,277 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
<<<<<<< HEAD
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'
=======
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git

<<<<<<< HEAD
18:50:10,161 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,180 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:10,193 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:50:10,193 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:50:10,196 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:50:10,197 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:50:10,198 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:50:10,199 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:10,200 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:50:10,205 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:50:10,205 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:10,206 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:50:10,207 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,213 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:50:10,213 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:10,213 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,233 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:10,264 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:50:10,275 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:50:10,317 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:50:10,319 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
=======
14:31:26,277 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:31:26,307 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
14:31:26,345 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
14:31:26,347 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
14:31:26,349 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@7b3d3d3d
14:31:26,350 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
14:31:26,351 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
14:31:26,351 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
14:31:26,357 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
14:31:26,367 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
14:31:26,367 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
14:31:26,368 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

14:31:26,369 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:31:26,378 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
14:31:26,378 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
14:31:26,379 DEBUG ErrorCounter:95 - throwQueryException() : no errors
14:31:26,417 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
14:31:26,494 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,523 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,525 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,526 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,528 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,530 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,531 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,533 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,535 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,538 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,540 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
14:31:26,544 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,563 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,566 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,568 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,570 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,580 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,582 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,584 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,586 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,589 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,591 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,593 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,595 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,597 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,600 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,602 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,603 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,606 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,607 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,611 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,613 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,615 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
14:31:26,616 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
14:31:26,618 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:00:20,905  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
15:00:21,006  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 15:00:21 PDT 2015]; root of context hierarchy
15:00:21,048  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
15:00:21,518  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
15:00:21,521  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
15:00:21,568  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
15:00:21,587  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
15:00:21,777  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
15:00:21,778  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
15:00:21,924  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:00:22,054  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
15:00:22,110  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
15:00:22,146  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
15:00:22,250  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
15:00:22,255  INFO Environment:213 - HHH000206: hibernate.properties not found
15:00:22,257  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
15:00:22,345  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
15:00:22,439 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@9751c9
15:00:22,440 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@9751c9
15:00:22,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@9751c9
15:00:22,442 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30a8ac50
15:00:22,443 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3bbab2c9
15:00:22,445 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@27c9500c
15:00:22,447 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4707d60a
15:00:22,448 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4707d60a
15:00:22,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4707d60a
15:00:22,450 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6860c000
15:00:22,450 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6860c000
15:00:22,451 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6860c000
15:00:22,453 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d9639bb
15:00:22,454 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5d9639bb
15:00:22,454 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5d9639bb
15:00:22,456 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@174da9a0
15:00:22,457 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@174da9a0
15:00:22,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@174da9a0
15:00:22,459 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6e3552b0
15:00:22,460 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6e3552b0
15:00:22,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e3552b0
15:00:22,463 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2eb27091
15:00:22,464 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2eb27091
15:00:22,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2eb27091
15:00:22,466 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@35800dea
15:00:22,467 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@35800dea
15:00:22,467 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35800dea
15:00:22,470 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8fd3eee
15:00:22,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8fd3eee
15:00:22,473 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26c349fc
15:00:22,473 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26c349fc
15:00:22,475 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@306a9cd8
15:00:22,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@306a9cd8
15:00:22,476 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7b0a69b9
15:00:22,478 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5f171392
15:00:22,479 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7048d039
15:00:22,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7048d039
15:00:22,482 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2fc51562
15:00:22,482 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2fc51562
15:00:22,485 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7a9e44ff
15:00:22,485 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a9e44ff
15:00:22,487 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76d4e1af
15:00:22,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76d4e1af
15:00:22,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76d4e1af
15:00:22,492 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@64dc0a5f
15:00:22,493 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@296a350
15:00:22,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@296a350
15:00:22,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@296a350
15:00:22,495 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@460a4935
15:00:22,497 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3fb54673
15:00:22,497 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3fb54673
15:00:22,498 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2fedae96
15:00:22,499 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2fedae96
15:00:22,500 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f5b0926
15:00:22,500 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f5b0926
15:00:22,501 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2812368
15:00:22,502 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2812368
15:00:22,504 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75c36570
15:00:22,504 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75c36570
15:00:22,505 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@45cce4c2
15:00:22,507 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@619944a7
15:00:22,507 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@619944a7
15:00:22,507 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@619944a7
15:00:22,509 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50e7d8ba
15:00:22,509 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50e7d8ba
15:00:22,509 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50e7d8ba
15:00:22,511 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5dfaa2f0
15:00:22,512 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@fcee97c
15:00:22,513 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@fcee97c
15:00:22,513 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@fcee97c
15:00:22,514 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1d306d27
15:00:22,514 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1d306d27
15:00:22,515 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1d306d27
15:00:22,516 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@323b5264
15:00:22,517 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@5e8f1db2
15:00:22,524 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@226f472
15:00:22,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@226f472
15:00:22,525 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@40ff56f7
15:00:22,544 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@587df3e4
15:00:22,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@587df3e4
15:00:22,549 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5852605c
15:00:22,550 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5852605c
15:00:22,551 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7d2d5625
15:00:22,552 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7892635c
15:00:22,554 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5b3427c4
15:00:22,558 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5014ccf9
15:00:22,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5014ccf9
15:00:22,559 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3670af2b
15:00:22,559 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c8537e9
15:00:22,559 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@42d4de20
15:00:22,560 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2cc9a5a2
15:00:22,560 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ff35ee7
15:00:22,560 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9c188f
15:00:22,560 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2e5dea22
15:00:22,560 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fd8aefe
15:00:22,938  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
15:00:22,992  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
15:00:25,217  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:00:21 PDT 2015]; root of context hierarchy
15:00:25,268  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:00:21 PDT 2015]; root of context hierarchy
15:00:25,665  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@735d1db7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4040559d, org.springframework.security.web.header.HeaderWriterFilter@253c82ad, org.springframework.security.web.csrf.CsrfFilter@2153f0d7, org.courseregistration.auth.CustomRestSecurityFilter@3af8f1ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7856b790, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@393e6bdd, org.springframework.security.web.access.ExceptionTranslationFilter@7d5e165, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7adf0ff9]
15:00:25,766  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:00:21 PDT 2015]; root of context hierarchy
15:00:25,934  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5026 ms
15:02:46,530  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
15:02:46,628  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 15:02:46 PDT 2015]; root of context hierarchy
15:02:46,673  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
15:02:47,091  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
15:02:47,095  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
15:02:47,147  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
15:02:47,187  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
15:02:47,442  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
15:02:47,443  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
15:02:47,569  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:02:47,695  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
15:02:47,744  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
15:02:47,778  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
15:02:47,906  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
15:02:47,912  INFO Environment:213 - HHH000206: hibernate.properties not found
15:02:47,914  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
15:02:47,984  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
15:02:48,057 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6edd80fe
15:02:48,058 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6edd80fe
15:02:48,058 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6edd80fe
15:02:48,060 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7bbab46e
15:02:48,062 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34e700f4
15:02:48,063 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e92bded
15:02:48,065 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5c70eda4
15:02:48,065 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@5c70eda4
15:02:48,065 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5c70eda4
15:02:48,067 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@394c77e2
15:02:48,067 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@394c77e2
15:02:48,067 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@394c77e2
15:02:48,069 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@63fcc21
15:02:48,069 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@63fcc21
15:02:48,070 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63fcc21
15:02:48,071 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@225d93aa
15:02:48,071 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@225d93aa
15:02:48,072 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@225d93aa
15:02:48,073 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@52d625bd
15:02:48,073 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@52d625bd
15:02:48,074 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@52d625bd
15:02:48,076 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2582e213
15:02:48,077 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2582e213
15:02:48,077 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2582e213
15:02:48,079 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@52811dc1
15:02:48,079 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@52811dc1
15:02:48,079 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52811dc1
15:02:48,082 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5946e540
15:02:48,082 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5946e540
15:02:48,084 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2c64ee53
15:02:48,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2c64ee53
15:02:48,085 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@489a722d
15:02:48,085 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@489a722d
15:02:48,086 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fe12ec3
15:02:48,087 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a8ef0c2
15:02:48,089 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@62cbe18c
15:02:48,089 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@62cbe18c
15:02:48,092 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7ab20a7
15:02:48,092 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ab20a7
15:02:48,095 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@219bad15
15:02:48,095 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@219bad15
15:02:48,097 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@724e483f
15:02:48,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@724e483f
15:02:48,098 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@724e483f
15:02:48,101 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@651bec9a
15:02:48,103 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@445adbd7
15:02:48,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@445adbd7
15:02:48,104 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@445adbd7
15:02:48,105 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@296a350
15:02:48,106 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@4ce9985f
15:02:48,106 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4ce9985f
15:02:48,107 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@8c54f48
15:02:48,108 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@8c54f48
15:02:48,109 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2dbfcbe4
15:02:48,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2dbfcbe4
15:02:48,111 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@48a32c4f
15:02:48,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@48a32c4f
15:02:48,113 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@273c4b3
15:02:48,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@273c4b3
15:02:48,114 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b57dc2
15:02:48,116 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@3129792a
15:02:48,116 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3129792a
15:02:48,116 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@3129792a
15:02:48,118 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1f612968
15:02:48,118 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1f612968
15:02:48,119 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1f612968
15:02:48,120 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4548bfc7
15:02:48,121 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7bd6c35e
15:02:48,121 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7bd6c35e
15:02:48,122 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7bd6c35e
15:02:48,123 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48682f91
15:02:48,124 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48682f91
15:02:48,124 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48682f91
15:02:48,125 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1cb4cad0
15:02:48,126 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@386b4f7e
15:02:48,132 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@72f5fb36
15:02:48,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72f5fb36
15:02:48,134 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6edd8d56
15:02:48,140 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6da14f7f
15:02:48,141 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6da14f7f
15:02:48,145 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@25192b6e
15:02:48,145 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@25192b6e
15:02:48,146 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6ea0dfaa
15:02:48,147 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@36b6802f
15:02:48,148 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@51c7d472
15:02:48,152 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@4caca86d
15:02:48,152 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4caca86d
15:02:48,153 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d8f65a1
15:02:48,154 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5014ccf9
15:02:48,154 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58f259bd
15:02:48,154 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@362109d0
15:02:48,154 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4075c0d8
15:02:48,155 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3670af2b
15:02:48,155 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7c8537e9
15:02:48,155 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@42d4de20
15:02:48,441  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
15:02:48,480  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
15:02:51,042  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:02:46 PDT 2015]; root of context hierarchy
15:02:51,106  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:02:46 PDT 2015]; root of context hierarchy
15:02:51,572  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@60bc259a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12e33c7b, org.springframework.security.web.header.HeaderWriterFilter@24b9c037, org.springframework.security.web.csrf.CsrfFilter@73f83bff, org.courseregistration.auth.CustomRestSecurityFilter@72e950ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79e2aa2d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13b0755e, org.springframework.security.web.access.ExceptionTranslationFilter@21259314, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19f3c1f7]
15:02:51,708  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:02:46 PDT 2015]; root of context hierarchy
15:02:51,923  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5390 ms
15:04:03,161 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13db833b
15:04:03,164  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
15:04:03,204 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from users as u where u.username=:username
15:04:03,218 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
<<<<<<< HEAD
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

18:50:10,319 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,320 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:10,320 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
18:50:10,320 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:50:10,321 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
18:50:10,321 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:50:10,322 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
18:50:10,323 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
18:50:10,323 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:50:10,323 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
18:50:10,323 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:50:10,324 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
18:50:10,324 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:10,324 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
18:50:10,324 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:50:10,325 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
18:50:10,325 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
18:50:10,325 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
18:50:10,326 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:10,326 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

18:50:10,326 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,327 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
18:50:10,327 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:50:10,327 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:10,327 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
18:50:10,333 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,334 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,336 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,337 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,339 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,340 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:10,341 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:10,343 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:38,385 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:50:38,390 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:50:38,391 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:50:38,412 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.code=:param0 )
18:50:38,416 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
=======
    |  |     +-[IDENT] Node: 'users'
    |  |     \-[ALIAS] Node: 'u'
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
<<<<<<< HEAD
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'code'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'
=======
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git

<<<<<<< HEAD
18:50:38,417 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,417 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:50:38,418 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
18:50:38,419 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,419 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
18:50:38,419 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
18:50:38,420 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
18:50:38,420 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
18:50:38,420 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
18:50:38,421 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

18:50:38,421 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,421 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
18:50:38,422 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
18:50:38,422 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
18:50:38,422 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
18:50:38,422 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
18:50:38,423 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

18:50:38,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,423 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
18:50:38,423 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@27f3f512
18:50:38,424 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
18:50:38,425 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
18:50:38,425 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
18:50:38,425 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
18:50:38,425 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:50:38,426 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( = ( course1_.code course1_.course_id code ) ? ) ) ) )
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
18:50:38,426 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
18:50:38,427 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:50:38,427 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'code' {originalText=code}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@4f116ca2}

18:50:38,427 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,427 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias1.code=:param0 )
18:50:38,428 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and course1_.code=?
18:50:38,428 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:50:38,434 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and course1_.code=?
18:50:38,440 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:50:38,441 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:50:38,442 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
18:51:32,350 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:51:32,355 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:51:32,356 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:51:32,362 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
18:51:32,372 ERROR GenericExceptionMapper:21 - Cannot determine link for org.courseregistration.model.Section! No EntityLinks instance found supporting the domain type!
java.lang.IllegalArgumentException: Cannot determine link for org.courseregistration.model.Section! No EntityLinks instance found supporting the domain type!
	at org.springframework.hateoas.core.DelegatingEntityLinks.getPluginFor(DelegatingEntityLinks.java:102)
	at org.springframework.hateoas.core.DelegatingEntityLinks.linkToSingleResource(DelegatingEntityLinks.java:78)
	at org.courseregistration.controller.SectionController.findSectionById(SectionController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:52:21,971  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:49:57 PDT 2015]; root of context hierarchy
18:52:21,977  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:52:22,845  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:52:22,895  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:22,917  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:52:23,061  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:52:23,063  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:52:23,081  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:52:23,091  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:52:23,182  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:52:23,183  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:52:23,252  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:52:23,300  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:52:23,324  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:52:23,345  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:52:23,394  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:52:23,395  INFO Environment:213 - HHH000206: hibernate.properties not found
18:52:23,396  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:52:23,421  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2da37678
18:52:23,461 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ab828f9
18:52:23,461 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@625a3633
18:52:23,462 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@432a95f4
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65557c0
18:52:23,463 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@594a0af
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,464 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6b3b9b4a
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@228d63ef
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@228d63ef
18:52:23,465 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@228d63ef
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cb735f3
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cb735f3
18:52:23,466 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5cb735f3
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4856487f
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4856487f
18:52:23,467 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4856487f
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2658905a
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2658905a
18:52:23,468 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2658905a
18:52:23,469 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6dbdc774
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6dbdc774
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3423f8ba
18:52:23,470 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3423f8ba
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2ee40f40
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2ee40f40
18:52:23,471 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a9029c
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ba71b57
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@66e473c3
18:52:23,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@66e473c3
18:52:23,473 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@4f5542c2
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4f5542c2
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@66234dce
18:52:23,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66234dce
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@737559fa
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@737559fa
18:52:23,475 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@737559fa
18:52:23,476 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@40a0f327
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6e8ab7c9
18:52:23,477 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@154b5aed
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@236351cd
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@236351cd
18:52:23,478 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@78122a84
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78122a84
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@164ef9f9
18:52:23,479 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@164ef9f9
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@4b4b8031
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4b4b8031
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54964f2f
18:52:23,480 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54964f2f
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3ab786ce
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@117caf70
18:52:23,481 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@117caf70
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@117caf70
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,482 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19abe8e
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4449510b
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,483 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3a48480a
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6eadae3d
18:52:23,484 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6828d1a4
18:52:23,485 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1a257664
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3b8b3975
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3b8b3975
18:52:23,487 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@15a95ae0
18:52:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6d75be39
18:52:23,489 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d75be39
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5182beb5
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5182beb5
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4876a758
18:52:23,491 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@451474a8
18:52:23,492 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2b483bb7
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@13d1c192
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@13d1c192
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@131d24ce
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e5dba6e
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d722fb
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@572c4d1f
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d6d2860
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e006969
18:52:23,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@72fc4aa8
18:52:23,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@478da55d
18:52:23,674  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:52:23,696  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:52:24,841  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:24,862  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:24,982  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5235f3ff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d1c3c55, org.springframework.security.web.header.HeaderWriterFilter@761e7af2, org.springframework.security.web.csrf.CsrfFilter@8c8274, org.courseregistration.auth.CustomRestSecurityFilter@7ddb2391, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@217956eb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@243561dc, org.springframework.security.web.access.ExceptionTranslationFilter@40ced80c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@642dbc2f]
18:52:25,015  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:25,058  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2211 ms
18:52:55,994  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:52:22 PDT 2015]; root of context hierarchy
18:52:56,003  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:52:56,742  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:52:56,784  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:56,806  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:52:56,929  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:52:56,931  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:52:56,948  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:52:56,961  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:52:57,054  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:52:57,055  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:52:57,122  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:52:57,164  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:52:57,184  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:52:57,553  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:52:57,606  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:52:57,607  INFO Environment:213 - HHH000206: hibernate.properties not found
18:52:57,608  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:52:57,637  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,682 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@b4921a0
18:52:57,683 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2030e9b3
18:52:57,683 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2ffa119f
18:52:57,684 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@50af8358
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4890e39f
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@e24faba
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@e24faba
18:52:57,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@e24faba
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b2fe23
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@691690c7
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@691690c7
18:52:57,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@691690c7
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2563e1ac
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2563e1ac
18:52:57,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2563e1ac
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1833944c
18:52:57,690 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fff40f0
18:52:57,691 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3be2e05f
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3be2e05f
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@395a0afa
18:52:57,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@395a0afa
18:52:57,693 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6aac4716
18:52:57,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6aac4716
18:52:57,694 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5195c62b
18:52:57,694 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a6ed5a8
18:52:57,695 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1e9d9023
18:52:57,695 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1e9d9023
18:52:57,696 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@b59e5
18:52:57,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@b59e5
18:52:57,697 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@56a9b424
18:52:57,697 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56a9b424
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76caf7ed
18:52:57,700 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ba5acb4
18:52:57,700 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4de714d4
18:52:57,701 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cd5e410
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@298dd188
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@298dd188
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2d291f56
18:52:57,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2d291f56
18:52:57,703 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6d0d0d56
18:52:57,703 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6d0d0d56
18:52:57,704 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2b4e9eb
18:52:57,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b4e9eb
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2035d47a
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2035d47a
18:52:57,705 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@195e934c
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7b719698
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7b719698
18:52:57,706 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7b719698
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4e761e9e
18:52:57,707 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@61d9af54
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@473fb990
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@473fb990
18:52:57,708 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@473fb990
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6944fc39
18:52:57,709 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@79ccd8b
18:52:57,710 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@23b02a8f
18:52:57,712 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4525cc3f
18:52:57,712 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4525cc3f
18:52:57,713 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7bc684eb
18:52:57,715 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@11fde94b
18:52:57,715 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@11fde94b
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@65340fb3
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@65340fb3
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6b6966ec
18:52:57,717 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1c47fbc2
18:52:57,718 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7b952ac1
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@25b2472f
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@25b2472f
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@732f7dc3
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4413d7b6
18:52:57,720 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@460c35d6
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5e5643f
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dacc025
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57d81841
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@705d35e9
18:52:57,721 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5eb76341
18:52:57,916  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:52:57,935  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:52:58,852  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:58,873  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:58,994  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7428834c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e1a62d8, org.springframework.security.web.header.HeaderWriterFilter@2eb4de2c, org.springframework.security.web.csrf.CsrfFilter@1cb6d79a, org.courseregistration.auth.CustomRestSecurityFilter@2cb415a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51c5ae4f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59084fe5, org.springframework.security.web.access.ExceptionTranslationFilter@73284959, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f3d5392]
18:52:59,032  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:52:59,079  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2336 ms
18:54:15,262  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:52:56 PDT 2015]; root of context hierarchy
18:54:15,272  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:54:20,098  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:54:20,148  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:20,170  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:54:20,349  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:54:20,351  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:54:20,369  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:54:20,379  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:54:20,469  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:54:20,470  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:54:20,539  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:54:20,587  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:54:20,611  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:54:20,628  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:54:20,678  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:54:20,679  INFO Environment:213 - HHH000206: hibernate.properties not found
18:54:20,680  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:54:20,710  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:54:20,787 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
18:54:20,788 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
18:54:20,789 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
18:54:20,789 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
18:54:20,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,790 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
18:54:20,792 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:54:20,792 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
18:54:20,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
18:54:20,793 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
18:54:20,794 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
18:54:20,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
18:54:20,795 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
18:54:20,798 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
18:54:20,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
18:54:20,800 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
18:54:20,800 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
18:54:20,801 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
18:54:20,801 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
18:54:20,802 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
18:54:20,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
18:54:20,803 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
18:54:20,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
18:54:20,805 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
18:54:20,805 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
18:54:20,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
18:54:20,808 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
18:54:20,808 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
18:54:20,809 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
18:54:20,810 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
18:54:20,810 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
18:54:20,811 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
18:54:20,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
18:54:20,813 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
18:54:20,813 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
18:54:20,814 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,815 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,816 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
18:54:20,817 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
18:54:20,818 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
18:54:20,819 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
18:54:20,820 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
18:54:20,822 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
18:54:20,822 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
18:54:20,823 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
18:54:20,825 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
18:54:20,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
18:54:20,827 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
18:54:20,828 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
18:54:20,830 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
18:54:20,831 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
18:54:21,121  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:54:21,144  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:54:22,121  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,144  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,279  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
18:54:22,317  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:54:22,369  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2269 ms
18:54:45,265 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f9b8580
18:54:45,265  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:54:45,288 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:54:45,295 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

18:54:45,295 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,314 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:54:45,327 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:54:45,328 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:54:45,330 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:54:45,331 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
18:54:45,332 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
18:54:45,333 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:54:45,334 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
18:54:45,339 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:54:45,339 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:54:45,340 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

18:54:45,340 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,346 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
18:54:45,346 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:54:45,346 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:54:45,366 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:54:45,396 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:54:45,406 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:54:45,448 DEBUG SQL:92 - select section0_.section_id as section_1_5_0_, section0_.class_end_time as class_en2_5_0_, section0_.class_start_time as class_st3_5_0_, section0_.course_id as course_13_5_0_, section0_.day_of_week as day_of_w4_5_0_, section0_.class_end_date as class_en5_5_0_, section0_.mode_of_instruction as mode_of_6_5_0_, section0_.price as price7_5_0_, section0_.professor_id as profess14_5_0_, section0_.room_number as room_num8_5_0_, section0_.semester as semester9_5_0_, section0_.class_start_date as class_s10_5_0_, section0_.total_capacity as total_c11_5_0_, section0_.wait_list_capacity as wait_li12_5_0_, course1_.course_id as course_i1_1_1_, course1_.code as code2_1_1_, course1_.department as departme3_1_1_, course1_.description as descript4_1_1_, course1_.name as name5_1_1_, course1_.no_of_credits as no_of_cr6_1_1_, course1_.pre_requisite_course as pre_requ7_1_1_, course1_.program as program8_1_1_, professor2_.user_id as user_id1_8_2_, professor2_1_.address_id as address10_8_2_, professor2_1_.college_id as college_2_8_2_, professor2_1_.date_of_birth as date_of_3_8_2_, professor2_1_.email_id as email_id4_8_2_, professor2_1_.first_name as first_na5_8_2_, professor2_1_.password as password6_8_2_, professor2_1_.last_name as last_nam7_8_2_, professor2_1_.middle_name as middle_n8_8_2_, professor2_1_.phone_number as phone_nu9_8_2_, professor2_.faculty_type as faculty_1_3_2_, professor2_.office_hours_from_time as office_h2_3_2_, professor2_.office_hours_to_time as office_h3_3_2_, professor2_.years_of_experience as years_of4_3_2_, address3_.address_id as address_1_0_3_, address3_.apt_no as apt_no2_0_3_, address3_.city as city3_0_3_, address3_.state as state4_0_3_, address3_.street_name as street_n5_0_3_, address3_.zip_code as zip_code6_0_3_, roles4_.user_id as user_id1_7_4_, role5_.role_id as role_id2_7_4_, role5_.role_id as role_id1_4_5_, role5_.name as name2_4_5_ from section_info section0_ left outer join course_details course1_ on section0_.course_id=course1_.course_id left outer join professor_details professor2_ on section0_.professor_id=professor2_.user_id left outer join users professor2_1_ on professor2_.user_id=professor2_1_.user_id left outer join address address3_ on professor2_1_.address_id=address3_.address_id left outer join user_role roles4_ on professor2_.user_id=roles4_.user_id left outer join roles role5_ on roles4_.role_id=role5_.role_id where section0_.section_id=?
18:57:36,452  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:54:20 PDT 2015]; root of context hierarchy
18:57:36,460  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
18:57:37,268  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:57:37,312  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:37,337  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:57:37,478  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:57:37,480  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:57:37,499  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:57:37,508  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:57:37,594  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:57:37,595  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:57:37,655  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:57:37,697  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:57:37,717  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:57:37,736  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:57:37,785  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:57:37,786  INFO Environment:213 - HHH000206: hibernate.properties not found
18:57:37,787  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:57:37,814  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:57:37,857 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,857 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,858 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ef0bbb5
18:57:37,858 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@28c0ca9b
18:57:37,859 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@471bfae9
18:57:37,859 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@56ea94a9
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@112d1321
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@112d1321
18:57:37,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@112d1321
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@18ba0f0c
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@179b75bc
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@179b75bc
18:57:37,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@179b75bc
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4e13345f
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4e13345f
18:57:37,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4e13345f
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3bc39b53
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3bc39b53
18:57:37,864 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3bc39b53
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@562833df
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@562833df
18:57:37,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@562833df
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,866 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4cf90149
18:57:37,867 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2724cb3e
18:57:37,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2724cb3e
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@571dc6cc
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@571dc6cc
18:57:37,868 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7f8c0ede
18:57:37,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f8c0ede
18:57:37,869 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a8e5b78
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@12c2a0ee
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4be8ee86
18:57:37,870 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4be8ee86
18:57:37,871 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@dd07c30
18:57:37,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@dd07c30
18:57:37,872 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2afa715b
18:57:37,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2afa715b
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@37932648
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@37932648
18:57:37,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@37932648
18:57:37,874 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@49392a81
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,875 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@765c35a9
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15130335
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@69ef6a2c
18:57:37,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@69ef6a2c
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6ba4fbd8
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ba4fbd8
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b11c403
18:57:37,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b11c403
18:57:37,878 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1bde51d6
18:57:37,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1bde51d6
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@31146355
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@31146355
18:57:37,879 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@582fd146
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6569054d
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6569054d
18:57:37,880 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6569054d
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,881 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7236d195
18:57:37,882 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1c0b4fd2
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4133024a
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4133024a
18:57:37,883 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4133024a
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2146ede5
18:57:37,884 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3e74a979
18:57:37,885 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@790dbbec
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6d26484a
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d26484a
18:57:37,887 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@63f9e33b
18:57:37,889 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@614329fd
18:57:37,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@614329fd
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@60f14760
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@60f14760
18:57:37,891 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@bdaccfb
18:57:37,892 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@72905b1c
18:57:37,892 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@11d5708e
18:57:37,894 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7e48a198
18:57:37,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e48a198
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75ef767f
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e905d3b
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@37f804d3
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2fe1ddb7
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21b30aba
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6d06f232
18:57:37,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a2faddd
18:57:37,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3b02c74a
18:57:38,067  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:57:38,088  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:57:39,411  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,444  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,614  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@6563cfd7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@364e8ea9, org.springframework.security.web.header.HeaderWriterFilter@784e9e35, org.springframework.security.web.csrf.CsrfFilter@76eca980, org.courseregistration.auth.CustomRestSecurityFilter@d8acdfd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f733123, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43c0a1ce, org.springframework.security.web.access.ExceptionTranslationFilter@5073b09f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@bcd6a49]
18:57:39,650  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
18:57:39,692  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2423 ms
20:17:22,857  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 18:57:37 PDT 2015]; root of context hierarchy
20:17:22,866  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
20:17:23,576  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:17:23,620  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:17:23 PDT 2015]; root of context hierarchy
20:17:23,640  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:17:23,759  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:17:23,761  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:17:23,780  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:17:23,789  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:17:23,869  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:17:23,870  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:17:23,936  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:17:23,981  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:17:24,187  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:17:24,203  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:17:24,256  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:17:24,257  INFO Environment:213 - HHH000206: hibernate.properties not found
20:17:24,258  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:17:24,283  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c802fd7
20:17:24,322 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2db66860
20:17:24,323 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44cb2cd4
20:17:24,323 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4db7c217
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c513418
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c513418
20:17:24,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c513418
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@600b56ef
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@600b56ef
20:17:24,325 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@600b56ef
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78e93080
20:17:24,326 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64006901
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ee14f37
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ee14f37
20:17:24,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ee14f37
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ff7392
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@19ff7392
20:17:24,328 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@19ff7392
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@208470cc
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@208470cc
20:17:24,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@208470cc
20:17:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@9aa0e94
20:17:24,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@9aa0e94
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6dbc3b4b
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6dbc3b4b
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@3615e25a
20:17:24,331 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3615e25a
20:17:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@207e5c1b
20:17:24,332 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2cd362bd
20:17:24,333 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@24aec70
20:17:24,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@24aec70
20:17:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f3f3847
20:17:24,334 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f3f3847
20:17:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2b074f1b
20:17:24,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b074f1b
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4b890dad
20:17:24,336 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ba35e4e
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,337 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10ab6527
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47d67097
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@10ce2692
20:17:24,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10ce2692
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@a488e35
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@a488e35
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3e1d45d6
20:17:24,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3e1d45d6
20:17:24,340 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@494b4d3d
20:17:24,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@494b4d3d
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@efb260e
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@efb260e
20:17:24,341 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6af28ee
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6587e66b
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,342 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3fec2b04
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@70f2bc4f
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,343 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@41224b4e
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,344 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7ab35de6
20:17:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@dea910a
20:17:24,345 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4b66d7b
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@ebc8db6
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@ebc8db6
20:17:24,347 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4b8c5c34
20:17:24,349 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@68f17362
20:17:24,349 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@68f17362
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@9c48180
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@9c48180
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@138cd04d
20:17:24,351 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@a2aa4d5
20:17:24,352 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@43a71742
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5e9d8868
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5e9d8868
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a4fc645
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7823c9ac
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24c174b
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@33686a0
20:17:24,354 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37ff156d
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@51f7c497
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@336367ad
20:17:24,355 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d7f4e7
20:17:24,421  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:17:24,429  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:17:24,440  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:17:24,791  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:17:24,799 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:27:15,547  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:27:15,589  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:27:15 PDT 2015]; root of context hierarchy
20:27:15,611  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:27:15,740  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:27:15,741  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:27:15,761  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:27:15,769  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:27:15,852  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:27:15,853  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:27:15,915  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:27:15,957  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:27:15,979  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:27:15,996  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:27:16,041  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:27:16,042  INFO Environment:213 - HHH000206: hibernate.properties not found
20:27:16,043  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:27:16,069  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:27:16,109 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@a2a59b3
20:27:16,110 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@19fe87af
20:27:16,111 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3982baaf
20:27:16,111 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2e2ab7f4
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@370ce19b
20:27:16,112 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fe2b7cb
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c0a629a
20:27:16,113 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@c0a629a
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@c0a629a
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@468bbdb2
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2e1f485d
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@2e1f485d
20:27:16,115 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@2e1f485d
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4b46b153
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4b46b153
20:27:16,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4b46b153
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51058bf
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@51058bf
20:27:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51058bf
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@536200d6
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@536200d6
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d3b80a2
20:27:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d3b80a2
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2c3c022d
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2c3c022d
20:27:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@69dddb5c
20:27:16,120 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47dd0001
20:27:16,120 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@405cd4c9
20:27:16,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@405cd4c9
20:27:16,122 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@f96e0ec
20:27:16,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@f96e0ec
20:27:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@264f7637
20:27:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@264f7637
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1e3255ca
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@360c121
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@58277f6b
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13383be1
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6ec792d6
20:27:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6ec792d6
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2e5aff50
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2e5aff50
20:27:16,127 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@aff8a43
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@aff8a43
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@52ecccce
20:27:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@52ecccce
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f96bdbd
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f96bdbd
20:27:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d5b76a9
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@20cec734
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@20cec734
20:27:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@20cec734
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53565231
20:27:16,131 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@44a5348f
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@14664e38
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23893a64
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@4a7d74a9
20:27:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3e202815
20:27:16,135 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@cb1f688
20:27:16,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@cb1f688
20:27:16,136 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ca5c723
20:27:16,137 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2475aa
20:27:16,137 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2475aa
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4692b101
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4692b101
20:27:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@677c7768
20:27:16,140 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2aa6d454
20:27:16,140 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a28fe53
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6581dd99
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6581dd99
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1f2ba5ff
20:27:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74adce96
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5dab231e
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22eec22a
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60289fd5
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7aeb2438
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e5c5ba8
20:27:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2af729db
20:27:16,212  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:27:16,221  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:27:16,232  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:27:16,577  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:27:16,583 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 29 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 34 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 40 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 58 more
20:33:08,160  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:33:08,209  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:33:08 PDT 2015]; root of context hierarchy
20:33:08,231  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:33:08,416  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:33:08,418  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:33:08,440  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:33:08,450  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:33:08,539  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:33:08,540  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:33:08,608  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:33:08,658  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:33:08,680  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:33:08,697  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:33:08,746  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:33:08,748  INFO Environment:213 - HHH000206: hibernate.properties not found
20:33:08,749  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:33:08,777  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:33:08,854 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
20:33:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
20:33:08,856 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
20:33:08,857 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
20:33:08,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,858 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,859 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,860 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
20:33:08,860 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
20:33:08,861 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
20:33:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:33:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:33:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
20:33:08,866 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:33:08,867 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:33:08,867 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
20:33:08,868 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
20:33:08,868 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
20:33:08,869 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
20:33:08,869 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
20:33:08,870 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
20:33:08,870 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
20:33:08,871 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
20:33:08,872 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
20:33:08,872 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
20:33:08,873 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
20:33:08,873 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
20:33:08,874 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
20:33:08,875 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,876 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
20:33:08,877 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
20:33:08,877 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
20:33:08,878 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
20:33:08,879 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
20:33:08,879 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
20:33:08,880 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
20:33:08,880 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
20:33:08,881 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,882 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
20:33:08,883 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,884 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,884 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
20:33:08,885 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,886 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,887 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
20:33:08,887 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
20:33:08,888 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
20:33:08,890 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
20:33:08,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
20:33:08,891 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
20:33:08,893 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
20:33:08,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
20:33:08,895 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
20:33:08,896 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
20:33:08,897 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
20:33:08,898 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
20:33:08,899 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
20:33:08,900 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
20:33:09,053  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 0 ms ago.
20:33:09,060  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:33:09,072  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
20:33:09,434  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 64 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 69 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 75 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 93 more
20:33:09,444 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:862)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:286)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 64 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 69 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 75 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 93 more
20:34:12,483  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:34:12,536  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:12,558  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:34:12,764  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:34:12,766  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:34:12,784  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:34:12,793  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:34:12,881  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:34:12,882  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:34:12,949  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:34:12,999  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:34:13,022  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:34:13,041  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:34:13,092  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:34:13,093  INFO Environment:213 - HHH000206: hibernate.properties not found
20:34:13,094  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:34:13,123  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78a8978a
20:34:13,198 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1e54a6b1
20:34:13,198 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4351ed61
20:34:13,199 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5042e3d0
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2574a9e3
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11d86b9d
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5403799b
20:34:13,202 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5403799b
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@27f3f512
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@27f3f512
20:34:13,203 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27f3f512
20:34:13,204 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:34:13,204 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3ece79fe
20:34:13,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ece79fe
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,206 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@33d60b7e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@59a2388e
20:34:13,209 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:34:13,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4aeb0e2b
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d705112
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d705112
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4f116ca2
20:34:13,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f116ca2
20:34:13,211 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@581b1c08
20:34:13,211 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@64763e49
20:34:13,212 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3caafa67
20:34:13,213 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3caafa67
20:34:13,214 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59838256
20:34:13,214 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59838256
20:34:13,215 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1376883
20:34:13,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1376883
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@411cd156
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@411cd156
20:34:13,216 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@411cd156
20:34:13,218 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@61cda923
20:34:13,218 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@77cb452c
20:34:13,219 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6f25bf88
20:34:13,220 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@317890ea
20:34:13,220 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@317890ea
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@62a54948
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@62a54948
20:34:13,221 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b736fee
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b736fee
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@8f40022
20:34:13,222 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f40022
20:34:13,223 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5a08b084
20:34:13,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5a08b084
20:34:13,224 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9a878
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,225 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b7f06c7
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@19e21f89
20:34:13,227 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7f42e06e
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@50110971
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@50110971
20:34:13,228 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@50110971
20:34:13,229 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,229 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,230 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@315c081
20:34:13,230 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@5bcec67e
20:34:13,231 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1bbddada
20:34:13,233 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6b321262
20:34:13,233 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b321262
20:34:13,234 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@357bc488
20:34:13,236 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@697d6ded
20:34:13,236 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@697d6ded
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5921b93c
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5921b93c
20:34:13,238 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3dce6dd8
20:34:13,239 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b4732dc
20:34:13,239 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@168ad26f
20:34:13,241 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1a950fdd
20:34:13,241 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a950fdd
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@570ba13
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@37a9b687
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@525b1b70
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16d07cf3
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@16f0ec18
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c977dcf
20:34:13,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@661d6bb6
20:34:13,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@733fb462
20:34:13,535  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:34:13,557  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
20:34:14,543  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,565  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,697  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@21f91efa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4df0d9f8, org.springframework.security.web.header.HeaderWriterFilter@35e75f7a, org.springframework.security.web.csrf.CsrfFilter@4f7bb8df, org.courseregistration.auth.CustomRestSecurityFilter@269c7104, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de84336, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627bcd7e, org.springframework.security.web.access.ExceptionTranslationFilter@70543cae, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@350567f1]
20:34:14,736  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:34:14,785  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2300 ms
20:34:21,204 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@32f5e427
20:34:21,204  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
20:34:21,227 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
20:34:21,235 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

20:34:21,235 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,254 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
20:34:21,267 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
20:34:21,268 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
20:34:21,270 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
20:34:21,271 DEBUG DotNode:654 - getDataType() : collegeId -> org.hibernate.type.LongType@3ece79fe
20:34:21,272 DEBUG FromReferenceNode:60 - Resolved : u.collegeId -> user0_.college_id
20:34:21,273 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
20:34:21,273 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id collegeId ) ? ) ) )
20:34:21,278 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
20:34:21,278 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
20:34:21,279 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=collegeId,dereferenceType=PRIMITIVE,getPropertyPath=collegeId,path=u.collegeId,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'collegeId' {originalText=collegeId}
          \-[NAMED_PARAM] ParameterNode: '?' {name=collegeId, expectedType=org.hibernate.type.LongType@3ece79fe}

20:34:21,279 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,285 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
20:34:21,285 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:21,285 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:21,306 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:21,336 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
20:34:21,347 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
20:34:21,390 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
20:34:34,376 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
20:34:34,382 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
20:34:34,383 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
20:34:34,395 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
20:34:34,397 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

20:34:34,397 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,398 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
20:34:34,398 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
20:34:34,399 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
20:34:34,399 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
20:34:34,400 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
20:34:34,401 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
20:34:34,402 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
20:34:34,402 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
20:34:34,402 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
20:34:34,403 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@4f116ca2
20:34:34,403 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
20:34:34,403 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
20:34:34,403 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
20:34:34,404 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
20:34:34,404 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
20:34:34,405 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
20:34:34,405 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
20:34:34,405 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
20:34:34,406 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

20:34:34,406 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,406 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
20:34:34,406 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
20:34:34,406 DEBUG ErrorCounter:95 - throwQueryException() : no errors
20:34:34,407 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
20:34:34,412 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,413 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,415 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,416 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,417 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,420 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
20:34:34,421 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:34:34,423 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
20:39:37,856  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 20:34:12 PDT 2015]; root of context hierarchy
20:39:37,862  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
20:39:38,661  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
20:39:38,708  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:38,734  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
20:39:38,881  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
20:39:38,883  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
20:39:38,903  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
20:39:38,912  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
20:39:38,998  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
20:39:38,999  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
20:39:39,062  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
20:39:39,105  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
20:39:39,126  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
20:39:39,147  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
20:39:39,198  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
20:39:39,200  INFO Environment:213 - HHH000206: hibernate.properties not found
20:39:39,201  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
20:39:39,232  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
20:39:39,276 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ad5cfd9
20:39:39,277 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@528e9a3b
20:39:39,278 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6393d402
20:39:39,278 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3e061ade
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1507e59f
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bcbbf8e
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5afc4022
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5afc4022
20:39:39,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5afc4022
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7b6a26e
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75af7231
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75af7231
20:39:39,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@75af7231
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73b5b6ee
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1607f38d
20:39:39,286 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@510d8ee0
20:39:39,286 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@510d8ee0
20:39:39,287 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@20f51fd7
20:39:39,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@20f51fd7
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@16f4c625
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@16f4c625
20:39:39,288 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28515f66
20:39:39,289 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fa8189d
20:39:39,289 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@16229c1d
20:39:39,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16229c1d
20:39:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@10e4efe4
20:39:39,291 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@10e4efe4
20:39:39,292 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6cee6787
20:39:39,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6cee6787
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,293 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d4c1039
20:39:39,294 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1097d934
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@22f7b8d7
20:39:39,295 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@41d02757
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3d65b692
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3d65b692
20:39:39,296 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@de0f8b
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@de0f8b
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@638d1ad
20:39:39,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@638d1ad
20:39:39,298 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@779c49f1
20:39:39,298 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@779c49f1
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@8788aa8
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@8788aa8
20:39:39,299 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5e7d6497
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6c863581
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c863581
20:39:39,300 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6c863581
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@466c8121
20:39:39,301 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@48abf1b5
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,302 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5f64f518
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,303 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a164bb5
20:39:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2d6eaca1
20:39:39,304 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1ac7e822
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5988a793
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5988a793
20:39:39,307 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@19e76a5c
20:39:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@1d16a1c
20:39:39,309 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d16a1c
20:39:39,311 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1bb288b1
20:39:39,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1bb288b1
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@62253cce
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@190dba03
20:39:39,312 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5dfd397e
20:39:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@6203abce
20:39:39,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6203abce
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@37bbc674
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48194696
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27a121c0
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@44f6ccda
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d972a56
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2fb8e484
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1397f92
20:39:39,315 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@735be373
20:39:39,495  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
20:39:39,517  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
20:39:40,566  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:40,590  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:41,073  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@79333eff, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@35596a6, org.springframework.security.web.header.HeaderWriterFilter@28a63f90, org.springframework.security.web.csrf.CsrfFilter@130c5d0a, org.courseregistration.auth.CustomRestSecurityFilter@73284d52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ce70537, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4524eb84, org.springframework.security.web.access.ExceptionTranslationFilter@34311a27, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@542832e]
20:39:41,125  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
20:39:41,189  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2526 ms
08:02:03,508  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 20:39:38 PDT 2015]; root of context hierarchy
08:02:03,538  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
08:02:04,835  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
08:02:04,887  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
08:02:04,914  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
08:02:04,941 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 41 in XML document from ServletContext resource [/WEB-INF/applicationContext.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:605)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:509)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:548)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.xml.sax.SAXParseException; lineNumber: 41; columnNumber: 2; The content of elements must consist of well-formed character data or markup.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:441)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1437)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.startOfMarkup(XMLDocumentFragmentScannerImpl.java:2636)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2734)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:348)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 30 more
08:27:33,444  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
08:27:33,446  WARN XmlWebApplicationContext:972 - Exception thrown from LifecycleProcessor on context close
java.lang.IllegalStateException: LifecycleProcessor not initialized - call 'refresh' before invoking lifecycle methods via the context: Root WebApplicationContext: startup date [Wed Oct 28 08:02:04 PDT 2015]; root of context hierarchy
	at org.springframework.context.support.AbstractApplicationContext.getLifecycleProcessor(AbstractApplicationContext.java:414)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:969)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:928)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:583)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:116)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextDestroyed(ContextHandler.java:843)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextDestroyed(ServletContextHandler.java:543)
	at org.eclipse.jetty.server.handler.ContextHandler.stopContext(ContextHandler.java:824)
	at org.eclipse.jetty.servlet.ServletContextHandler.stopContext(ServletContextHandler.java:353)
	at org.eclipse.jetty.webapp.WebAppContext.stopWebapp(WebAppContext.java:1386)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.stopWebapp(JettyWebAppContext.java:332)
	at org.eclipse.jetty.webapp.WebAppContext.stopContext(WebAppContext.java:1350)
	at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:872)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:269)
	at org.eclipse.jetty.webapp.WebAppContext.doStop(WebAppContext.java:542)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStop(JettyWebAppContext.java:429)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.restartWebApp(JettyRunMojo.java:530)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo$1.onPathWatchEvents(JettyRunMojo.java:401)
	at org.eclipse.jetty.util.PathWatcher.notifyOnPathWatchEvents(PathWatcher.java:1156)
	at org.eclipse.jetty.util.PathWatcher.run(PathWatcher.java:1360)
	at java.lang.Thread.run(Thread.java:745)
09:03:02,528  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:03:02,582  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:02,603  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:03:02,846  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:03:02,848  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:03:02,866  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:03:02,880  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:03:02,968  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:03:02,969  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:03:03,041  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:03:03,088  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:03:03,111  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:03:03,129  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:03:03,174  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:03:03,175  INFO Environment:213 - HHH000206: hibernate.properties not found
09:03:03,176  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:03:03,208  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:03:03,291 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@113a89c5
09:03:03,292 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6bb46040
09:03:03,293 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@347f0950
09:03:03,293 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3aebdb4
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3956e933
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3956e933
09:03:03,294 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3956e933
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@375682a5
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@375682a5
09:03:03,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@375682a5
09:03:03,296 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@466bf366
09:03:03,296 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@466bf366
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@466bf366
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,297 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,298 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@68a1bb31
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@66694050
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@66694050
09:03:03,299 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@66694050
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5dcec8e9
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@197da701
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@197da701
09:03:03,301 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@197da701
09:03:03,302 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6023b54f
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6023b54f
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1ddc5857
09:03:03,303 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1ddc5857
09:03:03,304 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@289b7efe
09:03:03,304 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@289b7efe
09:03:03,305 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@606d2a92
09:03:03,305 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20ee660b
09:03:03,306 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7ef34eb3
09:03:03,306 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ef34eb3
09:03:03,307 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3ba6707e
09:03:03,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3ba6707e
09:03:03,310 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1cd853ee
09:03:03,311 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1cd853ee
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@30d3f583
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@30d3f583
09:03:03,312 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@30d3f583
09:03:03,313 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@104e6540
09:03:03,314 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,315 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@735dc133
09:03:03,315 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c3e5e3c
09:03:03,316 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@13563e64
09:03:03,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13563e64
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@66d766b9
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@66d766b9
09:03:03,317 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@74eae1e0
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@74eae1e0
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1e3689e7
09:03:03,318 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e3689e7
09:03:03,319 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49d5c751
09:03:03,319 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49d5c751
09:03:03,320 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c438795
09:03:03,320 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7d43c89f
09:03:03,321 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@495a9305
09:03:03,322 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@5257123d
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6e818345
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e818345
09:03:03,323 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6e818345
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@33fc92d6
09:03:03,324 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@12921ee1
09:03:03,325 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@17e725fb
09:03:03,327 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1f8a1b
09:03:03,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f8a1b
09:03:03,328 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@11ec699
09:03:03,330 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6d3a56ea
09:03:03,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d3a56ea
09:03:03,332 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2bc52b08
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2bc52b08
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41d6d6c4
09:03:03,333 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@11df0bc7
09:03:03,334 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@235b4aea
09:03:03,336 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5a110e7d
09:03:03,336 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a110e7d
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@453bbb9b
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@170b27a7
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@79392584
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@cf82c58
09:03:03,337 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1407b93f
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5aff8207
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6a5a99d9
09:03:03,338 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@278df226
09:03:03,561  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:03:03,584  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:03:04,902  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:04,926  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:05,059  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@2fad7002, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18b431ea, org.springframework.security.web.header.HeaderWriterFilter@7c58c10f, org.springframework.security.web.csrf.CsrfFilter@389f4282, org.courseregistration.auth.CustomRestSecurityFilter@7cf618f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@45745de6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f9ebcfe, org.springframework.security.web.access.ExceptionTranslationFilter@3d577add, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@712adc04]
09:03:05,100  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:03:05,154  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2624 ms
09:04:07,243 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4efa12ae
09:04:07,244  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:04:07,272 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:04:07,283 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:04:07,284 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,308 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:04:07,322 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:04:07,323 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:04:07,326 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:04:07,328 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@289b7efe
09:04:07,329 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:04:07,330 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:04:07,330 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:04:07,336 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:04:07,336 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:04:07,338 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@289b7efe}

09:04:07,338 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,345 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:04:07,345 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:04:07,346 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:04:07,368 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:04:07,395 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:05:01,056 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:05:01,062 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:09:31,548 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:09:31,553 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$d674da21.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:09:37,239  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:03:02 PDT 2015]; root of context hierarchy
09:09:37,246  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:09:38,186  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:09:38,229  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:38,249  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:09:38,373  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:09:38,374  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:09:38,392  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:09:38,400  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:09:38,483  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:09:38,483  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:09:38,544  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:09:38,585  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:09:38,607  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:09:38,624  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:09:38,670  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:09:38,671  INFO Environment:213 - HHH000206: hibernate.properties not found
09:09:38,672  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:09:38,698  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5415c38c
09:09:38,742 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@10912c91
09:09:38,742 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b37b84a
09:09:38,743 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@41d797a4
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6770543b
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6770543b
09:09:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6770543b
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1df55adf
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1df55adf
09:09:38,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1df55adf
09:09:38,746 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33db4a41
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@c659ea1
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@c659ea1
09:09:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@c659ea1
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46efa23b
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46efa23b
09:09:38,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46efa23b
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7eea2eef
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@32fccaa
09:09:38,751 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3bea2a1a
09:09:38,751 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3bea2a1a
09:09:38,752 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@693b1367
09:09:38,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@693b1367
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@6dab78b0
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@6dab78b0
09:09:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79248390
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ccbce86
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7332d7bc
09:09:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7332d7bc
09:09:38,755 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1e639bc4
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1e639bc4
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2272f178
09:09:38,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2272f178
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d1c74a9
09:09:38,758 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@19752570
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@72127326
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@72127326
09:09:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@72127326
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@e331059
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1cb118d3
09:09:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1cb118d3
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4f659074
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f659074
09:09:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@269fc391
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@269fc391
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2f480590
09:09:38,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f480590
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28c02f60
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28c02f60
09:09:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@561d319b
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@14194c2d
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@14194c2d
09:09:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@14194c2d
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@425a5c82
09:09:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25458b49
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2cb60de5
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,767 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1bdc207d
09:09:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@318647f1
09:09:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@42c34564
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@796b8f53
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@796b8f53
09:09:38,770 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66e71004
09:09:38,772 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2822d37d
09:09:38,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2822d37d
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@6f18da34
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f18da34
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@bbcd272
09:09:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@43d7e8
09:09:38,775 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@23ec6d41
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@558354e9
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@558354e9
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27d1af8e
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@683a9381
09:09:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7c16c2b5
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56e6e77a
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ce18ff7
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@407bbd71
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@a32dca1
09:09:38,778 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b0e37aa
09:09:38,958  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:09:38,986  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:09:39,985  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,006  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,122  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@23964d6a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55b2e9f8, org.springframework.security.web.header.HeaderWriterFilter@5909059, org.springframework.security.web.csrf.CsrfFilter@731ba2e2, org.courseregistration.auth.CustomRestSecurityFilter@62775cf6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20488469, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21dbda61, org.springframework.security.web.access.ExceptionTranslationFilter@ff9600a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57b11def]
09:09:40,156  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:09:40,198  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2011 ms
09:10:38,605 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@367d965c
09:10:38,606  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:10:38,629 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:10:38,634 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:10:38,634 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,649 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:10:38,660 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:10:38,661 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:10:38,662 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:10:38,663 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@6dab78b0
09:10:38,664 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:10:38,665 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:10:38,665 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:10:38,670 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:10:38,670 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:10:38,671 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@6dab78b0}

09:10:38,671 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,675 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:10:38,675 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:10:38,676 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:10:38,691 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:10:38,709 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy196.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$bb900ee0.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:10:58,434  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:09:38 PDT 2015]; root of context hierarchy
09:10:58,440  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:11:05,061  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:11:05,113  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:05,134  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:11:05,334  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:11:05,336  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:11:05,356  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:11:05,366  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:11:05,455  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:11:05,455  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:11:05,524  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:11:05,573  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:11:05,596  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:11:05,614  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:11:05,663  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:11:05,664  INFO Environment:213 - HHH000206: hibernate.properties not found
09:11:05,665  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:11:05,693  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:11:05,766 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:11:05,767 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:11:05,768 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:11:05,768 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:11:05,769 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:11:05,769 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:11:05,770 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:11:05,771 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:11:05,771 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:11:05,772 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:11:05,773 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:11:05,773 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:11:05,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:11:05,775 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:11:05,778 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:11:05,779 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:11:05,780 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:11:05,780 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:11:05,781 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:11:05,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:11:05,782 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:11:05,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:11:05,783 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:11:05,784 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:11:05,784 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:11:05,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:11:05,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:11:05,786 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:11:05,787 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:11:05,788 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:11:05,788 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:11:05,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:11:05,790 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:11:05,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:11:05,791 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:11:05,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:11:05,792 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,793 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,794 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:11:05,794 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:11:05,795 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:11:05,796 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:11:05,797 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:11:05,799 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:11:05,802 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:11:05,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:11:05,803 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:11:05,804 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:11:05,805 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:11:05,807 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:11:05,808 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:11:06,052  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:11:06,076  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:11:07,076  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,099  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,233  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:11:07,271  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:11:07,324  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2261 ms
09:11:37,863 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@53f3bf28
09:11:37,863  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:11:37,886 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:11:37,894 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:11:37,894 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,914 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:11:37,931 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:11:37,932 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:11:37,935 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:11:37,936 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:11:37,937 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:11:37,939 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:11:37,939 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:11:37,946 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:11:37,946 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:11:37,947 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:11:37,947 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,954 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:11:37,954 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:11:37,955 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:11:37,976 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:11:37,998 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:13:04,294 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:13:04,300 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:13:18,418 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:13:18,423 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy119.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$c8fb52d4.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:26:27,419 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:27,441 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:27,455 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:27,514 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:27,518 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'code'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:27,518 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,518 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:27,519 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:27,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,520 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:27,520 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:27,521 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:27,521 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:27,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:27,522 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:27,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,523 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:27,523 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:27,523 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:27,523 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:27,523 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:27,524 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:27,524 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,524 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:26:27,525 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,525 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,525 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,526 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,527 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,527 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,527 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:27,527 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:27,528 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:27,528 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:27,528 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( course1_.code course1_.course_id code ) ? ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:27,528 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:27,529 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:27,529 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:27,529 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:27,530 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:27,530 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,530 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:27,531 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:27,531 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:27,535 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:27,544 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:27,545 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:27,548 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,012 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:43,017 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:43,018 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:43,020 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:43,028 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:43,028 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,028 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:43,029 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:43,030 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,030 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:43,030 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:43,030 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:43,031 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:43,031 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:43,031 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:43,031 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,032 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:43,032 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:43,032 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:43,033 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:43,033 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:43,033 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:43,033 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,034 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,034 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:43,035 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:43,035 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:43,035 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:43,036 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:43,036 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:43,037 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:43,037 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:43,037 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,037 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:26:43,038 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:43,038 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:43,038 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=0
09:26:43,044 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,046 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,049 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,050 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,051 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,053 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:26:43,053 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:43,055 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:26:53,995 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:26:53,999 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:26:54,000 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:26:54,002 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=0 )
09:26:54,007 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '100'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:26:54,007 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,008 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:26:54,008 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:26:54,009 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,009 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:26:54,010 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:26:54,010 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:26:54,010 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:26:54,011 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:26:54,011 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:26:54,011 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,012 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:26:54,012 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:26:54,012 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:26:54,013 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:26:54,013 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:26:54,013 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:26:54,013 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,014 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,014 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,015 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,015 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,015 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:26:54,015 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:26:54,016 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:26:54,016 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:26:54,016 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 100 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:26:54,016 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:26:54,016 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:26:54,017 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:26:54,017 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:26:54,017 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:26:54,017 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,018 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=0 )
09:26:54,018 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=0
09:26:54,018 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:26:54,018 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=0
09:27:13,424 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:27:13,429 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:27:13,430 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:27:13,433 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=400 )
09:27:13,437 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '100'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '400'

09:27:13,437 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,437 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:27:13,438 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:27:13,438 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,438 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:27:13,438 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:27:13,438 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:27:13,439 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:27:13,439 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:27:13,439 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:27:13,439 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,440 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:27:13,440 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:27:13,440 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:27:13,440 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:27:13,440 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:27:13,441 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,441 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,441 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,442 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,442 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:27:13,442 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:27:13,443 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:27:13,443 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:27:13,443 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 100 ) ) ( <= ( section0_.price section0_.section_id price ) 400 ) ) ) )
09:27:13,443 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:27:13,444 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:27:13,444 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:27:13,444 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:27:13,445 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '100'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '400'

09:27:13,445 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,445 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=100 ) and ( generatedAlias0.price<=400 )
09:27:13,445 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:27:13,445 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:27:13,446 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:03,668 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:03,673 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:03,674 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:03,676 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:06,834 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:06,838 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:06,839 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:06,841 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:18,428 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:18,432 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:18,433 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:18,435 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=100 and section0_.price<=400
09:28:24,038 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:24,042 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:24,043 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:24,045 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=400 )
09:28:24,049 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '400'

09:28:24,049 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,049 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:28:24,050 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:28:24,050 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,050 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:28:24,050 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:28:24,051 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:28:24,051 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:28:24,051 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:28:24,051 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:28:24,052 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,052 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:28:24,052 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:28:24,052 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:28:24,053 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:28:24,053 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:28:24,053 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,054 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,054 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,055 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,055 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:24,055 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:24,056 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:24,056 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:28:24,056 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 400 ) ) ) )
09:28:24,056 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:28:24,057 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:28:24,057 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:28:24,057 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:28:24,057 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '400'

09:28:24,057 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,058 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=400 )
09:28:24,058 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=400
09:28:24,058 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:24,059 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and section0_.price<=400
09:28:36,871 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:28:36,877 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:28:36,878 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:28:36,880 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=300 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:28:36,883 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[EQ] Node: '='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '300'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:28:36,883 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,883 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:28:36,884 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:28:36,884 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,884 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:28:36,884 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:28:36,885 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:28:36,885 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:28:36,885 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:28:36,886 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:28:36,886 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,886 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:28:36,887 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:28:36,887 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:28:36,887 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:28:36,887 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:28:36,888 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:28:36,888 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,888 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,889 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,889 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,889 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,890 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,890 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,890 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:28:36,890 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:28:36,891 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:28:36,891 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:28:36,891 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( = ( section0_.price section0_.section_id price ) 300 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:28:36,892 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:28:36,892 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:28:36,893 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '300'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:28:36,893 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,893 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=300 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 )
09:28:36,893 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=300 and section0_.price>=0 and section0_.price<=0
09:28:36,893 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:28:36,894 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=300 and section0_.price>=0 and section0_.price<=0
09:28:47,591  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:11:05 PDT 2015]; root of context hierarchy
09:28:47,598  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:28:53,210  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:28:53,260  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:53,280  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:28:53,462  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:28:53,464  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:28:53,483  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:28:53,493  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:28:53,578  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:28:53,579  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:28:53,643  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:28:53,692  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:28:53,715  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:28:53,732  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:28:53,779  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:28:53,780  INFO Environment:213 - HHH000206: hibernate.properties not found
09:28:53,781  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:28:53,810  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:28:53,885 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:28:53,886 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:28:53,887 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:28:53,887 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:28:53,888 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:28:53,889 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:28:53,890 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:28:53,890 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,891 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:28:53,892 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:28:53,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:28:53,894 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:28:53,895 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,896 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,896 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:28:53,897 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:28:53,897 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:28:53,898 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:28:53,898 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:28:53,899 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:28:53,899 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:28:53,900 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:28:53,900 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:28:53,901 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:28:53,902 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:28:53,903 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:28:53,903 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:28:53,904 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:28:53,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:28:53,905 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:28:53,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:28:53,906 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:28:53,907 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,908 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:28:53,909 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:28:53,910 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:28:53,910 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:28:53,911 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:28:53,911 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:28:53,912 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:28:53,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:28:53,913 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:28:53,914 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:28:53,914 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:28:53,915 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:28:53,915 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,916 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,916 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,917 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,918 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:28:53,919 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:28:53,920 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:28:53,922 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:28:53,924 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:28:53,924 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:28:53,926 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:28:53,926 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:28:53,927 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:28:53,927 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:28:53,928 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:28:53,929 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:28:53,930 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:28:53,931 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:28:54,188  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:28:54,213  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:28:55,212  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,236  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,368  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:28:55,407  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:28:55,454  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2242 ms
09:29:03,056 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@129a403b
09:29:03,057  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:29:03,080 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:29:03,089 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:29:03,089 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,109 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:29:03,125 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:29:03,126 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:29:03,128 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:29:03,129 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:29:03,130 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:29:03,131 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:29:03,131 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:29:03,137 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:29:03,138 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:29:03,139 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:29:03,139 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,146 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:29:03,146 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:03,146 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,169 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:03,204 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:29:03,215 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:29:03,274 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=300 )
09:29:03,278 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[GE] Node: '>='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '300'

09:29:03,278 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,279 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:29:03,279 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:29:03,279 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,280 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:29:03,280 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:29:03,281 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:29:03,281 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:29:03,281 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:29:03,282 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:29:03,282 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,283 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:29:03,283 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:29:03,283 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:29:03,283 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:29:03,284 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:29:03,284 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:29:03,284 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,285 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,285 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,285 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,287 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:29:03,288 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:29:03,288 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:29:03,288 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:29:03,288 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 300 ) ) ) )
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:29:03,289 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:29:03,289 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:29:03,290 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '300'

09:29:03,290 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,290 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=300 )
09:29:03,290 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:29:03,291 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:29:03,295 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:29:14,778 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:29:14,783 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:29:14,784 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:29:14,786 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=300
09:30:01,962 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:01,967 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:01,968 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:01,973 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
09:30:07,285 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:07,290 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:07,291 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:07,294 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:30:07,297 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

09:30:07,297 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,298 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:07,299 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
09:30:07,299 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:30:07,300 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:30:07,301 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:07,301 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
09:30:07,302 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
09:30:07,302 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:07,303 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
09:30:07,303 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:30:07,304 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
09:30:07,304 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:07,304 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
09:30:07,305 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:07,305 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
09:30:07,306 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
09:30:07,306 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
09:30:07,307 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:07,307 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

09:30:07,307 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,308 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:30:07,308 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:30:07,308 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:07,309 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:30:07,316 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,317 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,320 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,322 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,324 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,325 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:30:07,326 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:07,328 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:30:28,338 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:28,342 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:28,343 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:28,345 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=100 )
09:30:28,351 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[GE] Node: '>='
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  \-[IDENT] Node: 'price'
          |  |  \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '100'

09:30:28,351 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,352 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:28,352 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:30:28,353 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,353 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:28,353 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:30:28,353 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:30:28,354 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:28,354 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:30:28,354 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:30:28,354 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,355 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:30:28,355 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:30:28,356 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:30:28,356 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:30:28,356 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:30:28,357 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:30:28,357 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,357 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,357 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,358 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,358 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,359 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:28,359 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:28,359 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:28,359 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:28,359 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 100 ) ) ) )
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:30:28,360 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:30:28,360 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:28,361 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '100'

09:30:28,361 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,361 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=100 )
09:30:28,361 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=100
09:30:28,361 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:28,362 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=100
09:30:59,371 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:30:59,376 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:30:59,378 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:30:59,383 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 )
09:30:59,389 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  |  |  \-[IDENT] Node: 'code'
          |  |  |  \-[COLON] Node: ':'
          |  |  |     \-[IDENT] Node: 'param0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LE] Node: '<='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:30:59,389 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,389 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:30:59,390 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:30:59,390 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,391 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:30:59,391 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:30:59,391 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:30:59,392 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:30:59,392 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:30:59,392 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:30:59,393 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,393 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:30:59,393 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:30:59,394 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:30:59,394 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:30:59,394 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:30:59,395 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:30:59,396 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,396 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:30:59,396 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,397 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,397 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,398 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,398 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:30:59,398 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:30:59,399 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:30:59,399 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:30:59,399 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( course1_.code course1_.course_id code ) ? ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:30:59,399 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:30:59,400 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:30:59,400 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:30:59,400 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:30:59,401 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  |  |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LE] BinaryLogicOperatorNode: '<='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:30:59,401 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,401 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 )
09:30:59,401 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:30:59,402 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:30:59,402 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:14,246 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:14,251 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:14,252 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:14,256 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:34,596 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:34,601 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:34,601 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:34,603 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and section0_.price>=0 and section0_.price<=0 and section0_.price=0
09:32:56,125 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:32:56,130 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:32:56,131 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:32:56,134 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
09:32:56,139 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[GE] Node: '>='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[LE] Node: '<='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[EQ] Node: '='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias1'
             |  \-[IDENT] Node: 'name'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

09:32:56,139 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,140 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:32:56,140 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:32:56,140 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,140 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:32:56,140 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:32:56,141 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:32:56,141 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:32:56,141 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:32:56,141 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:32:56,142 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,142 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:32:56,142 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:32:56,142 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:32:56,142 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:32:56,142 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:32:56,143 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:32:56,143 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,143 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,143 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,144 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,144 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:32:56,145 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:32:56,145 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
09:32:56,146 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@193bb809
09:32:56,146 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.name -> course1_.name
09:32:56,146 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:32:56,147 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( >= ( section0_.price section0_.section_id price ) 0 ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( like ( course1_.name course1_.course_id name ) ? ) ) ) )
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:32:56,147 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:32:56,148 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:32:56,148 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[GE] BinaryLogicOperatorNode: '>='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[LE] BinaryLogicOperatorNode: '<='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'course1_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=generatedAlias1.name,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
             |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
             |  \-[IDENT] IdentNode: 'name' {originalText=name}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

09:32:56,148 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,149 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price>=0 ) and ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias1.name like :param0 )
09:32:56,149 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:32:56,149 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:32:56,150 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:33:37,747 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:33:37,752 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:33:37,753 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:33:37,756 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price>=0 and section0_.price<=0 and section0_.price=0 and (course1_.name like ?)
09:34:40,514  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:28:53 PDT 2015]; root of context hierarchy
09:34:40,521  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:34:41,359  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:34:41,400  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:41,421  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:34:41,559  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:34:41,560  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:34:41,577  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:34:41,585  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:34:41,665  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:34:41,666  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:34:41,727  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:34:41,768  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:34:41,791  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:34:41,814  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:34:41,863  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:34:41,864  INFO Environment:213 - HHH000206: hibernate.properties not found
09:34:41,865  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:34:41,893  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3059c295
09:34:41,941 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23067d0a
09:34:41,942 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@593805f9
09:34:41,942 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b156184
09:34:41,943 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,944 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,944 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3a98693e
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65c9eb0a
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@50fb03de
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@50fb03de
09:34:41,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50fb03de
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,947 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@12c5a18d
09:34:41,948 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f113ebc
09:34:41,949 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1f113ebc
09:34:41,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f113ebc
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16be5000
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@16be5000
09:34:41,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16be5000
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,951 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@46a0d19
09:34:41,952 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e9ef7a8
09:34:41,952 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e9ef7a8
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1cee6a6f
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1cee6a6f
09:34:41,953 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@60bd94d8
09:34:41,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@60bd94d8
09:34:41,954 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@51d766fb
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@764f158c
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@6df142bb
09:34:41,955 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6df142bb
09:34:41,957 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f3c5536
09:34:41,957 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f3c5536
09:34:41,958 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@45e71414
09:34:41,959 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@45e71414
09:34:41,960 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,961 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e8205a6
09:34:41,962 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5812f635
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@255bbf1f
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fedf03
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@669056f4
09:34:41,964 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@669056f4
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@7d560376
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d560376
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@967691f
09:34:41,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@967691f
09:34:41,966 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3a11c50a
09:34:41,966 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3a11c50a
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@9317f39
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@9317f39
09:34:41,967 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1dc791e7
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,968 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@36d3d95d
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,969 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@649cddf4
09:34:41,970 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@383d69c
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@25b1050d
09:34:41,971 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7f37185d
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1b71d3fa
09:34:41,972 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@20bfbaaf
09:34:41,975 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@429e4dcf
09:34:41,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@429e4dcf
09:34:41,976 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3a7f4e73
09:34:41,978 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@645524f0
09:34:41,978 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@645524f0
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@5095b693
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5095b693
09:34:41,981 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@24287412
09:34:41,982 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@db9b890
09:34:41,982 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@73e42b16
09:34:41,984 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@128436aa
09:34:41,984 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@128436aa
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35d19c7
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30df4e60
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3fc094b
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5666050
09:34:41,985 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e1ec21a
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24f82df7
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@47adce72
09:34:41,986 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@717f5237
09:34:42,171  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:34:42,199  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:34:43,207  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,230  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,365  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@642ff2ce, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fba8066, org.springframework.security.web.header.HeaderWriterFilter@59383544, org.springframework.security.web.csrf.CsrfFilter@2a10bdd5, org.courseregistration.auth.CustomRestSecurityFilter@31b283db, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a208c3b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22a082e, org.springframework.security.web.access.ExceptionTranslationFilter@2d7bf3ab, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8720184]
09:34:43,408  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:34:43,459  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2099 ms
09:35:34,890  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:34:41 PDT 2015]; root of context hierarchy
09:35:34,900  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:35:39,727  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:35:39,774  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:39,795  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:35:39,985  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:35:39,987  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:35:40,007  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:35:40,016  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:35:40,123  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:35:40,123  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:35:40,193  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:35:40,241  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:35:40,263  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:35:40,280  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:35:40,328  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:35:40,329  INFO Environment:213 - HHH000206: hibernate.properties not found
09:35:40,330  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:35:40,359  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:35:40,435 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:35:40,435 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:35:40,436 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:35:40,437 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:35:40,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:35:40,439 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,440 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,440 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:35:40,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:35:40,442 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:35:40,443 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:35:40,444 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,444 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,445 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:35:40,446 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:35:40,446 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:35:40,447 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:35:40,448 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:35:40,448 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:35:40,449 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:35:40,451 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:35:40,451 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:35:40,452 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:35:40,452 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:35:40,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:35:40,455 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:35:40,456 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:35:40,457 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:35:40,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:35:40,458 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:35:40,458 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:35:40,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:35:40,460 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:35:40,460 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:35:40,461 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:35:40,462 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:35:40,463 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,463 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,464 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:35:40,464 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,465 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:35:40,466 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:35:40,467 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:35:40,469 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:35:40,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:35:40,470 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:35:40,472 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:35:40,472 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:35:40,474 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:35:40,475 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:35:40,476 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:35:40,477 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:35:40,477 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:35:40,478 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:35:40,479 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:35:40,794  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:35:40,816  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:35:41,806  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:41,830  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:41,974  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:35:42,012  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:35:42,068  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2339 ms
09:35:57,722 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@37192869
09:35:57,723  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:35:57,746 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:35:57,756 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:35:57,756 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,781 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:35:57,799 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:35:57,800 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:35:57,803 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:35:57,804 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:35:57,804 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:35:57,806 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:35:57,806 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:35:57,814 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:35:57,814 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:35:57,815 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:35:57,815 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,820 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:35:57,821 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:35:57,821 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,844 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:35:57,875 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:35:57,886 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:35:57,924 DEBUG QueryTranslatorImpl:278 - parse() - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:35:57,926 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'Select'
    |     \-[IDENT] Node: 's'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'course'
       |  \-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

09:35:57,926 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,927 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:35:57,927 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
09:35:57,928 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:35:57,928 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
09:35:57,929 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:35:57,929 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
09:35:57,930 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
09:35:57,930 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:35:57,931 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
09:35:57,931 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@193bb809
09:35:57,931 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
09:35:57,932 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:35:57,932 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ ) ( order ( course1_.code ( section0_.course_id section0_.section_id course ) code ) asc ) )
09:35:57,932 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:35:57,932 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
09:35:57,933 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
09:35:57,933 DEBUG QueryNode:49 - getWhereClause() : Creating a new WHERE clause...
09:35:57,933 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:35:57,933 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, section0_], fromElementsByPath=[s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    +-[WHERE] SqlNode: 'WHERE'
    |  \-[THETA_JOINS] SqlNode: '{theta joins}'
    |     \-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
       |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

09:35:57,934 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,934 DEBUG QueryTranslatorImpl:247 - HQL: Select s from org.courseregistration.model.Section s order by s.course.code asc
09:35:57,934 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:35:57,934 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:35:57,935 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ cross join course_details course1_ where section0_.course_id=course1_.course_id order by course1_.code asc
09:35:57,940 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,941 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,944 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,945 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,946 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,948 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
09:35:57,949 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:35:57,951 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.date_of_birth as date_of_2_8_0_, professor0_1_.email_id as email_id3_8_0_, professor0_1_.first_name as first_na4_8_0_, professor0_1_.password as password5_8_0_, professor0_1_.last_name as last_nam6_8_0_, professor0_1_.middle_name as middle_n7_8_0_, professor0_1_.phone_number as phone_nu8_8_0_, professor0_1_.username as username9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
09:36:19,200 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:36:19,206 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:36:19,207 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:36:19,231 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:36:19,235 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:36:19,235 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,236 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:36:19,236 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:36:19,237 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,237 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:36:19,237 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:36:19,237 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:36:19,238 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:36:19,238 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:36:19,238 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:36:19,238 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,239 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:36:19,239 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:36:19,239 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:36:19,240 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:36:19,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:36:19,240 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:36:19,240 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,241 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,241 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,241 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,242 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,242 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:36:19,243 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:36:19,243 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:36:19,244 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:36:19,244 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:36:19,244 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:36:19,244 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:36:19,244 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:36:19,245 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:36:19,245 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:36:19,245 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:36:19,246 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:36:19,246 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,246 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:36:19,246 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:36:19,247 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:36:19,251 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:39:53,134  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:35:39 PDT 2015]; root of context hierarchy
09:39:53,140  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:39:58,556  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:39:58,606  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:39:58,626  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:39:58,811  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:39:58,813  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:39:58,832  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:39:58,842  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:39:58,929  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:39:58,930  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:39:58,992  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:39:59,038  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:39:59,061  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:39:59,079  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:39:59,129  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:39:59,130  INFO Environment:213 - HHH000206: hibernate.properties not found
09:39:59,131  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:39:59,160  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:39:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,234 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,235 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
09:39:59,235 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
09:39:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
09:39:59,236 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
09:39:59,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
09:39:59,238 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,239 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
09:39:59,240 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
09:39:59,241 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
09:39:59,242 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
09:39:59,243 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,244 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,244 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
09:39:59,245 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
09:39:59,245 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
09:39:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
09:39:59,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
09:39:59,247 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
09:39:59,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
09:39:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
09:39:59,248 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
09:39:59,249 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
09:39:59,249 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
09:39:59,250 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
09:39:59,250 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
09:39:59,252 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
09:39:59,252 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
09:39:59,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
09:39:59,254 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
09:39:59,256 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
09:39:59,257 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
09:39:59,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
09:39:59,259 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
09:39:59,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
09:39:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
09:39:59,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
09:39:59,261 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
09:39:59,262 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
09:39:59,263 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
09:39:59,264 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,265 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,266 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
09:39:59,267 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
09:39:59,267 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
09:39:59,269 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
09:39:59,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
09:39:59,270 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
09:39:59,272 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
09:39:59,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
09:39:59,273 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
09:39:59,274 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
09:39:59,275 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
09:39:59,276 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
09:39:59,277 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
09:39:59,278 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
09:39:59,584  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:39:59,610  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:40:00,596  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,618  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,753  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
09:40:00,792  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:40:00,842  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2285 ms
09:40:15,755 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5ffc47a1
09:40:15,756  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:40:15,778 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:40:15,786 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:40:15,787 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,807 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:40:15,823 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:40:15,824 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:40:15,827 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:40:15,830 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
09:40:15,831 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:40:15,833 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:40:15,833 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:40:15,840 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:40:15,841 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:40:15,842 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

09:40:15,842 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,850 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:40:15,850 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:40:15,851 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,871 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:40:15,903 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:40:15,915 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:40:15,973 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 )
09:40:15,978 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[LE] Node: '<='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[EQ] Node: '='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[GE] Node: '>='
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias0'
          |     |  \-[IDENT] Node: 'price'
          |     \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

09:40:15,978 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,979 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:40:15,979 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:40:15,980 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,980 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:40:15,980 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:40:15,981 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:40:15,981 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:40:15,981 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:40:15,982 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:40:15,982 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,983 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:40:15,983 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:40:15,983 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:40:15,983 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:40:15,984 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:40:15,984 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:40:15,984 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,985 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,985 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,985 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,986 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,987 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,987 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,987 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:40:15,987 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:40:15,988 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
09:40:15,988 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:40:15,988 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:40:15,989 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( <= ( section0_.price section0_.section_id price ) 0 ) ( = ( section0_.price section0_.section_id price ) 0 ) ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
09:40:15,989 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:40:15,989 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:40:15,990 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:40:15,990 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:40:15,990 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[LE] BinaryLogicOperatorNode: '<='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[GE] BinaryLogicOperatorNode: '>='
          |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |     \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

09:40:15,990 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,991 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price<=0 ) and ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 )
09:40:15,991 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price<=0 and section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?)
09:40:15,991 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:40:15,996 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price<=0 and section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?)
09:42:31,898  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:39:58 PDT 2015]; root of context hierarchy
09:42:31,904  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
09:42:32,847  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
09:42:32,890  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:32,911  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
09:42:33,039  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
09:42:33,041  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
09:42:33,059  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
09:42:33,067  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
09:42:33,151  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
09:42:33,152  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
09:42:33,214  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
09:42:33,255  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
09:42:33,275  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
09:42:33,292  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
09:42:33,338  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
09:42:33,340  INFO Environment:213 - HHH000206: hibernate.properties not found
09:42:33,341  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
09:42:33,366  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b09516a
09:42:33,406 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30b6a82f
09:42:33,407 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@565f3c0a
09:42:33,407 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6906bcb4
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2aabc037
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@521b9ee8
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,410 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@51d3ebbc
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@29fcf403
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@29fcf403
09:42:33,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29fcf403
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@51de5d04
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@51de5d04
09:42:33,412 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@51de5d04
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7ffdac54
09:42:33,413 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@56740a51
09:42:33,414 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@56740a51
09:42:33,414 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56740a51
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@364e060e
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@364e060e
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@595645d
09:42:33,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@595645d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@514efa3d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@514efa3d
09:42:33,416 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@82a0d15
09:42:33,417 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f22857
09:42:33,418 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@12d4be87
09:42:33,418 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@12d4be87
09:42:33,419 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@21c129cf
09:42:33,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21c129cf
09:42:33,420 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2035b620
09:42:33,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2035b620
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@42645c75
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@42645c75
09:42:33,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@42645c75
09:42:33,422 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a56392
09:42:33,422 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4ca59716
09:42:33,423 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47cf665d
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@475f2a9e
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@475f2a9e
09:42:33,424 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@15a8b3c1
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@15a8b3c1
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ddd780a
09:42:33,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ddd780a
09:42:33,426 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@766c36fe
09:42:33,426 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@766c36fe
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@614be8e
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@614be8e
09:42:33,427 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6ddf64cd
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@50320478
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@50320478
09:42:33,428 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@50320478
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@518010de
09:42:33,429 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1057037b
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,430 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4d37aeda
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5da4a2c4
09:42:33,431 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@58344b09
09:42:33,432 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1f897467
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@619f50f6
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@619f50f6
09:42:33,434 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@541b5662
09:42:33,436 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@276d824f
09:42:33,436 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@276d824f
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@d91ec2a
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@d91ec2a
09:42:33,438 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1875ddea
09:42:33,439 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@70874eca
09:42:33,439 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5375a652
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7f17c066
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f17c066
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21b1ed82
09:42:33,441 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@60e40d22
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38d10ff3
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c4b43f0
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42386e06
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f5e67e
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@326bcf44
09:42:33,442 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4094e3a
09:42:33,618  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
09:42:33,638  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
09:42:34,517  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,538  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,664  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3eb157c9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f9ba5b6, org.springframework.security.web.header.HeaderWriterFilter@3b44a383, org.springframework.security.web.csrf.CsrfFilter@651c71c5, org.courseregistration.auth.CustomRestSecurityFilter@51276db0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c3c437, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d852777, org.springframework.security.web.access.ExceptionTranslationFilter@1b91ef5b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71b15b74]
09:42:34,702  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
09:42:34,746  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 1898 ms
09:49:13,345 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7705643
09:49:13,345  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
09:49:13,363 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:49:13,368 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

09:49:13,368 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,382 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:49:13,391 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
09:49:13,392 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:49:13,394 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
09:49:13,395 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@514efa3d
09:49:13,396 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
09:49:13,397 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:49:13,398 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
09:49:13,402 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
09:49:13,403 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:49:13,403 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@514efa3d}

09:49:13,403 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,408 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
09:49:13,408 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:49:13,408 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,423 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
09:49:13,450 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
09:49:13,459 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
09:49:13,511 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:49:13,515 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[AND] Node: 'and'
          |  +-[AND] Node: 'and'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[DOT] Node: '.'
          |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  |  |  \-[IDENT] Node: 'price'
          |  |  |  \-[NUM_INT] Node: '0'
          |  |  \-[GE] Node: '>='
          |  |     +-[DOT] Node: '.'
          |  |     |  +-[IDENT] Node: 'generatedAlias0'
          |  |     |  \-[IDENT] Node: 'price'
          |  |     \-[NUM_INT] Node: '0'
          |  \-[LIKE] Node: 'like'
          |     +-[DOT] Node: '.'
          |     |  +-[IDENT] Node: 'generatedAlias2'
          |     |  \-[IDENT] Node: 'lastName'
          |     \-[COLON] Node: ':'
          |        \-[IDENT] Node: 'param0'
          \-[LE] Node: '<='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias0'
             |  \-[IDENT] Node: 'price'
             \-[NUM_INT] Node: '0'

09:49:13,515 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,515 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
09:49:13,515 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
09:49:13,516 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,516 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
09:49:13,516 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
09:49:13,517 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
09:49:13,517 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
09:49:13,517 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
09:49:13,518 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

09:49:13,518 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,518 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
09:49:13,518 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
09:49:13,519 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
09:49:13,519 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
09:49:13,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
09:49:13,519 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

09:49:13,519 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,520 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,520 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,520 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,521 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,521 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,521 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
09:49:13,522 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@514efa3d
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
09:49:13,522 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
09:49:13,522 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@29fcf403
09:49:13,523 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
09:49:13,523 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
09:49:13,523 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( and ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( >= ( section0_.price section0_.section_id price ) 0 ) ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ( <= ( section0_.price section0_.section_id price ) 0 ) ) ) )
09:49:13,523 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
09:49:13,524 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
09:49:13,524 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
09:49:13,524 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
09:49:13,524 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[AND] SqlNode: 'and'
          |  +-[AND] SqlNode: 'and'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |  |  \-[NUM_INT] LiteralNode: '0'
          |  |  \-[GE] BinaryLogicOperatorNode: '>='
          |  |     +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |     |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |     |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  |     \-[NUM_INT] LiteralNode: '0'
          |  \-[LIKE] BinaryLogicOperatorNode: 'like'
          |     +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
          |     |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
          |     |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
          |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@514efa3d}
          \-[LE] BinaryLogicOperatorNode: '<='
             +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
             |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  \-[IDENT] IdentNode: 'price' {originalText=price}
             \-[NUM_INT] LiteralNode: '0'

09:49:13,525 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,525 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias0.price>=0 ) and ( generatedAlias2.lastName like :param0 ) and ( generatedAlias0.price<=0 )
09:49:13,525 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
09:49:13,525 DEBUG ErrorCounter:95 - throwQueryException() : no errors
09:49:13,529 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
10:08:40,691 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:08:40,696 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
10:08:40,697 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
10:08:40,700 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and section0_.price>=0 and (professor2_1_.last_name like ?) and section0_.price<=0
10:09:59,512  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 09:42:32 PDT 2015]; root of context hierarchy
10:09:59,518  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:10:00,279  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:10:00,320  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:00,342  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:10:00,466  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:10:00,467  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:10:00,485  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:10:00,495  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:10:00,583  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:10:00,584  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:10:00,650  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:10:00,691  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:10:00,712  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:10:00,728  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:10:01,181  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:10:01,182  INFO Environment:213 - HHH000206: hibernate.properties not found
10:10:01,183  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:10:01,211  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,254 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@69af326a
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45afb9fd
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@39ab9848
10:10:01,255 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@e93b7d1
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,256 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6a19588c
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,257 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4506e7d2
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,258 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a8d4d2c
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@687e4b6f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1da60a0f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1da60a0f
10:10:01,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1da60a0f
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@30566a4c
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@30566a4c
10:10:01,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@30566a4c
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7a678543
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7a678543
10:10:01,262 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a678543
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@48e91ef9
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@48e91ef9
10:10:01,263 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9e2af2e
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9e2af2e
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@eba8e92
10:10:01,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@eba8e92
10:10:01,265 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@37a632bc
10:10:01,265 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@a83b252
10:10:01,266 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3d58aac2
10:10:01,266 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d58aac2
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@38002dca
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38002dca
10:10:01,267 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@51c166ae
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@51c166ae
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@62bd1399
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@62bd1399
10:10:01,268 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@62bd1399
10:10:01,269 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4fb368ff
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@54e8dbed
10:10:01,270 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@78160d6b
10:10:01,271 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@3797f5b4
10:10:01,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3797f5b4
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6c3f6a0e
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c3f6a0e
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@30abd5c2
10:10:01,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@30abd5c2
10:10:01,273 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@293febe1
10:10:01,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@293febe1
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c1243e0
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c1243e0
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c3a21df
10:10:01,274 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@26eac89
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,275 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@32c96093
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@73e3285f
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,276 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4a7a2ac1
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d2b7c92
10:10:01,277 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@c6826d6
10:10:01,278 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2b710c2f
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3717b461
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3717b461
10:10:01,280 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4fc0c5b3
10:10:01,282 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@24647591
10:10:01,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@24647591
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1d2b136f
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1d2b136f
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@195585ed
10:10:01,284 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cdc037d
10:10:01,285 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5a932b3c
10:10:01,286 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@61210aca
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61210aca
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68712f34
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16f1faa
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b8cabfb
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1328d07a
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@724145a4
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@b2a8609
10:10:01,287 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@659727e4
10:10:01,288 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30e9802c
10:10:01,473  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:10:01,492  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:10:02,381  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,404  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,519  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@30501391, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@703bf44f, org.springframework.security.web.header.HeaderWriterFilter@6ee18f85, org.springframework.security.web.csrf.CsrfFilter@79a9cabc, org.courseregistration.auth.CustomRestSecurityFilter@49d58283, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66639e7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@49ca894, org.springframework.security.web.access.ExceptionTranslationFilter@33d77e91, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56f333f2]
10:10:02,558  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:02,610  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2330 ms
10:10:34,907  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 10:10:00 PDT 2015]; root of context hierarchy
10:10:34,918  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:10:40,236  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:10:40,285  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:40,305  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:10:40,484  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:10:40,486  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:10:40,505  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:10:40,515  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:10:40,612  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:10:40,613  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:10:40,680  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:10:40,728  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:10:40,752  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:10:40,769  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:10:40,819  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:10:40,820  INFO Environment:213 - HHH000206: hibernate.properties not found
10:10:40,821  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:10:40,849  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:10:40,923 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,923 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d4d8579
10:10:40,924 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b24087d
10:10:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@45e617c4
10:10:40,925 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@348137e8
10:10:40,926 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@422ab737
10:10:40,927 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@11381415
10:10:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@11381415
10:10:40,928 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@11381415
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,929 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ad8717d
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3946075
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3946075
10:10:40,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3946075
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1e01b133
10:10:40,931 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1e01b133
10:10:40,932 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
10:10:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4872669f
10:10:40,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4872669f
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,934 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3dc40ab9
10:10:40,935 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47b33e07
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47b33e07
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@19489b27
10:10:40,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@19489b27
10:10:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@193bb809
10:10:40,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@193bb809
10:10:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78b7f805
10:10:40,938 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@69cd7630
10:10:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@53747c4a
10:10:40,939 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@53747c4a
10:10:40,941 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5ae15
10:10:40,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ae15
10:10:40,942 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@523a7801
10:10:40,942 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@523a7801
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3e046e39
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3e046e39
10:10:40,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3e046e39
10:10:40,945 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4262fdeb
10:10:40,945 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c26ba07
10:10:40,946 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7b5cc918
10:10:40,947 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@53aa38be
10:10:40,947 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@53aa38be
10:10:40,948 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@50b93353
10:10:40,948 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50b93353
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35adf623
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35adf623
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c8fe7a4
10:10:40,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c8fe7a4
10:10:40,950 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@36bed37a
10:10:40,950 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@36bed37a
10:10:40,951 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5c6a5192
10:10:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@729c8063
10:10:40,952 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@729c8063
10:10:40,953 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@729c8063
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,954 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29079032
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2efd2f21
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,955 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6661d8c0
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,956 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4db77402
10:10:40,957 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7a2fce12
10:10:40,958 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@721d5b74
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7d0100ea
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d0100ea
10:10:40,960 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eda4eeb
10:10:40,963 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5efeb117
10:10:40,963 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5efeb117
10:10:40,965 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@19b02dfd
10:10:40,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@19b02dfd
10:10:40,966 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13803a94
10:10:40,966 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3a7c678b
10:10:40,967 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@322204dc
10:10:40,968 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@27dc627a
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27dc627a
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@525b1b70
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16d07cf3
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16f0ec18
10:10:40,969 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6c977dcf
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@661d6bb6
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@733fb462
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@623e0631
10:10:40,970 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359066bc
10:10:41,291  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
10:10:41,316  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
10:10:42,322  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,346  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,484  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@35e75f7a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f7bb8df, org.springframework.security.web.header.HeaderWriterFilter@269c7104, org.springframework.security.web.csrf.CsrfFilter@6de84336, org.courseregistration.auth.CustomRestSecurityFilter@627bcd7e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70543cae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@350567f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a5b7394, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26f75d9c]
10:10:42,527  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:10:42,579  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 2341 ms
10:10:47,083 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6f53cf0b
10:10:47,083  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
10:10:47,106 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
10:10:47,113 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

10:10:47,113 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,132 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
10:10:47,145 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
10:10:47,146 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
10:10:47,148 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
10:10:47,149 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@193bb809
10:10:47,149 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
10:10:47,150 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
10:10:47,151 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
10:10:47,156 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
10:10:47,156 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
10:10:47,157 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@193bb809}

10:10:47,157 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,163 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
10:10:47,163 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:10:47,163 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,182 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
10:10:47,215 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
10:10:47,226 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
10:10:47,283 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
10:10:47,286 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias0'
          |  |  \-[IDENT] Node: 'price'
          |  \-[NUM_INT] Node: '0'
          \-[LIKE] Node: 'like'
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param0'

10:10:47,287 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,287 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
10:10:47,287 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
10:10:47,287 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,288 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
10:10:47,288 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
10:10:47,289 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
10:10:47,289 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
10:10:47,289 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
10:10:47,289 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

10:10:47,290 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,290 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
10:10:47,291 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
10:10:47,291 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
10:10:47,291 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
10:10:47,291 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
10:10:47,292 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

10:10:47,292 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,293 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
10:10:47,293 DEBUG DotNode:654 - getDataType() : price -> org.hibernate.type.IntegerType@3946075
10:10:47,294 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.price -> section0_.price
10:10:47,295 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
10:10:47,295 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@193bb809
10:10:47,295 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
10:10:47,295 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
10:10:47,296 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( section0_.price section0_.section_id price ) 0 ) ( like ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
10:10:47,296 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
10:10:47,297 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
10:10:47,297 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'section0_.price' {propertyName=price,dereferenceType=PRIMITIVE,getPropertyPath=price,path=generatedAlias0.price,tableAlias=section0_,className=org.courseregistration.model.Section,classAlias=generatedAlias0}
          |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  \-[IDENT] IdentNode: 'price' {originalText=price}
          |  \-[NUM_INT] LiteralNode: '0'
          \-[LIKE] BinaryLogicOperatorNode: 'like'
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@193bb809}

10:10:47,297 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,298 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias0.price=0 ) and ( generatedAlias2.lastName like :param0 )
10:10:47,298 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
10:10:47,298 DEBUG ErrorCounter:95 - throwQueryException() : no errors
10:10:47,302 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_13_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.price as price7_5_, section0_.professor_id as profess14_5_, section0_.room_number as room_num8_5_, section0_.semester as semester9_5_, section0_.class_start_date as class_s10_5_, section0_.total_capacity as total_c11_5_, section0_.wait_list_capacity as wait_li12_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.price=0 and (professor2_1_.last_name like ?)
10:11:30,635  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Wed Oct 28 10:10:40 PDT 2015]; root of context hierarchy
10:11:30,640  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
10:11:31,687  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
10:11:31,731  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 10:11:31 PDT 2015]; root of context hierarchy
10:11:31,752  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
10:11:31,891  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
10:11:31,892  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
10:11:31,910  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
10:11:31,919  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
10:11:32,006  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
10:11:32,007  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
10:11:32,069  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
10:11:32,110  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
10:11:32,131  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
10:11:32,147  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
10:11:32,196  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
10:11:32,198  INFO Environment:213 - HHH000206: hibernate.properties not found
10:11:32,199  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
10:11:32,225  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
10:11:32,270 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@620dbaf0
10:11:32,271 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@48191402
10:11:32,272 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@55d45101
10:11:32,272 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d8ec13c
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,273 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@47a1a8b9
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@26f6933b
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@26f6933b
10:11:32,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26f6933b
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34c1581
10:11:32,275 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e4fb1be
10:11:32,276 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@75b0f945
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1392af3a
10:11:32,277 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1392af3a
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1392af3a
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,278 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@d5f9eaf
10:11:32,279 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3dd61435
10:11:32,279 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3dd61435
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@14f3e618
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@14f3e618
10:11:32,280 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@498fd7e2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@498fd7e2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1ceb1de2
10:11:32,281 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6940b14c
10:11:32,282 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@301b4cdc
10:11:32,282 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@301b4cdc
10:11:32,283 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@14bd8a12
10:11:32,283 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@14bd8a12
10:11:32,284 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@17eb850d
10:11:32,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17eb850d
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,285 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1ab8b802
10:11:32,286 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c7dc31
10:11:32,286 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1a93da84
10:11:32,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a93da84
10:11:32,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a93da84
=======
15:04:03,218 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:04:03,258 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
15:04:03,278 ERROR UserDAO:27 - Error occurred finding an entity of type:User
java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: users is not mapped [select u from users as u where u.username=:username]
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1679)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:344)
	at com.sun.proxy.$Proxy114.createQuery(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy57.createQuery(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:23)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$dc617343.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: users is not mapped [select u from users as u where u.username=:username]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:218)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:305)
	... 60 more
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: users is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:171)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:76)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:321)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3678)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3567)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:708)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:564)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:249)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	... 68 more
15:05:51,468  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
15:05:51,567  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 15:05:51 PDT 2015]; root of context hierarchy
15:05:51,637  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
15:05:52,069  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
15:05:52,072  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
15:05:52,111  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
15:05:52,130  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
15:05:52,317  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
15:05:52,319  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
15:05:52,453  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:05:52,572  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
15:05:52,629  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
15:05:52,666  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
15:05:52,761  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
15:05:52,766  INFO Environment:213 - HHH000206: hibernate.properties not found
15:05:52,768  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
15:05:52,833  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
15:05:52,928 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@470c2a7a
15:05:52,928 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@470c2a7a
15:05:52,929 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@470c2a7a
15:05:52,930 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2b57dc2
15:05:52,932 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c0becae
15:05:52,932 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@294aaa6
15:05:52,934 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@685e97e0
15:05:52,934 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@685e97e0
15:05:52,935 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@685e97e0
15:05:52,936 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@647468a7
15:05:52,936 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@647468a7
15:05:52,936 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@647468a7
15:05:52,938 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@557abb68
15:05:52,939 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@557abb68
15:05:52,939 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@557abb68
15:05:52,940 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@335ff774
15:05:52,941 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@335ff774
15:05:52,941 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@335ff774
15:05:52,943 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@35ec3604
15:05:52,943 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@35ec3604
15:05:52,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@35ec3604
15:05:52,946 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@64a0ee65
15:05:52,946 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@64a0ee65
15:05:52,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@64a0ee65
15:05:52,948 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3d94b49d
15:05:52,949 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3d94b49d
15:05:52,949 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3d94b49d
15:05:52,952 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64648af1
15:05:52,953 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64648af1
15:05:52,954 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6fa48ee4
15:05:52,954 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6fa48ee4
15:05:52,955 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@34ad750f
15:05:52,956 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@34ad750f
15:05:52,957 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5a63de07
15:05:52,958 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6da14f7f
15:05:52,959 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5207747c
15:05:52,960 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5207747c
15:05:52,962 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@39240aa3
15:05:52,962 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39240aa3
15:05:52,964 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@20ed6de
15:05:52,965 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@20ed6de
15:05:52,966 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@79c9a128
15:05:52,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@79c9a128
15:05:52,967 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@79c9a128
15:05:52,970 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@e50e308
15:05:52,971 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@62a09668
15:05:52,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@62a09668
15:05:52,972 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@62a09668
15:05:52,973 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@ac71bd7
15:05:52,974 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@16a3d9a7
15:05:52,975 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16a3d9a7
15:05:52,976 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@3670af2b
15:05:52,976 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3670af2b
15:05:52,977 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4fd8aefe
15:05:52,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4fd8aefe
15:05:52,979 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@10770c1
15:05:52,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10770c1
15:05:52,981 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@58dd584a
15:05:52,981 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@58dd584a
15:05:52,982 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5295779
15:05:52,983 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@73625632
15:05:52,983 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@73625632
15:05:52,983 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@73625632
15:05:52,985 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3bbc8c82
15:05:52,985 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3bbc8c82
15:05:52,985 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3bbc8c82
15:05:52,986 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@21a14c45
15:05:52,987 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@521032a6
15:05:52,988 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@521032a6
15:05:52,988 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@521032a6
15:05:52,989 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1314ccc1
15:05:52,990 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1314ccc1
15:05:52,990 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1314ccc1
15:05:52,991 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2acbbee4
15:05:52,992 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@644eed73
15:05:52,997 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3dc70aa0
15:05:52,998 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3dc70aa0
15:05:52,999 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@37ecc472
15:05:53,005 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@75f67fe5
15:05:53,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@75f67fe5
15:05:53,011 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@227e4ea8
15:05:53,012 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@227e4ea8
15:05:53,012 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@53791a39
15:05:53,013 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5aef36a9
15:05:53,015 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@41a6cd9e
15:05:53,020 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5b084c4c
15:05:53,020 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5b084c4c
15:05:53,021 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5680f009
15:05:53,022 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a4e6da6
15:05:53,022 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73e0c775
15:05:53,022 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@213d5189
15:05:53,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70eced1f
15:05:53,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39068df9
15:05:53,023 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ca83ec3
15:05:53,024 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d29fc6
15:05:53,377  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
15:05:53,426  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
15:05:55,740  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:05:51 PDT 2015]; root of context hierarchy
15:05:55,795  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:05:51 PDT 2015]; root of context hierarchy
15:05:56,207  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@71e064b2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b16aa6f, org.springframework.security.web.header.HeaderWriterFilter@40406a3f, org.springframework.security.web.csrf.CsrfFilter@d58550c, org.courseregistration.auth.CustomRestSecurityFilter@7fef75e1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2174fda1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62267a22, org.springframework.security.web.access.ExceptionTranslationFilter@2d99b35f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@295d8b70]
15:05:56,328  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:05:51 PDT 2015]; root of context hierarchy
15:05:56,522  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5051 ms
15:06:21,947 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1fa4fbc
15:06:21,949  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
15:06:21,998 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
15:06:22,014 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

15:06:22,014 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:22,049 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
15:06:22,075 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
15:06:22,077 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
15:06:22,080 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
15:06:22,083 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.LongType@35ec3604
15:06:22,085 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.college_id
15:06:22,088 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
15:06:22,088 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id username ) ? ) ) )
15:06:22,102 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
15:06:22,103 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
15:06:22,104 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.LongType@35ec3604}

15:06:22,104 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:22,118 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
15:06:22,119 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:06:22,119 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:22,156 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:06:22,221 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:22,242 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,014 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
15:06:51,017 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

15:06:51,018 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:51,018 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
15:06:51,019 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
15:06:51,020 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
15:06:51,021 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@34ad750f
15:06:51,021 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
15:06:51,022 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
15:06:51,022 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
15:06:51,023 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
15:06:51,024 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
15:06:51,024 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
15:06:51,025 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

15:06:51,025 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:51,026 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
15:06:51,026 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
15:06:51,027 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:06:51,027 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
15:06:51,037 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,045 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,046 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,049 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,051 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,053 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,056 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,057 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,059 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,061 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,063 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:06:51,066 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,069 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,072 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,074 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,076 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,082 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,083 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,085 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,086 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,088 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,089 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,091 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,092 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,093 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,095 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,097 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,098 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,100 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,101 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,103 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,104 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,105 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:06:51,106 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:06:51,107 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:10:51,089 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:10:51,098 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:10:51,100 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,183 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
15:11:11,201 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,205 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,207 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,209 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,210 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,212 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,213 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,215 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,216 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,218 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,220 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:11:11,222 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,223 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,224 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,226 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,227 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,233 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,235 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,236 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,237 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,239 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,240 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,242 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,243 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,244 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,245 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,247 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,250 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,252 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,253 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,255 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,256 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,257 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:11:11,258 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:11:11,260 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:17:09,464 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:17:09,475 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:17:09,476 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:01,191  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
15:41:01,305  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 15:41:01 PDT 2015]; root of context hierarchy
15:41:01,346  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
15:41:01,798  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
15:41:01,801  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
15:41:01,828  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
15:41:01,841  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
15:41:02,084  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
15:41:02,086  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
15:41:02,306  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
15:41:02,465  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
15:41:02,543  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
15:41:02,630  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
15:41:02,819  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
15:41:02,824  INFO Environment:213 - HHH000206: hibernate.properties not found
15:41:02,827  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
15:41:02,925  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
15:41:03,080 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@34e700f4
15:41:03,080 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@34e700f4
15:41:03,081 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34e700f4
15:41:03,082 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@625d2b6d
15:41:03,085 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12830e23
15:41:03,087 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@4d7f3adf
15:41:03,091 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@63fcc21
15:41:03,091 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@63fcc21
15:41:03,092 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63fcc21
15:41:03,094 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@225d93aa
15:41:03,094 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@225d93aa
15:41:03,095 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@225d93aa
15:41:03,098 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@52d625bd
15:41:03,098 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@52d625bd
15:41:03,099 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@52d625bd
15:41:03,102 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@402d45c6
15:41:03,102 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@402d45c6
15:41:03,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@402d45c6
15:41:03,108 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@17c3e33
15:41:03,109 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@17c3e33
15:41:03,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17c3e33
15:41:03,113 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@58178b69
15:41:03,114 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@58178b69
15:41:03,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@58178b69
15:41:03,117 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6db99c79
15:41:03,118 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@6db99c79
15:41:03,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6db99c79
15:41:03,123 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5a513627
15:41:03,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5a513627
15:41:03,127 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6921ce3f
15:41:03,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6921ce3f
15:41:03,138 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4fe91eed
15:41:03,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4fe91eed
15:41:03,141 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2199e1a4
15:41:03,142 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23c24c0e
15:41:03,145 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@17e7cc67
15:41:03,146 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@17e7cc67
15:41:03,150 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1f8e1096
15:41:03,150 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1f8e1096
15:41:03,154 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@483f19c0
15:41:03,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@483f19c0
15:41:03,158 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@296a350
15:41:03,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@296a350
15:41:03,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@296a350
15:41:03,164 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5d5a77de
15:41:03,166 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@3fb54673
15:41:03,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3fb54673
15:41:03,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3fb54673
15:41:03,169 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@641001c2
15:41:03,171 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@23e0b938
15:41:03,172 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23e0b938
15:41:03,173 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@f359e65
15:41:03,174 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f359e65
15:41:03,176 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@470c2a7a
15:41:03,176 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@470c2a7a
15:41:03,178 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2b57dc2
15:41:03,178 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b57dc2
15:41:03,180 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@619944a7
15:41:03,181 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@619944a7
15:41:03,181 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@57e9cd2
15:41:03,183 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@685e97e0
15:41:03,183 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@685e97e0
15:41:03,184 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@685e97e0
15:41:03,185 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@647468a7
15:41:03,186 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@647468a7
15:41:03,186 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@647468a7
15:41:03,188 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@482034fb
15:41:03,190 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2f349170
15:41:03,191 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2f349170
15:41:03,193 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2f349170
15:41:03,195 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68fb6c1e
15:41:03,195 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68fb6c1e
15:41:03,196 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68fb6c1e
15:41:03,197 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@ab5954d
15:41:03,198 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4a648b35
15:41:03,206 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6fa48ee4
15:41:03,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6fa48ee4
15:41:03,210 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@769d0ef2
15:41:03,216 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4c541b00
15:41:03,217 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c541b00
15:41:03,225 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3aa4d595
15:41:03,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3aa4d595
15:41:03,227 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b3427c4
15:41:03,229 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1e11d73c
15:41:03,231 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5e6b2641
15:41:03,236 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@4a59d584
15:41:03,237 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4a59d584
15:41:03,239 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2f32fe68
15:41:03,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1007954a
15:41:03,240 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@10770c1
15:41:03,241 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@35ab0bf3
15:41:03,241 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@dd26290
15:41:03,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21d30ba5
15:41:03,242 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b68e626
15:41:03,243 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7671922b
15:41:03,638  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
15:41:03,690  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
15:41:07,697  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:41:01 PDT 2015]; root of context hierarchy
15:41:07,753  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:41:01 PDT 2015]; root of context hierarchy
15:41:08,172  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7d5238b4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55a430b2, org.springframework.security.web.header.HeaderWriterFilter@57064d38, org.springframework.security.web.csrf.CsrfFilter@2667a238, org.courseregistration.auth.CustomRestSecurityFilter@4a9cb9d8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e492199, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5bc3c4e5, org.springframework.security.web.access.ExceptionTranslationFilter@402ecbc7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f53e863]
15:41:08,282  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 15:41:01 PDT 2015]; root of context hierarchy
15:41:08,440  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 7245 ms
15:41:18,664 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@42cc5507
15:41:18,665  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
15:41:18,696 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
15:41:18,708 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

15:41:18,708 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:18,735 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
15:41:18,759 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
15:41:18,760 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
15:41:18,763 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
15:41:18,765 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.LongType@17c3e33
15:41:18,766 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.college_id
15:41:18,769 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
15:41:18,769 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id username ) ? ) ) )
15:41:18,780 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
15:41:18,781 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
15:41:18,782 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.LongType@17c3e33}

15:41:18,782 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:18,790 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
15:41:18,791 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:41:18,791 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:18,818 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
15:41:18,921 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:18,940 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,217 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
15:41:20,222 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

15:41:20,223 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:20,223 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
15:41:20,224 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
15:41:20,225 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
15:41:20,225 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@4fe91eed
15:41:20,226 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
15:41:20,226 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
15:41:20,226 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
15:41:20,227 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
15:41:20,228 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
15:41:20,228 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
15:41:20,229 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

15:41:20,230 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:20,230 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
15:41:20,231 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
15:41:20,231 DEBUG ErrorCounter:95 - throwQueryException() : no errors
15:41:20,233 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
15:41:20,246 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,249 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,251 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,253 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,255 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,256 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,258 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,261 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,263 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,264 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,265 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
15:41:20,267 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,269 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,271 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,272 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,273 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,277 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,278 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,279 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,280 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,282 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,283 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,284 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,285 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,287 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,288 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,290 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,290 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,292 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,293 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,294 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,295 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,296 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
15:41:20,297 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.college_id as college_2_8_3_, professor3_1_.date_of_birth as date_of_3_8_3_, professor3_1_.email_id as email_id4_8_3_, professor3_1_.first_name as first_na5_8_3_, professor3_1_.password as password6_8_3_, professor3_1_.last_name as last_nam7_8_3_, professor3_1_.middle_name as middle_n8_8_3_, professor3_1_.phone_number as phone_nu9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
15:41:20,299 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
16:02:20,472  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 15:41:01 PDT 2015]; root of context hierarchy
16:02:20,493  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
16:02:23,267  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:02:23,341  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:02:23 PDT 2015]; root of context hierarchy
16:02:23,373  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:02:23,648  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:02:23,650  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:02:23,679  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:02:23,692  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:02:23,841  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:02:23,842  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:02:23,958  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:02:24,121  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:02:24,197  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:02:24,251  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:02:24,548  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:02:24,550  INFO Environment:213 - HHH000206: hibernate.properties not found
16:02:24,551  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:02:24,602  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:02:24,680 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b85c650
16:02:24,680 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1b85c650
16:02:24,680 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1b85c650
16:02:24,681 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ecb06f7
16:02:24,682 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@ab344b8
16:02:24,683 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1575fd31
16:02:24,684 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@545d0544
16:02:24,684 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@545d0544
16:02:24,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@545d0544
16:02:24,686 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@6a68f3d
16:02:24,686 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@6a68f3d
16:02:24,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6a68f3d
16:02:24,688 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4703a69c
16:02:24,688 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4703a69c
16:02:24,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4703a69c
16:02:24,690 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@469081a6
16:02:24,690 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@469081a6
16:02:24,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@469081a6
16:02:24,691 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5d0ae8b7
16:02:24,691 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5d0ae8b7
16:02:24,692 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d0ae8b7
16:02:24,694 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@37f50554
16:02:24,694 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@37f50554
16:02:24,694 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37f50554
16:02:24,697 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41cfa615
16:02:24,698 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@41cfa615
16:02:24,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@41cfa615
16:02:24,701 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@760500c
16:02:24,701 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@760500c
16:02:24,702 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@565e3566
16:02:24,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@565e3566
16:02:24,703 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@79ed6cf8
16:02:24,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@79ed6cf8
16:02:24,705 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3d59cce9
16:02:24,707 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@50faeece
16:02:24,709 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@57a8a57f
16:02:24,709 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@57a8a57f
16:02:24,711 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7f2dc008
16:02:24,712 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f2dc008
16:02:24,716 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@34302101
16:02:24,716 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@34302101
16:02:24,718 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@50567a2f
16:02:24,718 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50567a2f
16:02:24,718 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50567a2f
16:02:24,719 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c5b3cfb
16:02:24,721 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4f49c00
16:02:24,721 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4f49c00
16:02:24,721 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4f49c00
16:02:24,722 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c16fef7
16:02:24,722 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@55ed8c56
16:02:24,723 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55ed8c56
16:02:24,724 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@c563ea0
16:02:24,724 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@c563ea0
16:02:24,725 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5502766d
16:02:24,725 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5502766d
16:02:24,725 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@785d235d
16:02:24,726 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@785d235d
16:02:24,730 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e0c6586
16:02:24,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e0c6586
16:02:24,731 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e94cdb
16:02:24,732 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@5b6d913d
16:02:24,732 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@5b6d913d
16:02:24,732 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@5b6d913d
16:02:24,734 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@291a5601
16:02:24,734 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@291a5601
16:02:24,734 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@291a5601
16:02:24,734 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4867fab9
16:02:24,735 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@3e0d81ba
16:02:24,735 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3e0d81ba
16:02:24,736 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@3e0d81ba
16:02:24,736 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5760e183
16:02:24,737 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5760e183
16:02:24,737 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5760e183
16:02:24,737 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3936de10
16:02:24,738 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7a6c71f
16:02:24,741 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1e6ef8c6
16:02:24,742 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e6ef8c6
16:02:24,742 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1f74085b
16:02:24,745 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@d08a98c
16:02:24,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d08a98c
16:02:24,748 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@749f1d59
16:02:24,748 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@749f1d59
16:02:24,748 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3ee58d2e
16:02:24,749 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2d9de3ff
16:02:24,750 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@157a1d8b
16:02:24,755 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@26d8c8b3
16:02:24,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@26d8c8b3
16:02:24,756 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15f015a4
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5101cabb
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@bf7d819
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@10560577
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51e6fec
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a1529e6
16:02:24,757 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6f1705ad
16:02:24,758 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fcac885
16:02:25,352  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:02:25,394  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:02:27,123  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:02:23 PDT 2015]; root of context hierarchy
16:02:27,184  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:02:23 PDT 2015]; root of context hierarchy
16:02:27,759  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7e2122f0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25edad40, org.springframework.security.web.header.HeaderWriterFilter@5caca5e3, org.springframework.security.web.csrf.CsrfFilter@6ba60fbb, org.courseregistration.auth.CustomRestSecurityFilter@1ce7869d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54a8bfec, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d128b27, org.springframework.security.web.access.ExceptionTranslationFilter@36128ae9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@166121d8]
16:02:27,888  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:02:23 PDT 2015]; root of context hierarchy
16:02:28,154  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4884 ms
16:04:20,724  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 16:02:23 PDT 2015]; root of context hierarchy
16:04:20,742  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
16:07:51,244  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:07:51,352  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:07:51 PDT 2015]; root of context hierarchy
16:07:51,390  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:07:51,766  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:07:51,769  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:07:51,803  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:07:51,818  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:07:51,999  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:07:52,001  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:07:52,143  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:07:52,263  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:07:52,322  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:07:52,356  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:07:52,459  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:07:52,465  INFO Environment:213 - HHH000206: hibernate.properties not found
16:07:52,467  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:07:52,542  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:07:52,649 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@557abb68
16:07:52,649 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@557abb68
16:07:52,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@557abb68
16:07:52,650 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@335ff774
16:07:52,652 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@35ec3604
16:07:52,653 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@47c06b1a
16:07:52,655 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@61f2bf3a
16:07:52,656 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@61f2bf3a
16:07:52,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61f2bf3a
16:07:52,658 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@57573880
16:07:52,659 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@57573880
16:07:52,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@57573880
16:07:52,661 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@226f472
16:07:52,662 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@226f472
16:07:52,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@226f472
16:07:52,664 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@4adb2b87
16:07:52,665 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@4adb2b87
16:07:52,665 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4adb2b87
16:07:52,667 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6d58ed12
16:07:52,667 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6d58ed12
16:07:52,668 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d58ed12
16:07:52,670 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@189f2184
16:07:52,670 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@189f2184
16:07:52,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@189f2184
16:07:52,672 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5207747c
16:07:52,673 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5207747c
16:07:52,673 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5207747c
16:07:52,676 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@39240aa3
16:07:52,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@39240aa3
16:07:52,677 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e6881e
16:07:52,678 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e6881e
16:07:52,679 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2acfd27b
16:07:52,680 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2acfd27b
16:07:52,681 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7892635c
16:07:52,683 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@47a05ad8
16:07:52,684 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5232cec1
16:07:52,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5232cec1
16:07:52,687 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5014ccf9
16:07:52,688 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5014ccf9
16:07:52,690 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4fd8aefe
16:07:52,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4fd8aefe
16:07:52,693 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1b68e626
16:07:52,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1b68e626
16:07:52,693 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1b68e626
16:07:52,697 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d1b9dd7
16:07:52,698 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@378456cb
16:07:52,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@378456cb
16:07:52,699 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@378456cb
16:07:52,700 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7a7698f4
16:07:52,702 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@761d3c20
16:07:52,702 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@761d3c20
16:07:52,704 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@52e2e426
16:07:52,704 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@52e2e426
16:07:52,705 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b87f7cd
16:07:52,706 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b87f7cd
16:07:52,707 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3e455d01
16:07:52,708 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e455d01
16:07:52,709 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@500d4de8
16:07:52,710 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@500d4de8
16:07:52,711 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@f8b6743
16:07:52,712 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@4414ee28
16:07:52,713 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@4414ee28
16:07:52,713 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@4414ee28
16:07:52,715 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@63bdf82d
16:07:52,715 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@63bdf82d
16:07:52,715 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@63bdf82d
16:07:52,716 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@594793d1
16:07:52,718 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@149bdb4e
16:07:52,718 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@149bdb4e
16:07:52,718 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@149bdb4e
16:07:52,720 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@755c29b0
16:07:52,720 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@755c29b0
16:07:52,720 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@755c29b0
16:07:52,722 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@76ac3ad0
16:07:52,722 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@49c74506
16:07:52,728 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@783a35d8
16:07:52,728 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@783a35d8
16:07:52,729 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@db610c3
16:07:52,735 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4676fcd9
16:07:52,735 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4676fcd9
16:07:52,740 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@1da53092
16:07:52,740 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1da53092
16:07:52,741 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2ff4d61b
16:07:52,742 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@58b03882
16:07:52,744 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3d95100f
16:07:52,749 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@371fdf43
16:07:52,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@371fdf43
16:07:52,750 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2b9bacb8
16:07:52,750 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2850fe85
16:07:52,751 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6c7f3af6
16:07:52,751 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3285c141
16:07:52,751 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@440d45c5
16:07:52,751 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6b862f17
16:07:52,752 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7e3b101b
16:07:52,752 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62284954
16:07:53,131  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:07:53,179  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:07:55,302  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:07:51 PDT 2015]; root of context hierarchy
16:07:55,355  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:07:51 PDT 2015]; root of context hierarchy
16:07:55,722  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4c6a5712, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73c71083, org.springframework.security.web.header.HeaderWriterFilter@4cef1ea6, org.springframework.security.web.csrf.CsrfFilter@3f2731e5, org.courseregistration.auth.CustomRestSecurityFilter@21eb33d4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a636c62, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e4d55a6, org.springframework.security.web.access.ExceptionTranslationFilter@5863ef93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@20ee12d8]
16:07:55,849  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:07:51 PDT 2015]; root of context hierarchy
16:07:56,051  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4804 ms
16:09:30,160  INFO XmlWebApplicationContext:954 - Closing Root WebApplicationContext: startup date [Tue Oct 27 16:07:51 PDT 2015]; root of context hierarchy
16:09:30,205  INFO LocalContainerEntityManagerFactoryBean:462 - Closing JPA EntityManagerFactory for persistence unit 'student_registration_system'
16:09:32,920  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:09:33,027  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:09:33 PDT 2015]; root of context hierarchy
16:09:33,075  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:09:33,533  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:09:33,537  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:09:33,572  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:09:33,591  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:09:33,792  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:09:33,793  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:09:33,926  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:09:34,049  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:09:34,112  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:09:34,310  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:09:34,414  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:09:34,416  INFO Environment:213 - HHH000206: hibernate.properties not found
16:09:34,418  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:09:34,465  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:09:34,537 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@168e22e7
16:09:34,537 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@168e22e7
16:09:34,538 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@168e22e7
16:09:34,539 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@8020b42
16:09:34,540 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4600db64
16:09:34,541 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3ff95863
16:09:34,544 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@32646d2
16:09:34,544 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@32646d2
16:09:34,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@32646d2
16:09:34,545 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3536a74e
16:09:34,546 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3536a74e
16:09:34,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3536a74e
16:09:34,548 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3743f4ae
16:09:34,548 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3743f4ae
16:09:34,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3743f4ae
16:09:34,550 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@171a80bd
16:09:34,550 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@171a80bd
16:09:34,550 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@171a80bd
16:09:34,551 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@61bb766
16:09:34,552 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@61bb766
16:09:34,552 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@61bb766
16:09:34,553 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7a6326f9
16:09:34,554 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7a6326f9
16:09:34,554 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7a6326f9
16:09:34,555 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1a1dc03
16:09:34,555 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1a1dc03
16:09:34,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a1dc03
16:09:34,557 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11f9ab04
16:09:34,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11f9ab04
16:09:34,560 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@26d6ce52
16:09:34,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@26d6ce52
16:09:34,561 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@666c3d98
16:09:34,562 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@666c3d98
16:09:34,562 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@185a011
16:09:34,563 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1388d4c
16:09:34,564 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5e5e6bdc
16:09:34,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e5e6bdc
16:09:34,566 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@38476672
16:09:34,567 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38476672
16:09:34,568 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4d8484ec
16:09:34,568 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4d8484ec
16:09:34,570 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@1dee3509
16:09:34,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1dee3509
16:09:34,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1dee3509
16:09:34,571 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2fcf40a9
16:09:34,573 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1a2680b0
16:09:34,573 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1a2680b0
16:09:34,573 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1a2680b0
16:09:34,574 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@74a77a86
16:09:34,575 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@35806023
16:09:34,575 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35806023
16:09:34,576 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@285fc1e9
16:09:34,576 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@285fc1e9
16:09:34,577 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65a671a0
16:09:34,577 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65a671a0
16:09:34,578 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@421bb7c2
16:09:34,578 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@421bb7c2
16:09:34,579 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39074fb5
16:09:34,579 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39074fb5
16:09:34,579 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5183c100
16:09:34,581 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@10ed8be1
16:09:34,581 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@10ed8be1
16:09:34,581 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@10ed8be1
16:09:34,582 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2b2c18e
16:09:34,582 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2b2c18e
16:09:34,582 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2b2c18e
16:09:34,583 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@82fdc01
16:09:34,584 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@4b31d654
16:09:34,584 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@4b31d654
16:09:34,584 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@4b31d654
16:09:34,585 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@55d3d704
16:09:34,585 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@55d3d704
16:09:34,585 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@55d3d704
16:09:34,586 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2ac64ca0
16:09:34,586 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@edc19ea
16:09:34,590 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6d3dbb92
16:09:34,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6d3dbb92
16:09:34,591 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28da091d
16:09:34,595 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@6fdd2b98
16:09:34,595 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6fdd2b98
16:09:34,598 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3e85e508
16:09:34,598 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3e85e508
16:09:34,599 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7fc1ffef
16:09:34,599 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@59d43ed3
16:09:34,600 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@55097a37
16:09:34,603 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3c4d4097
16:09:34,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3c4d4097
16:09:34,604 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@bebfea5
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19985b89
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4700ffc1
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@382844a1
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6ce29bd7
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@37fdc1d1
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@77c3ce18
16:09:34,605 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d34910d
16:09:34,954  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:09:35,010  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:09:37,052  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:09:33 PDT 2015]; root of context hierarchy
16:09:37,102  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:09:33 PDT 2015]; root of context hierarchy
16:09:37,459  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7472c05c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27ea2022, org.springframework.security.web.header.HeaderWriterFilter@538ca0ce, org.springframework.security.web.csrf.CsrfFilter@1995c1a0, org.courseregistration.auth.CustomRestSecurityFilter@7b8792ee, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d9a468c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ba60d21, org.springframework.security.web.access.ExceptionTranslationFilter@c895334, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bdeb0a9]
16:09:37,552  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:09:33 PDT 2015]; root of context hierarchy
16:09:37,747  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4824 ms
16:14:10,323  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:14:10,415  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:14:10 PDT 2015]; root of context hierarchy
16:14:10,453  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:14:10,840  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:14:10,844  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:14:10,884  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:14:10,905  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:14:11,177  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:14:11,179  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:14:11,322  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:14:11,446  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:14:11,512  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:14:11,542  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:14:11,640  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:14:11,645  INFO Environment:213 - HHH000206: hibernate.properties not found
16:14:11,646  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:14:11,712  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:14:11,793 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5abf6a99
16:14:11,794 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5abf6a99
16:14:11,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5abf6a99
16:14:11,795 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7a814310
16:14:11,797 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6b16de91
16:14:11,798 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@65036e8d
16:14:11,800 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@57c69937
16:14:11,800 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@57c69937
16:14:11,801 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@57c69937
16:14:11,802 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@c472300
16:14:11,803 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@c472300
16:14:11,803 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c472300
16:14:11,805 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7f4e5a39
16:14:11,806 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7f4e5a39
16:14:11,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f4e5a39
16:14:11,808 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@64a1116a
16:14:11,808 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@64a1116a
16:14:11,808 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@64a1116a
16:14:11,810 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@37c1cfa
16:14:11,811 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@37c1cfa
16:14:11,811 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@37c1cfa
16:14:11,813 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@41fc0084
16:14:11,814 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@41fc0084
16:14:11,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@41fc0084
16:14:11,816 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7336fd8f
16:14:11,816 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7336fd8f
16:14:11,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7336fd8f
16:14:11,819 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@147e0734
16:14:11,819 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@147e0734
16:14:11,821 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@270d5060
16:14:11,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@270d5060
16:14:11,823 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@987a0bb
16:14:11,823 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@987a0bb
16:14:11,825 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@47a3d56a
16:14:11,826 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6d31f106
16:14:11,827 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7f426ddd
16:14:11,828 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f426ddd
16:14:11,830 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@13ca16bf
16:14:11,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@13ca16bf
16:14:11,833 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1e734eee
16:14:11,833 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e734eee
16:14:11,836 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2424cb9d
16:14:11,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2424cb9d
16:14:11,836 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2424cb9d
16:14:11,840 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@69a373fd
16:14:11,841 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1002d192
16:14:11,842 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1002d192
16:14:11,842 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1002d192
16:14:11,845 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ccc1026
16:14:11,847 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@722787b5
16:14:11,848 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@722787b5
16:14:11,850 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2ccc9681
16:14:11,850 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ccc9681
16:14:11,852 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b31af02
16:14:11,853 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b31af02
16:14:11,855 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6e807e2
16:14:11,856 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6e807e2
16:14:11,858 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@41f964f9
16:14:11,858 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@41f964f9
16:14:11,859 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@713999c2
16:14:11,861 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@34cd65ac
16:14:11,861 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34cd65ac
16:14:11,861 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@34cd65ac
16:14:11,863 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1cba0321
16:14:11,864 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1cba0321
16:14:11,864 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1cba0321
16:14:11,865 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1883871b
16:14:11,866 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5d1a859c
16:14:11,867 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5d1a859c
16:14:11,867 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5d1a859c
16:14:11,868 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1689527c
16:14:11,869 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1689527c
16:14:11,869 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1689527c
16:14:11,870 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e01a26b
16:14:11,871 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@2049e582
16:14:11,876 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2d4fb0d8
16:14:11,877 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2d4fb0d8
16:14:11,877 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5b332439
16:14:11,882 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@d108406
16:14:11,882 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d108406
16:14:11,886 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@570b2057
16:14:11,886 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@570b2057
16:14:11,887 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@59f45950
16:14:11,888 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6a7a1a0d
16:14:11,889 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@33f4c769
16:14:11,893 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@4ce267cc
16:14:11,893 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4ce267cc
16:14:11,894 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@38f617f4
16:14:11,894 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4899799b
16:14:11,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3dea226b
16:14:11,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74500e4f
16:14:11,895 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c91fe86
16:14:11,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7fc7152e
16:14:11,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@13d289c7
16:14:11,896 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6704df84
16:14:12,281  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:14:12,451  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:14:14,506  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:14:10 PDT 2015]; root of context hierarchy
16:14:14,563  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:14:10 PDT 2015]; root of context hierarchy
16:14:14,968  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@7f8f5d37, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f9cd1e6, org.springframework.security.web.header.HeaderWriterFilter@3ff53704, org.springframework.security.web.csrf.CsrfFilter@34d11c92, org.courseregistration.auth.CustomRestSecurityFilter@31b289da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58486deb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4e933cf1, org.springframework.security.web.access.ExceptionTranslationFilter@729a9c3d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@574327ed]
16:14:15,081  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:14:10 PDT 2015]; root of context hierarchy
16:14:15,245  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4919 ms
16:15:07,319  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:15:07,453  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:15:07 PDT 2015]; root of context hierarchy
16:15:07,504  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:15:07,996  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:15:08,000  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:15:08,047  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:15:08,082  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:15:08,337  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:15:08,339  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:15:08,473  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:15:08,609  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:15:08,665  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:15:08,697  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:15:08,870  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:15:08,875  INFO Environment:213 - HHH000206: hibernate.properties not found
16:15:08,878  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:15:08,951  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:15:09,046 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5584d9c6
16:15:09,047 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5584d9c6
16:15:09,047 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5584d9c6
16:15:09,048 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3127cb44
16:15:09,050 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@17e9bc9e
16:15:09,051 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2bfaba70
16:15:09,053 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1668919e
16:15:09,053 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1668919e
16:15:09,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1668919e
16:15:09,055 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@b67cc70
16:15:09,056 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@b67cc70
16:15:09,056 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@b67cc70
16:15:09,059 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b4a1a75
16:15:09,060 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3b4a1a75
16:15:09,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b4a1a75
16:15:09,062 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3eb292cd
16:15:09,063 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3eb292cd
16:15:09,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3eb292cd
16:15:09,067 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6807a356
16:15:09,067 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@6807a356
16:15:09,068 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6807a356
16:15:09,070 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@25f15f50
16:15:09,070 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@25f15f50
16:15:09,071 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@25f15f50
16:15:09,073 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@11d045b4
16:15:09,073 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@11d045b4
16:15:09,074 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@11d045b4
16:15:09,080 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@428bdd72
16:15:09,080 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@428bdd72
16:15:09,082 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1835dc92
16:15:09,082 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1835dc92
16:15:09,084 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2db1b657
16:15:09,084 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2db1b657
16:15:09,086 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@30c3ae63
16:15:09,087 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@39ee94de
16:15:09,098 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4a92c6a9
16:15:09,099 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4a92c6a9
16:15:09,102 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5a545b0f
16:15:09,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5a545b0f
16:15:09,108 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@14c93774
16:15:09,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14c93774
16:15:09,115 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@430b2699
16:15:09,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@430b2699
16:15:09,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@430b2699
16:15:09,120 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d16be4f
16:15:09,122 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@250a9031
16:15:09,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@250a9031
16:15:09,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@250a9031
16:15:09,124 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4f654cee
16:15:09,125 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@70025b99
16:15:09,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@70025b99
16:15:09,127 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6ff0b1cc
16:15:09,127 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ff0b1cc
16:15:09,128 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@441fbe89
16:15:09,128 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@441fbe89
16:15:09,130 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3440e9cd
16:15:09,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3440e9cd
16:15:09,132 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@92d1782
16:15:09,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@92d1782
16:15:09,134 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@726934e2
16:15:09,136 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@27abb6ca
16:15:09,136 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@27abb6ca
16:15:09,136 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@27abb6ca
16:15:09,138 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ceee4b6
16:15:09,139 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ceee4b6
16:15:09,139 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ceee4b6
16:15:09,141 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3f6bf8aa
16:15:09,142 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@7a9eccc4
16:15:09,164 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@7a9eccc4
16:15:09,165 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@7a9eccc4
16:15:09,167 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7cfac39f
16:15:09,167 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7cfac39f
16:15:09,167 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7cfac39f
16:15:09,168 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@7235f92b
16:15:09,170 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@3a3ed300
16:15:09,179 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@10272bbb
16:15:09,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10272bbb
16:15:09,181 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7c5d1d25
16:15:09,185 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@59b32539
16:15:09,185 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@59b32539
16:15:09,196 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2b6a0ea9
16:15:09,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b6a0ea9
16:15:09,198 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3b4825f0
16:15:09,199 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f0020b1
16:15:09,200 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@3ddb774f
16:15:09,203 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@7c20cdd0
16:15:09,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7c20cdd0
16:15:09,204 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d4df0e
16:15:09,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7ae0cc89
16:15:09,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@de7e193
16:15:09,205 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@13e5d243
16:15:09,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@35ef439e
16:15:09,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4997552e
16:15:09,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7bcecef6
16:15:09,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@46046c06
16:15:09,736  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:15:09,892  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:15:12,235  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:15:07 PDT 2015]; root of context hierarchy
16:15:12,301  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:15:07 PDT 2015]; root of context hierarchy
16:15:12,719  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@74c7522c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77c23d90, org.springframework.security.web.header.HeaderWriterFilter@6d17914a, org.springframework.security.web.csrf.CsrfFilter@49631cfb, org.courseregistration.auth.CustomRestSecurityFilter@77b71c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6133e20b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30ffb2a6, org.springframework.security.web.access.ExceptionTranslationFilter@612af486, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d033453]
16:15:12,860  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:15:07 PDT 2015]; root of context hierarchy
16:15:13,003  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5681 ms
16:16:16,096  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:16:16,188  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:16:16 PDT 2015]; root of context hierarchy
16:16:16,224  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:16:16,565  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:16:16,568  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:16:16,598  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:16:16,611  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:16:16,814  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:16:16,816  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:16:16,944  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:16:17,046  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:16:17,088  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:16:17,122  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:16:17,210  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:16:17,214  INFO Environment:213 - HHH000206: hibernate.properties not found
16:16:17,216  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:16:17,274  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:16:17,361 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@11d0bff5
16:16:17,362 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@11d0bff5
16:16:17,362 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@11d0bff5
16:16:17,363 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@be9bf2e
16:16:17,364 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@f73a7cf
16:16:17,364 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@21fa19e4
16:16:17,366 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c056020
16:16:17,366 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@6c056020
16:16:17,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c056020
16:16:17,368 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4e93d23e
16:16:17,368 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4e93d23e
16:16:17,368 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4e93d23e
16:16:17,369 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@446fb72e
16:16:17,370 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@446fb72e
16:16:17,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@446fb72e
16:16:17,371 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6484364f
16:16:17,371 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6484364f
16:16:17,371 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6484364f
16:16:17,373 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@26f7b114
16:16:17,373 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@26f7b114
16:16:17,374 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@26f7b114
16:16:17,375 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@524418a2
16:16:17,375 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@524418a2
16:16:17,375 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@524418a2
16:16:17,377 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c80f8dd
16:16:17,377 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@1c80f8dd
16:16:17,377 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c80f8dd
16:16:17,380 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3eadfbbb
16:16:17,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3eadfbbb
16:16:17,381 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@307e9c02
16:16:17,381 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@307e9c02
16:16:17,382 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@8961e55
16:16:17,382 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@8961e55
16:16:17,383 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79735611
16:16:17,384 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7866fe3e
16:16:17,386 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@5466a819
16:16:17,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5466a819
16:16:17,389 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@14af57c3
16:16:17,389 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@14af57c3
16:16:17,391 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@2fd409c1
16:16:17,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2fd409c1
16:16:17,394 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@11a29c0
16:16:17,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11a29c0
16:16:17,395 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11a29c0
16:16:17,397 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2dbc66f0
16:16:17,398 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@3fe21d0e
16:16:17,398 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3fe21d0e
16:16:17,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3fe21d0e
16:16:17,400 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1d7f0cd0
16:16:17,401 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@6e627ab8
16:16:17,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6e627ab8
16:16:17,402 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@f31b991
16:16:17,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@f31b991
16:16:17,404 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5058fefb
16:16:17,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5058fefb
16:16:17,405 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@3bdc8975
16:16:17,406 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3bdc8975
16:16:17,407 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7dc9b41a
16:16:17,408 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7dc9b41a
16:16:17,408 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6f53295e
16:16:17,410 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@31885b4b
16:16:17,410 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@31885b4b
16:16:17,411 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@31885b4b
16:16:17,414 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e4c0bc7
16:16:17,415 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e4c0bc7
16:16:17,415 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e4c0bc7
16:16:17,416 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@1c618295
16:16:17,417 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@39179470
16:16:17,417 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@39179470
16:16:17,417 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@39179470
16:16:17,418 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5ff8d76f
16:16:17,418 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5ff8d76f
16:16:17,418 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5ff8d76f
16:16:17,419 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@2cdd156b
16:16:17,420 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@54816d7a
16:16:17,427 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@74cf2d5f
16:16:17,428 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@74cf2d5f
16:16:17,428 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a2ca681
16:16:17,432 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@623bdc46
16:16:17,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@623bdc46
16:16:17,435 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@e280006
16:16:17,435 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e280006
16:16:17,436 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13e5c53c
16:16:17,436 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d62feaf
16:16:17,438 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@6b7e4db6
16:16:17,442 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@578781f7
16:16:17,442 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@578781f7
16:16:17,443 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2480acc3
16:16:17,443 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4fe3199d
16:16:17,443 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58ebfbcb
16:16:17,444 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68a7f77a
16:16:17,444 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4960b819
16:16:17,444 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e987f59
16:16:17,444 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@192aeae2
16:16:17,445 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4ee1c29a
16:16:17,834  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:16:17,870  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:16:19,621  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:16 PDT 2015]; root of context hierarchy
16:16:19,665  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:16 PDT 2015]; root of context hierarchy
16:16:19,939  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@e38b953, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a648b35, org.springframework.security.web.header.HeaderWriterFilter@673a702a, org.springframework.security.web.csrf.CsrfFilter@75c5ab79, org.courseregistration.auth.CustomRestSecurityFilter@3e7c66b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@502f6f6a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64a0ee65, org.springframework.security.web.access.ExceptionTranslationFilter@3ce60feb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61f2bf3a]
16:16:20,023  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:16 PDT 2015]; root of context hierarchy
16:16:20,124  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4025 ms
16:16:35,636  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
16:16:35,724  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 16:16:35 PDT 2015]; root of context hierarchy
16:16:35,761  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
16:16:36,099  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
16:16:36,102  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
16:16:36,133  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
16:16:36,147  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
16:16:36,262  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
16:16:36,263  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
16:16:36,354  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
16:16:36,436  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
16:16:36,476  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
16:16:36,503  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
16:16:36,595  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
16:16:36,599  INFO Environment:213 - HHH000206: hibernate.properties not found
16:16:36,600  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
16:16:36,652  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
16:16:36,720 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c8dbf56
16:16:36,721 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6c8dbf56
16:16:36,721 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6c8dbf56
16:16:36,722 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@45adc393
16:16:36,722 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1823b9c4
16:16:36,723 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@adcfad9
16:16:36,724 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12a2585b
16:16:36,724 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12a2585b
16:16:36,724 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12a2585b
16:16:36,725 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@2c9a6717
16:16:36,726 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@2c9a6717
16:16:36,726 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2c9a6717
16:16:36,727 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@76fe6cdc
16:16:36,727 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@76fe6cdc
16:16:36,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@76fe6cdc
16:16:36,728 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@35c4e864
16:16:36,728 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@35c4e864
16:16:36,728 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@35c4e864
16:16:36,730 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c9c6245
16:16:36,730 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c9c6245
16:16:36,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c9c6245
16:16:36,731 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2b4b96a4
16:16:36,732 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2b4b96a4
16:16:36,732 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b4b96a4
16:16:36,733 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@9301672
16:16:36,734 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@9301672
16:16:36,734 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9301672
16:16:36,737 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@b67cc70
16:16:36,738 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@b67cc70
16:16:36,739 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5a936e64
16:16:36,740 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5a936e64
16:16:36,741 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@d3f4505
16:16:36,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@d3f4505
16:16:36,742 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2fe74516
16:16:36,743 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@73aeef7d
16:16:36,745 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7a3b7122
16:16:36,745 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7a3b7122
16:16:36,747 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1fbf088b
16:16:36,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1fbf088b
16:16:36,750 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@1d8b0500
16:16:36,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d8b0500
16:16:36,752 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6fff46bf
16:16:36,752 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6fff46bf
16:16:36,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6fff46bf
16:16:36,756 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@65a9ea3c
16:16:36,757 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@43c57161
16:16:36,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@43c57161
16:16:36,757 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@43c57161
16:16:36,758 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@30c3ae63
16:16:36,759 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@39ee94de
16:16:36,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39ee94de
16:16:36,760 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@4a92c6a9
16:16:36,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4a92c6a9
16:16:36,762 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71ed560f
16:16:36,762 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71ed560f
16:16:36,763 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@5a545b0f
16:16:36,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5a545b0f
16:16:36,765 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@18b74ea
16:16:36,765 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@18b74ea
16:16:36,765 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f939a0f
16:16:36,767 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@d16be4f
16:16:36,767 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@d16be4f
16:16:36,767 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@d16be4f
16:16:36,769 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1665fa54
16:16:36,769 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1665fa54
16:16:36,770 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1665fa54
16:16:36,771 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@558b4942
16:16:36,772 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2262d6d5
16:16:36,772 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2262d6d5
16:16:36,773 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2262d6d5
16:16:36,774 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@51b77cdf
16:16:36,774 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@51b77cdf
16:16:36,775 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@51b77cdf
16:16:36,775 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1642eeae
16:16:36,776 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@322ba549
16:16:36,781 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@2c63762b
16:16:36,781 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2c63762b
16:16:36,782 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f05c8d6
16:16:36,786 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@36e43829
16:16:36,786 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36e43829
16:16:36,789 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@32eae6f2
16:16:36,790 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@32eae6f2
16:16:36,790 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@fa5f81c
16:16:36,793 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@483b0690
16:16:36,795 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@4debbf0
16:16:36,799 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@40c2ce52
16:16:36,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@40c2ce52
16:16:36,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e13f304
16:16:36,800 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@787508ca
16:16:36,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d24420b
16:16:36,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6274670b
16:16:36,801 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53ce2392
16:16:36,802 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32d5279
16:16:36,802 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1c067c0d
16:16:36,802 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d0b0cb9
16:16:37,166  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
16:16:37,205  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
16:16:38,966  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:35 PDT 2015]; root of context hierarchy
16:16:39,011  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:35 PDT 2015]; root of context hierarchy
16:16:39,285  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5c33008f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45d7495e, org.springframework.security.web.header.HeaderWriterFilter@30517a57, org.springframework.security.web.csrf.CsrfFilter@3dde5f38, org.courseregistration.auth.CustomRestSecurityFilter@79ad1774, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64f3ca6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3df77dfa, org.springframework.security.web.access.ExceptionTranslationFilter@721fc2e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63187d63]
16:16:39,360  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 16:16:35 PDT 2015]; root of context hierarchy
16:16:39,477  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 3838 ms
18:16:41,176  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:16:41,273  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:16:41 PDT 2015]; root of context hierarchy
18:16:41,308  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:16:41,676  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:16:41,678  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:16:41,708  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:16:41,722  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:16:41,885  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:16:41,886  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:16:42,014  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:16:42,111  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:16:42,153  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:16:42,184  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:16:42,261  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:16:42,264  INFO Environment:213 - HHH000206: hibernate.properties not found
18:16:42,266  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:16:42,333  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:16:42,410 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f93a8f6
18:16:42,410 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@4f93a8f6
18:16:42,410 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4f93a8f6
18:16:42,411 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43c64d6f
18:16:42,412 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@c7d173f
18:16:42,413 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@344acc03
18:16:42,414 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49994a4
18:16:42,415 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@49994a4
18:16:42,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49994a4
18:16:42,416 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5746609e
18:16:42,417 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5746609e
18:16:42,417 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5746609e
18:16:42,418 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@42fb2be9
18:16:42,419 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@42fb2be9
18:16:42,419 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@42fb2be9
18:16:42,420 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1a67bde5
18:16:42,420 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1a67bde5
18:16:42,421 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a67bde5
18:16:42,422 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13b5598b
18:16:42,423 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@13b5598b
18:16:42,423 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@13b5598b
18:16:42,425 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7b55fc83
18:16:42,425 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@7b55fc83
18:16:42,426 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b55fc83
18:16:42,427 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5aec151b
18:16:42,427 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5aec151b
18:16:42,427 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5aec151b
18:16:42,431 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1e9b0c92
18:16:42,431 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1e9b0c92
18:16:42,432 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2b98c310
18:16:42,433 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2b98c310
18:16:42,434 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@33d08a24
18:16:42,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@33d08a24
18:16:42,435 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@68c3aa38
18:16:42,436 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@411576c7
18:16:42,437 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@10b7b5f0
18:16:42,437 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@10b7b5f0
18:16:42,439 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@55849272
18:16:42,439 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55849272
18:16:42,442 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@54e3cba2
18:16:42,442 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@54e3cba2
18:16:42,444 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@73a88711
18:16:42,445 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@73a88711
18:16:42,445 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@73a88711
18:16:42,451 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b7e4db6
18:16:42,452 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@25c98637
18:16:42,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25c98637
18:16:42,453 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25c98637
18:16:42,454 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4125bc3c
18:16:42,455 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@43735ea0
18:16:42,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@43735ea0
18:16:42,456 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@2480acc3
18:16:42,456 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2480acc3
18:16:42,457 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1e987f59
18:16:42,457 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1e987f59
18:16:42,459 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1181526e
18:16:42,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1181526e
18:16:42,461 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c485b3a
18:16:42,461 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c485b3a
18:16:42,462 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2222cd2c
18:16:42,464 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2bd158ea
18:16:42,464 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2bd158ea
18:16:42,464 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2bd158ea
18:16:42,466 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2a6871ad
18:16:42,466 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2a6871ad
18:16:42,466 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2a6871ad
18:16:42,467 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@35d145fb
18:16:42,468 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@77511e9c
18:16:42,469 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@77511e9c
18:16:42,469 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@77511e9c
18:16:42,471 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@81a56b2
18:16:42,471 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@81a56b2
18:16:42,471 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@81a56b2
18:16:42,472 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6fc1a1d5
18:16:42,473 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@218fc40d
18:16:42,478 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6fd07a56
18:16:42,478 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6fd07a56
18:16:42,479 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@e60c466
18:16:42,483 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2821da0a
18:16:42,483 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2821da0a
18:16:42,486 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@425a5c2e
18:16:42,486 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@425a5c2e
18:16:42,487 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1cdb280b
18:16:42,488 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40625ac6
18:16:42,490 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@53945f9c
18:16:42,493 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@5fb05c07
18:16:42,494 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5fb05c07
18:16:42,494 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6d96a895
18:16:42,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@309b8144
18:16:42,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70c99e13
18:16:42,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@321558f8
18:16:42,495 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a9f8c2f
18:16:42,496 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@662b199
18:16:42,496 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3a678e40
18:16:42,496 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@222dc36c
18:16:42,655  WARN JdbcEnvironmentInitiator:132 - HHH000342: Could not obtain connection to query metadata : Communications link failure

Last packet sent to the server was 2 ms ago.
18:16:42,669  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:16:42,694  INFO LobCreatorBuilderImpl:63 - HHH000422: Disabling contextual LOB creation as connection was null
18:16:43,463  WARN XmlWebApplicationContext:544 - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
18:16:43,474 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1578)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:305)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:301)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:825)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: student_registration_system] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:877)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:805)
	at org.hibernate.jpa.HibernatePersistenceProvider.createContainerEntityManagerFactory(HibernatePersistenceProvider.java:135)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	... 69 more
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Unable to open JDBC connection for schema management target
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:42)
	at org.hibernate.tool.schema.internal.SchemaMigratorImpl.doMigration(SchemaMigratorImpl.java:56)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:129)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:97)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:481)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:444)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:802)
	... 74 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

Last packet sent to the server was 0 ms ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:1074)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2103)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:208)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:153)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:144)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(AbstractDriverBasedDataSource.java:155)
	at org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnection(AbstractDriverBasedDataSource.java:120)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.tool.schema.internal.TargetDatabaseImpl.prepare(TargetDatabaseImpl.java:38)
	... 80 more
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at java.net.Socket.<init>(Socket.java:434)
	at java.net.Socket.<init>(Socket.java:244)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:253)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:280)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2026)
	... 98 more
18:17:37,548  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:17:37,638  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:17:37 PDT 2015]; root of context hierarchy
18:17:37,678  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:17:38,025  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:17:38,028  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:17:38,056  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:17:38,070  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:17:38,215  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:17:38,217  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:17:38,322  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:17:38,410  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:17:38,457  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:17:38,489  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:17:38,573  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:17:38,576  INFO Environment:213 - HHH000206: hibernate.properties not found
18:17:38,577  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:17:38,630  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:17:38,710 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@adcfad9
18:17:38,711 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@adcfad9
18:17:38,711 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@adcfad9
18:17:38,713 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2553d9
18:17:38,715 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c9a6717
18:17:38,716 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c663eaf
18:17:38,718 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46039a21
18:17:38,719 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46039a21
18:17:38,720 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46039a21
18:17:38,722 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5f36c8e3
18:17:38,722 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5f36c8e3
18:17:38,722 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5f36c8e3
18:17:38,724 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6ef60295
18:17:38,724 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6ef60295
18:17:38,725 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ef60295
18:17:38,726 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3252747e
18:17:38,726 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3252747e
18:17:38,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3252747e
18:17:38,728 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@71adfedd
18:17:38,728 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@71adfedd
18:17:38,729 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@71adfedd
18:17:38,730 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a6045c6
18:17:38,730 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a6045c6
18:17:38,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a6045c6
18:17:38,732 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d97e06c
18:17:38,732 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d97e06c
18:17:38,732 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d97e06c
18:17:38,734 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e99b9c
18:17:38,735 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e99b9c
18:17:38,736 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@73aeef7d
18:17:38,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@73aeef7d
18:17:38,737 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7a3b7122
18:17:38,737 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7a3b7122
18:17:38,738 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@67022ea
18:17:38,740 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fbf088b
18:17:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7ec95456
18:17:38,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ec95456
18:17:38,743 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1835dc92
18:17:38,744 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1835dc92
18:17:38,746 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@43c57161
18:17:38,747 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@43c57161
18:17:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d84049a
18:17:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d84049a
18:17:38,749 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d84049a
18:17:38,752 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c6b4ed7
18:17:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4cb702ce
18:17:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4cb702ce
18:17:38,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4cb702ce
18:17:38,754 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71ed560f
18:17:38,757 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@5a545b0f
18:17:38,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a545b0f
18:17:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@40247d48
18:17:38,759 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40247d48
18:17:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14924f41
18:17:38,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14924f41
18:17:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@67536ae0
18:17:38,761 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67536ae0
18:17:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d67f5eb
18:17:38,763 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d67f5eb
18:17:38,764 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7112ce6
18:17:38,765 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7134b8a7
18:17:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7134b8a7
18:17:38,766 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7134b8a7
18:17:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
18:17:38,768 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
18:17:38,769 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
18:17:38,771 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2f10f633
18:17:38,772 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1163a27
18:17:38,773 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1163a27
18:17:38,773 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1163a27
18:17:38,774 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@92d1782
18:17:38,775 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@92d1782
18:17:38,775 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@92d1782
18:17:38,776 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e280403
18:17:38,777 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6968c1d6
18:17:38,780 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3472947a
18:17:38,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3472947a
18:17:38,781 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1984212d
18:17:38,785 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@f9cab00
18:17:38,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f9cab00
18:17:38,789 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@771a7d53
18:17:38,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@771a7d53
18:17:38,790 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a917723
18:17:38,790 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d94a2dc
18:17:38,791 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@40c2ce52
18:17:38,795 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1860f3be
18:17:38,796 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1860f3be
18:17:38,796 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3408f695
18:17:38,797 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2b6a0ea9
18:17:38,797 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4dde8976
18:17:38,798 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4887de2b
18:17:38,798 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b4825f0
18:17:38,798 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40ac6b76
18:17:38,798 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7980cf2c
18:17:38,798 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f0020b1
18:17:39,266  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:17:39,307  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:17:41,270  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:17:37 PDT 2015]; root of context hierarchy
18:17:41,310  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:17:37 PDT 2015]; root of context hierarchy
18:17:41,593  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@fcf9525, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@300bb303, org.springframework.security.web.header.HeaderWriterFilter@4243341e, org.springframework.security.web.csrf.CsrfFilter@d1c5cf2, org.courseregistration.auth.CustomRestSecurityFilter@7e0986c9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1377b1a0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48cf8414, org.springframework.security.web.access.ExceptionTranslationFilter@27dbaa33, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15d65fcf]
18:17:41,682  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:17:37 PDT 2015]; root of context hierarchy
18:17:41,777  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4226 ms
18:17:49,506 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@657f861d
18:17:49,507  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:17:49,536 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
18:17:49,547 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

18:17:49,547 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:17:49,577 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:17:49,601 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:17:49,604 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:17:49,609 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:17:49,611 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.LongType@71adfedd
18:17:49,612 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.college_id
18:17:49,616 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:17:49,617 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id username ) ? ) ) )
18:17:49,626 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:17:49,628 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:17:49,629 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.LongType@71adfedd}

18:17:49,629 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:17:49,640 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
18:17:49,640 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:17:49,640 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:17:49,677 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:17:49,752 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:17:49,773 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:17:49,868 ERROR GenericExceptionMapper:21 - HTTP 404 Not Found
com.sun.jersey.api.ParamException$PathParamException: HTTP 404 Not Found
	at com.sun.jersey.server.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(PathParamInjectableProvider.java:79)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "paged"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.valueOf(Long.java:803)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.server.impl.model.parameter.multivalued.StringReaderProviders$TypeValueOf$1._fromString(StringReaderProviders.java:114)
	at com.sun.jersey.server.impl.model.parameter.multivalued.StringReaderProviders$AbstractStringReader.fromString(StringReaderProviders.java:70)
	at com.sun.jersey.server.impl.model.parameter.multivalued.StringReaderExtractor.extract(StringReaderExtractor.java:64)
	at com.sun.jersey.server.impl.model.parameter.PathParamInjectableProvider$PathParamInjectable.getValue(PathParamInjectableProvider.java:77)
	... 70 more
18:18:01,186 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:18:01,209 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:18:01,211 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:18:01,236 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
18:18:01,245 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

18:18:01,246 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:18:01,247 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:18:01,249 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
18:18:01,251 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
18:18:01,252 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@7a3b7122
18:18:01,252 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
18:18:01,253 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:18:01,253 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
18:18:01,255 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
18:18:01,256 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
18:18:01,261 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:18:01,262 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

18:18:01,385 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:18:01,386 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
18:18:01,387 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
18:18:01,388 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:18:01,389 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
18:18:42,571 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:18:42,578 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:18:42,580 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:18:42,582 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
18:19:29,257 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:19:29,267 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:19:29,269 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:19:29,277 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
18:19:29,289 ERROR GenericExceptionMapper:21 -
org.courseregistration.exception.ApplicationException
	at org.courseregistration.exception.ApplicationException$ApplicationExceptionBuilder.build(ApplicationException.java:109)
	at org.courseregistration.service.CourseService.findById(CourseService.java:63)
	at org.courseregistration.rest.CourseController.findCourseById(CourseController.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
18:39:11,830  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
18:39:11,942  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 18:39:11 PDT 2015]; root of context hierarchy
18:39:11,985  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
18:39:12,611  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
18:39:12,614  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
18:39:12,664  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
18:39:12,683  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
18:39:12,877  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
18:39:12,878  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
18:39:13,084  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
18:39:13,240  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
18:39:13,287  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
18:39:13,332  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
18:39:13,432  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
18:39:13,434  INFO Environment:213 - HHH000206: hibernate.properties not found
18:39:13,436  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
18:39:13,504  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
18:39:13,607 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e577eed
18:39:13,607 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@7e577eed
18:39:13,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e577eed
18:39:13,608 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4cf1bd4a
18:39:13,610 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5dc8448b
18:39:13,611 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@255b84a9
18:39:13,612 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@175c26ff
18:39:13,613 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@175c26ff
18:39:13,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@175c26ff
18:39:13,614 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@795e8ef5
18:39:13,614 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@795e8ef5
18:39:13,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@795e8ef5
18:39:13,615 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5318731f
18:39:13,616 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@5318731f
18:39:13,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5318731f
18:39:13,618 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@55849272
18:39:13,618 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@55849272
18:39:13,618 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55849272
18:39:13,621 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@54e3cba2
18:39:13,621 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@54e3cba2
18:39:13,621 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54e3cba2
18:39:13,625 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43f5b014
18:39:13,625 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@43f5b014
18:39:13,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@43f5b014
18:39:13,628 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@fbdba1c
18:39:13,629 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@fbdba1c
18:39:13,629 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@fbdba1c
18:39:13,632 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7bbd944e
18:39:13,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7bbd944e
18:39:13,634 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4960b819
18:39:13,634 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4960b819
18:39:13,635 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5f32de90
18:39:13,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f32de90
18:39:13,637 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@690c3b1f
18:39:13,638 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c485b3a
18:39:13,639 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@3d2b8e
18:39:13,640 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d2b8e
18:39:13,643 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@260043d
18:39:13,643 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@260043d
18:39:13,645 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4e312811
18:39:13,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e312811
18:39:13,648 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@ad6255e
18:39:13,648 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@ad6255e
18:39:13,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@ad6255e
18:39:13,651 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2530baf6
18:39:13,653 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@6d6ddeb5
18:39:13,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6d6ddeb5
18:39:13,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6d6ddeb5
18:39:13,654 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@218fc40d
18:39:13,655 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@72ad577b
18:39:13,655 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@72ad577b
18:39:13,656 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@d164938
18:39:13,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@d164938
18:39:13,657 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@501b15b9
18:39:13,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@501b15b9
18:39:13,658 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@69346100
18:39:13,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@69346100
18:39:13,660 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1315befe
18:39:13,660 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1315befe
18:39:13,661 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@620e0d36
18:39:13,662 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6ebf9c2d
18:39:13,663 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ebf9c2d
18:39:13,663 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6ebf9c2d
18:39:13,664 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@76641439
18:39:13,665 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@76641439
18:39:13,665 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@76641439
18:39:13,665 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@38991781
18:39:13,666 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@5032b2e
18:39:13,667 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@5032b2e
18:39:13,667 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@5032b2e
18:39:13,668 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7ddf8d
18:39:13,669 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7ddf8d
18:39:13,669 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7ddf8d
18:39:13,670 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@13f10967
18:39:13,671 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@c194c4e
18:39:13,675 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@428e9be2
18:39:13,675 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@428e9be2
18:39:13,676 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7137cd14
18:39:13,680 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@40ecead5
18:39:13,680 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@40ecead5
18:39:13,685 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@362e6fe
18:39:13,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@362e6fe
18:39:13,686 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cf166db
18:39:13,687 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1d0acb8f
18:39:13,688 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5b27d03d
18:39:13,691 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@759c53e5
18:39:13,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@759c53e5
18:39:13,692 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e7fc07e
18:39:13,693 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29ebaf2f
18:39:13,693 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a61f634
18:39:13,693 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20a2930f
18:39:13,694 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@609edb55
18:39:13,694 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@147892be
18:39:13,694 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@13d1653
18:39:13,694 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3533d790
18:39:14,118  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
18:39:14,150  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
18:39:16,386  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:11 PDT 2015]; root of context hierarchy
18:39:16,431  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:11 PDT 2015]; root of context hierarchy
18:39:16,680  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@149bdb4e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f5aac08, org.springframework.security.web.header.HeaderWriterFilter@3747877, org.springframework.security.web.csrf.CsrfFilter@86abdbd, org.courseregistration.auth.CustomRestSecurityFilter@42e14655, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@81198ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2806fe58, org.springframework.security.web.access.ExceptionTranslationFilter@755c29b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3dc70aa0]
18:39:16,756  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 18:39:11 PDT 2015]; root of context hierarchy
18:39:16,847  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5013 ms
18:46:26,977 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@19ecde66
18:46:26,979  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
18:46:27,020 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
18:46:27,038 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

18:46:27,038 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,071 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:46:27,094 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
18:46:27,095 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:46:27,099 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
18:46:27,101 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.LongType@54e3cba2
18:46:27,103 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.college_id
18:46:27,106 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:46:27,107 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.college_id user0_.user_id username ) ? ) ) )
18:46:27,123 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
18:46:27,123 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:46:27,124 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.college_id' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.LongType@54e3cba2}

18:46:27,125 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,133 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
18:46:27,133 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:46:27,133 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,162 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:46:27,223 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,243 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,339 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
18:46:27,341 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

18:46:27,341 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,342 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
18:46:27,342 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
18:46:27,344 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
18:46:27,344 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@5f32de90
18:46:27,345 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
18:46:27,345 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
18:46:27,346 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
18:46:27,347 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
18:46:27,348 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
18:46:27,348 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
18:46:27,349 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

18:46:27,349 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,350 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
18:46:27,351 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
18:46:27,351 DEBUG ErrorCounter:95 - throwQueryException() : no errors
18:46:27,353 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
18:46:27,373 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,375 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,377 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,378 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,381 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,382 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:46:27,384 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,387 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,389 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,390 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,392 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:46:27,393 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:47:03,182 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.college_id as college_2_8_, user0_.date_of_birth as date_of_3_8_, user0_.email_id as email_id4_8_, user0_.first_name as first_na5_8_, user0_.password as password6_8_, user0_.last_name as last_nam7_8_, user0_.middle_name as middle_n8_8_, user0_.phone_number as phone_nu9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.college_id=?
18:47:03,194 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
18:47:03,198 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
18:47:03,231 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_0_, professor0_1_.address_id as address10_8_0_, professor0_1_.college_id as college_2_8_0_, professor0_1_.date_of_birth as date_of_3_8_0_, professor0_1_.email_id as email_id4_8_0_, professor0_1_.first_name as first_na5_8_0_, professor0_1_.password as password6_8_0_, professor0_1_.last_name as last_nam7_8_0_, professor0_1_.middle_name as middle_n8_8_0_, professor0_1_.phone_number as phone_nu9_8_0_, professor0_.faculty_type as faculty_1_3_0_, professor0_.office_hours_from_time as office_h2_3_0_, professor0_.office_hours_to_time as office_h3_3_0_, professor0_.years_of_experience as years_of4_3_0_, address1_.address_id as address_1_0_1_, address1_.apt_no as apt_no2_0_1_, address1_.city as city3_0_1_, address1_.state as state4_0_1_, address1_.street_name as street_n5_0_1_, address1_.zip_code as zip_code6_0_1_, roles2_.user_id as user_id1_7_2_, role3_.role_id as role_id2_7_2_, role3_.role_id as role_id1_4_3_, role3_.name as name2_4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id inner join address address1_ on professor0_1_.address_id=address1_.address_id left outer join user_role roles2_ on professor0_.user_id=roles2_.user_id left outer join roles role3_ on roles2_.role_id=role3_.role_id where professor0_.user_id=?
21:24:14,797  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
21:24:14,893  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 21:24:14 PDT 2015]; root of context hierarchy
21:24:14,930  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
21:24:15,332  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
21:24:15,334  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
21:24:15,362  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
21:24:15,376  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
21:24:15,570  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
21:24:15,571  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
21:24:15,691  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
21:24:15,796  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
21:24:15,846  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
21:24:15,873  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
21:24:15,957  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
21:24:15,961  INFO Environment:213 - HHH000206: hibernate.properties not found
21:24:15,963  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
21:24:16,035  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
21:24:16,117 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b8cdc4
21:24:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6b8cdc4
21:24:16,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b8cdc4
21:24:16,119 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2530baf6
21:24:16,120 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5cfa9e8a
21:24:16,121 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@26bbbe9e
21:24:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4e8b36af
21:24:16,123 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4e8b36af
21:24:16,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e8b36af
21:24:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1f4b8027
21:24:16,125 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1f4b8027
21:24:16,126 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f4b8027
21:24:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@16a14076
21:24:16,128 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@16a14076
21:24:16,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@16a14076
21:24:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@17d83fe4
21:24:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@17d83fe4
21:24:16,130 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17d83fe4
21:24:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cd2adc7
21:24:16,132 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5cd2adc7
21:24:16,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5cd2adc7
21:24:16,135 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4d529dbf
21:24:16,136 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@4d529dbf
21:24:16,136 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d529dbf
21:24:16,138 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3c577368
21:24:16,138 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3c577368
21:24:16,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c577368
21:24:16,142 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@e7ddf8d
21:24:16,143 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@e7ddf8d
21:24:16,144 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@76ffd052
21:24:16,145 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@76ffd052
21:24:16,146 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@4bd39edc
21:24:16,146 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4bd39edc
21:24:16,147 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e1bfe66
21:24:16,148 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58cd6088
21:24:16,149 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@40625ac6
21:24:16,150 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@40625ac6
21:24:16,152 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@54d9b23a
21:24:16,153 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@54d9b23a
21:24:16,155 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6de2344a
21:24:16,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6de2344a
21:24:16,157 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@309b8144
21:24:16,157 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@309b8144
21:24:16,157 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@309b8144
21:24:16,160 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6a9f8c2f
21:24:16,162 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@27b84c9a
21:24:16,162 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@27b84c9a
21:24:16,163 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@27b84c9a
21:24:16,163 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77e1b84c
21:24:16,165 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@255482cb
21:24:16,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@255482cb
21:24:16,166 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@53086bdc
21:24:16,167 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@53086bdc
21:24:16,168 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1d1da00b
21:24:16,169 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1d1da00b
21:24:16,170 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@73158d35
21:24:16,170 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@73158d35
21:24:16,171 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1259b2a5
21:24:16,172 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1259b2a5
21:24:16,172 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@68303aad
21:24:16,173 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2f3565c0
21:24:16,173 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2f3565c0
21:24:16,174 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2f3565c0
21:24:16,174 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29811d4d
21:24:16,175 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29811d4d
21:24:16,175 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29811d4d
21:24:16,176 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@3abb6aa
21:24:16,176 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1500edf3
21:24:16,177 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1500edf3
21:24:16,177 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1500edf3
21:24:16,178 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a61f634
21:24:16,179 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a61f634
21:24:16,179 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a61f634
21:24:16,180 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3533d790
21:24:16,181 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1de398c3
21:24:16,187 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@7e484bd
21:24:16,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e484bd
21:24:16,188 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@341141ab
21:24:16,192 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@7bc3c59f
21:24:16,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7bc3c59f
21:24:16,197 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@3c39c739
21:24:16,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3c39c739
21:24:16,198 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a3f3bc4
21:24:16,199 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@419ece7a
21:24:16,200 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@1dfd6023
21:24:16,205 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@604e8a6
21:24:16,205 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@604e8a6
21:24:16,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1516f497
21:24:16,206 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@34766f4b
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d204b30
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6600d07d
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44103266
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@439b0198
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@c2dab10
21:24:16,207 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6c4e11d0
21:24:16,786  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
21:24:16,829  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
21:24:18,711  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:24:14 PDT 2015]; root of context hierarchy
21:24:18,790  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:24:14 PDT 2015]; root of context hierarchy
21:24:19,076  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@73e0c775, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@213d5189, org.springframework.security.web.header.HeaderWriterFilter@70eced1f, org.springframework.security.web.csrf.CsrfFilter@39068df9, org.courseregistration.auth.CustomRestSecurityFilter@4ca83ec3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d29fc6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10c11e36, org.springframework.security.web.access.ExceptionTranslationFilter@1da53092, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@10f64bc3]
21:24:19,157  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:24:14 PDT 2015]; root of context hierarchy
21:24:19,256  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4456 ms
21:24:28,320 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6905f12b
21:24:28,322  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
21:24:28,362 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
21:24:28,373 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

21:24:28,374 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:24:28,400 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
21:24:28,424 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
21:24:28,425 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:24:28,428 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:24:28,432 ERROR UserDAO:27 - Error occurred finding an entity of type:User
java.lang.IllegalArgumentException: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User [select u from org.courseregistration.model.User as u where u.collegeId=:collegeId]
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1679)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:344)
	at com.sun.proxy.$Proxy116.createQuery(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy48.createQuery(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:23)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$14e0874b.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User [select u from org.courseregistration.model.User as u where u.collegeId=:collegeId]
	at org.hibernate.QueryException.generateQueryException(QueryException.java:120)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:218)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:305)
	... 60 more
Caused by: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User
	at org.hibernate.persister.entity.AbstractPropertyMapping.propertyException(AbstractPropertyMapping.java:62)
	at org.hibernate.persister.entity.AbstractPropertyMapping.toType(AbstractPropertyMapping.java:56)
	at org.hibernate.persister.entity.AbstractEntityPersister.toType(AbstractEntityPersister.java:1691)
	at org.hibernate.hql.internal.ast.tree.FromElementType.getPropertyType(FromElementType.java:350)
	at org.hibernate.hql.internal.ast.tree.FromElement.getPropertyType(FromElement.java:488)
	at org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:653)
	at org.hibernate.hql.internal.ast.tree.DotNode.prepareLhs(DotNode.java:257)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:201)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:942)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1267)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4686)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4156)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2104)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:796)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:249)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	... 68 more
21:24:40,236 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.collegeId=:collegeId
21:24:40,240 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'collegeId'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'collegeId'

21:24:40,241 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:24:40,247 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
21:24:40,251 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
21:24:40,252 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:24:40,254 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:24:40,255 ERROR UserDAO:27 - Error occurred finding an entity of type:User
java.lang.IllegalArgumentException: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User [select u from org.courseregistration.model.User as u where u.collegeId=:collegeId]
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1679)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1602)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1608)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:344)
	at com.sun.proxy.$Proxy116.createQuery(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:293)
	at com.sun.proxy.$Proxy48.createQuery(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:23)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$14e0874b.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User [select u from org.courseregistration.model.User as u where u.collegeId=:collegeId]
	at org.hibernate.QueryException.generateQueryException(QueryException.java:120)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:218)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:142)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:115)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:76)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:150)
	at org.hibernate.internal.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:298)
	at org.hibernate.internal.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:236)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:1825)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:305)
	... 60 more
Caused by: org.hibernate.QueryException: could not resolve property: collegeId of: org.courseregistration.model.User
	at org.hibernate.persister.entity.AbstractPropertyMapping.propertyException(AbstractPropertyMapping.java:62)
	at org.hibernate.persister.entity.AbstractPropertyMapping.toType(AbstractPropertyMapping.java:56)
	at org.hibernate.persister.entity.AbstractEntityPersister.toType(AbstractEntityPersister.java:1691)
	at org.hibernate.hql.internal.ast.tree.FromElementType.getPropertyType(FromElementType.java:350)
	at org.hibernate.hql.internal.ast.tree.FromElement.getPropertyType(FromElement.java:488)
	at org.hibernate.hql.internal.ast.tree.DotNode.getDataType(DotNode.java:653)
	at org.hibernate.hql.internal.ast.tree.DotNode.prepareLhs(DotNode.java:257)
	at org.hibernate.hql.internal.ast.tree.DotNode.resolve(DotNode.java:201)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:109)
	at org.hibernate.hql.internal.ast.tree.FromReferenceNode.resolve(FromReferenceNode.java:104)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.resolve(HqlSqlWalker.java:942)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.expr(HqlSqlBaseWalker.java:1267)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4686)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4156)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2104)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:796)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:249)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:262)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:190)
	... 68 more
21:27:07,482  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
21:27:07,573  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 21:27:07 PDT 2015]; root of context hierarchy
21:27:07,613  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
21:27:08,031  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
21:27:08,035  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
21:27:08,076  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
21:27:08,092  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
21:27:08,247  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
21:27:08,248  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
21:27:08,372  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
21:27:08,465  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
21:27:08,504  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
21:27:08,534  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
21:27:08,621  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
21:27:08,625  INFO Environment:213 - HHH000206: hibernate.properties not found
21:27:08,627  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
21:27:08,694  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
21:27:08,781 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32182bf8
21:27:08,781 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@32182bf8
21:27:08,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@32182bf8
21:27:08,783 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@81a56b2
21:27:08,784 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6d6ddeb5
21:27:08,785 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@218fc40d
21:27:08,787 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4c31b6c2
21:27:08,787 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@4c31b6c2
21:27:08,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c31b6c2
21:27:08,788 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@37823482
21:27:08,788 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@37823482
21:27:08,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@37823482
21:27:08,790 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4769e70c
21:27:08,791 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4769e70c
21:27:08,791 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4769e70c
21:27:08,792 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2786b644
21:27:08,792 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2786b644
21:27:08,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2786b644
21:27:08,794 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e60c466
21:27:08,794 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@e60c466
21:27:08,794 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@e60c466
21:27:08,796 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@499445d2
21:27:08,797 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@499445d2
21:27:08,797 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@499445d2
21:27:08,798 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@e356940
21:27:08,799 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@e356940
21:27:08,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@e356940
21:27:08,802 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2821da0a
21:27:08,803 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2821da0a
21:27:08,804 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bed434d
21:27:08,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bed434d
21:27:08,806 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@46c61d1
21:27:08,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@46c61d1
21:27:08,807 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a1dd8eb
21:27:08,808 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@433362e0
21:27:08,809 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@cf0bc92
21:27:08,809 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@cf0bc92
21:27:08,811 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@372e972d
21:27:08,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@372e972d
21:27:08,814 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@7137cd14
21:27:08,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7137cd14
21:27:08,816 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@192b76a4
21:27:08,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@192b76a4
21:27:08,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@192b76a4
21:27:08,819 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70c99e13
21:27:08,821 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@222dc36c
21:27:08,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@222dc36c
21:27:08,821 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@222dc36c
21:27:08,823 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21abd3a3
21:27:08,825 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@ab5dde4
21:27:08,825 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@ab5dde4
21:27:08,826 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@75d61b62
21:27:08,827 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@75d61b62
21:27:08,828 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3829306d
21:27:08,828 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3829306d
21:27:08,829 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@b867869
21:27:08,830 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b867869
21:27:08,831 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2d26c6a2
21:27:08,831 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2d26c6a2
21:27:08,832 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6779af40
21:27:08,833 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6abaa14b
21:27:08,833 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6abaa14b
21:27:08,834 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6abaa14b
21:27:08,835 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6ce24203
21:27:08,835 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6ce24203
21:27:08,836 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6ce24203
21:27:08,836 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@e30a8ef
21:27:08,838 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@45430a27
21:27:08,838 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@45430a27
21:27:08,838 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@45430a27
21:27:08,840 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e7fc07e
21:27:08,840 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e7fc07e
21:27:08,840 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e7fc07e
21:27:08,841 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@147892be
21:27:08,842 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1a3a6216
21:27:08,846 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@75b6bd41
21:27:08,847 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@75b6bd41
21:27:08,847 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e1ae693
21:27:08,851 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@738153d8
21:27:08,851 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@738153d8
21:27:08,854 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@56b66cc6
21:27:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@56b66cc6
21:27:08,855 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4b3b2a4f
21:27:08,856 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@8cd2bb5
21:27:08,858 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@91c11b6
21:27:08,862 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2ced7cf
21:27:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2ced7cf
21:27:08,863 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5bc44d78
21:27:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f408960
21:27:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1516f497
21:27:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34766f4b
21:27:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4d204b30
21:27:08,864 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6600d07d
21:27:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@44103266
21:27:08,865 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@439b0198
21:27:09,200  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
21:27:09,234  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
21:27:11,069  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:27:07 PDT 2015]; root of context hierarchy
21:27:11,110  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:27:07 PDT 2015]; root of context hierarchy
21:27:11,380  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@5680f009, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a4e6da6, org.springframework.security.web.header.HeaderWriterFilter@73e0c775, org.springframework.security.web.csrf.CsrfFilter@213d5189, org.courseregistration.auth.CustomRestSecurityFilter@70eced1f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39068df9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4ca83ec3, org.springframework.security.web.access.ExceptionTranslationFilter@7d29fc6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@10c11e36]
21:27:11,460  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 21:27:07 PDT 2015]; root of context hierarchy
21:27:11,556  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4071 ms
21:37:04,613 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@63d8f498
21:37:04,615  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
21:37:04,652 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
21:37:04,663 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

21:37:04,664 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:37:04,691 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
21:37:04,715 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
21:37:04,717 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:37:04,719 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
21:37:04,721 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@46c61d1
21:37:04,723 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
21:37:04,731 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
21:37:04,740 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
21:37:04,751 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
21:37:04,752 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
21:37:04,753 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@46c61d1}

21:37:04,753 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:37:04,764 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
21:37:04,764 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
21:37:04,765 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:37:04,808 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
21:37:04,853 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy117.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$145cb504.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
21:46:18,020 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
21:46:18,151 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,172 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,259 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
21:46:18,263 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

21:46:18,264 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:46:18,265 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
21:46:18,267 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
21:46:18,272 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
21:46:18,274 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@46c61d1
21:46:18,276 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
21:46:18,276 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
21:46:18,277 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
21:46:18,282 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
21:46:18,283 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
21:46:18,284 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
21:46:18,285 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.date_of_birth as date_of_2_8_, professor0_1_.email_id as email_id3_8_, professor0_1_.first_name as first_na4_8_, professor0_1_.password as password5_8_, professor0_1_.last_name as last_nam6_8_, professor0_1_.middle_name as middle_n7_8_, professor0_1_.phone_number as phone_nu8_8_, professor0_1_.username as username9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

21:46:18,285 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:46:18,286 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
21:46:18,287 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.date_of_birth as date_of_2_8_, professor0_1_.email_id as email_id3_8_, professor0_1_.first_name as first_na4_8_, professor0_1_.password as password5_8_, professor0_1_.last_name as last_nam6_8_, professor0_1_.middle_name as middle_n7_8_, professor0_1_.phone_number as phone_nu8_8_, professor0_1_.username as username9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
21:46:18,287 DEBUG ErrorCounter:95 - throwQueryException() : no errors
21:46:18,288 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.date_of_birth as date_of_2_8_, professor0_1_.email_id as email_id3_8_, professor0_1_.first_name as first_na4_8_, professor0_1_.password as password5_8_, professor0_1_.last_name as last_nam6_8_, professor0_1_.middle_name as middle_n7_8_, professor0_1_.phone_number as phone_nu8_8_, professor0_1_.username as username9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
21:46:18,295 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,296 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,298 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,300 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,302 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,303 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
21:46:18,304 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,306 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,307 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,308 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,309 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
21:46:18,311 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
23:01:51,319  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
23:01:51,411  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 23:01:51 PDT 2015]; root of context hierarchy
23:01:51,446  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
23:01:51,790  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
23:01:51,793  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
23:01:51,823  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
23:01:51,842  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
23:01:52,012  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
23:01:52,014  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
23:01:52,135  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
23:01:52,227  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
23:01:52,273  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
23:01:52,307  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
23:01:52,399  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
23:01:52,404  INFO Environment:213 - HHH000206: hibernate.properties not found
23:01:52,406  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
23:01:52,461  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
23:01:52,535 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@65293ca5
23:01:52,536 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@65293ca5
23:01:52,536 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65293ca5
23:01:52,537 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d76d72a
23:01:52,539 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3df4cd96
23:01:52,540 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ebf9c2d
23:01:52,541 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1db565f2
23:01:52,542 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1db565f2
23:01:52,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1db565f2
23:01:52,544 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3c577368
23:01:52,544 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3c577368
23:01:52,544 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c577368
23:01:52,545 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34e7cde3
23:01:52,546 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34e7cde3
23:01:52,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34e7cde3
23:01:52,548 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@22a8e87b
23:01:52,548 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@22a8e87b
23:01:52,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22a8e87b
23:01:52,550 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c61d1
23:01:52,550 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c61d1
23:01:52,551 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46c61d1
23:01:52,552 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@726dd367
23:01:52,553 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@726dd367
23:01:52,553 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@726dd367
23:01:52,554 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f8a44a4
23:01:52,555 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f8a44a4
23:01:52,555 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f8a44a4
23:01:52,557 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@463746eb
23:01:52,558 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@463746eb
23:01:52,559 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7137cd14
23:01:52,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7137cd14
23:01:52,561 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5fb05c07
23:01:52,561 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5fb05c07
23:01:52,562 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70c99e13
23:01:52,563 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@222dc36c
23:01:52,565 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@77e1b84c
23:01:52,565 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77e1b84c
23:01:52,568 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@53086bdc
23:01:52,568 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53086bdc
23:01:52,570 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5cef5fc9
23:01:52,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cef5fc9
23:01:52,572 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@155767a7
23:01:52,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@155767a7
23:01:52,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@155767a7
23:01:52,574 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d26c6a2
23:01:52,576 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@68303aad
23:01:52,577 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@68303aad
23:01:52,578 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@68303aad
23:01:52,579 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6abaa14b
23:01:52,580 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@687d31a9
23:01:52,581 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@687d31a9
23:01:52,582 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@56fc2cea
23:01:52,582 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56fc2cea
23:01:52,588 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f7bf0f6
23:01:52,588 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f7bf0f6
23:01:52,591 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@28d37d43
23:01:52,591 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28d37d43
23:01:52,593 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3533d790
23:01:52,593 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3533d790
23:01:52,595 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a3a6216
23:01:52,602 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@377d55
23:01:52,602 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@377d55
23:01:52,602 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@377d55
23:01:52,604 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:01:52,604 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:01:52,605 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:01:52,608 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25093079
23:01:52,609 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@402fdef1
23:01:52,610 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@402fdef1
23:01:52,610 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@402fdef1
23:01:52,618 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:01:52,619 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:01:52,619 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:01:52,620 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3e0600a4
23:01:52,622 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@edb8f0c
23:01:52,629 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@35d62807
23:01:52,630 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35d62807
23:01:52,631 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fcff272
23:01:52,635 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3e7da4cb
23:01:52,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e7da4cb
23:01:52,644 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@c2dab10
23:01:52,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c2dab10
23:01:52,645 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3284de45
23:01:52,646 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@22c0c0bc
23:01:52,648 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@489c15e2
23:01:52,652 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@62f3ad90
23:01:52,653 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62f3ad90
23:01:52,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a532271
23:01:52,657 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@35b38986
23:01:52,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c000c2f
23:01:52,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c7ac998
23:01:52,658 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f6936cc
23:01:52,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56bf6f1e
23:01:52,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ac26092
23:01:52,659 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@308e465b
23:01:53,125  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
23:01:53,158  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
23:01:54,921  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:01:51 PDT 2015]; root of context hierarchy
23:01:54,968  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:01:51 PDT 2015]; root of context hierarchy
23:01:55,222  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@13515709, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b3a1e42, org.springframework.security.web.header.HeaderWriterFilter@41030c21, org.springframework.security.web.csrf.CsrfFilter@3c5797c6, org.courseregistration.auth.CustomRestSecurityFilter@2527765a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ea4b4b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@371fdf43, org.springframework.security.web.access.ExceptionTranslationFilter@37f687c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@297da2c3]
23:01:55,303  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:01:51 PDT 2015]; root of context hierarchy
23:01:55,395  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4073 ms
23:04:52,806  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
23:04:52,903  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 23:04:52 PDT 2015]; root of context hierarchy
23:04:52,947  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
23:04:53,271  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
23:04:53,274  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
23:04:53,309  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
23:04:53,328  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
23:04:53,538  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
23:04:53,540  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
23:04:53,663  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
23:04:53,754  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
23:04:53,798  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
23:04:53,826  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
23:04:53,919  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
23:04:53,922  INFO Environment:213 - HHH000206: hibernate.properties not found
23:04:53,924  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
23:04:53,990  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
23:04:54,109 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@65293ca5
23:04:54,109 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@65293ca5
23:04:54,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65293ca5
23:04:54,111 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d76d72a
23:04:54,113 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3df4cd96
23:04:54,114 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6ebf9c2d
23:04:54,116 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1db565f2
23:04:54,117 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1db565f2
23:04:54,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1db565f2
23:04:54,118 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@3c577368
23:04:54,118 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@3c577368
23:04:54,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3c577368
23:04:54,120 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34e7cde3
23:04:54,121 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@34e7cde3
23:04:54,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@34e7cde3
23:04:54,123 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@22a8e87b
23:04:54,123 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@22a8e87b
23:04:54,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@22a8e87b
23:04:54,125 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c61d1
23:04:54,126 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@46c61d1
23:04:54,126 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46c61d1
23:04:54,128 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@726dd367
23:04:54,129 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@726dd367
23:04:54,129 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@726dd367
23:04:54,132 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f8a44a4
23:04:54,133 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3f8a44a4
23:04:54,133 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3f8a44a4
23:04:54,135 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@463746eb
23:04:54,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@463746eb
23:04:54,137 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7137cd14
23:04:54,137 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7137cd14
23:04:54,138 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@5fb05c07
23:04:54,138 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5fb05c07
23:04:54,139 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70c99e13
23:04:54,140 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@222dc36c
23:04:54,142 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@77e1b84c
23:04:54,142 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@77e1b84c
23:04:54,145 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@53086bdc
23:04:54,145 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@53086bdc
23:04:54,148 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@5cef5fc9
23:04:54,148 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5cef5fc9
23:04:54,151 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@155767a7
23:04:54,151 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@155767a7
23:04:54,151 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@155767a7
23:04:54,153 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d26c6a2
23:04:54,154 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@68303aad
23:04:54,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@68303aad
23:04:54,155 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@68303aad
23:04:54,156 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6abaa14b
23:04:54,157 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@687d31a9
23:04:54,157 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@687d31a9
23:04:54,158 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@56fc2cea
23:04:54,159 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56fc2cea
23:04:54,160 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3f7bf0f6
23:04:54,161 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3f7bf0f6
23:04:54,162 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@28d37d43
23:04:54,162 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28d37d43
23:04:54,164 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3533d790
23:04:54,165 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3533d790
23:04:54,165 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1a3a6216
23:04:54,167 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@377d55
23:04:54,168 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@377d55
23:04:54,168 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@377d55
23:04:54,169 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:04:54,170 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:04:54,170 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@52b77d5e
23:04:54,171 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@25093079
23:04:54,173 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@402fdef1
23:04:54,173 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@402fdef1
23:04:54,173 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@402fdef1
23:04:54,175 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:04:54,175 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:04:54,175 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b6a4da7
23:04:54,176 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@3e0600a4
23:04:54,177 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@edb8f0c
23:04:54,181 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@35d62807
23:04:54,182 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35d62807
23:04:54,182 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fcff272
23:04:54,187 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@3e7da4cb
23:04:54,188 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e7da4cb
23:04:54,191 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@c2dab10
23:04:54,192 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c2dab10
23:04:54,193 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3284de45
23:04:54,193 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@22c0c0bc
23:04:54,196 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@489c15e2
23:04:54,199 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@62f3ad90
23:04:54,200 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62f3ad90
23:04:54,201 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a532271
23:04:54,202 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@35b38986
23:04:54,202 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1c000c2f
23:04:54,202 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c7ac998
23:04:54,202 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f6936cc
23:04:54,203 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@56bf6f1e
23:04:54,203 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ac26092
23:04:54,203 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@308e465b
23:04:54,640  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
23:04:54,693  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
23:04:57,277  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:04:52 PDT 2015]; root of context hierarchy
23:04:57,343  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:04:52 PDT 2015]; root of context hierarchy
23:04:57,625  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@13515709, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1b3a1e42, org.springframework.security.web.header.HeaderWriterFilter@41030c21, org.springframework.security.web.csrf.CsrfFilter@3c5797c6, org.courseregistration.auth.CustomRestSecurityFilter@2527765a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ea4b4b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@371fdf43, org.springframework.security.web.access.ExceptionTranslationFilter@37f687c1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@297da2c3]
23:04:57,708  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:04:52 PDT 2015]; root of context hierarchy
23:04:57,824  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5013 ms
23:14:32,773  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
23:14:32,874  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 23:14:32 PDT 2015]; root of context hierarchy
23:14:32,918  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
23:14:33,283  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
23:14:33,285  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
23:14:33,318  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
23:14:33,332  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
23:14:33,467  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
23:14:33,468  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
23:14:33,563  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
23:14:33,656  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
23:14:33,705  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
23:14:33,741  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
23:14:33,836  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
23:14:33,840  INFO Environment:213 - HHH000206: hibernate.properties not found
23:14:33,842  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
23:14:33,904  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
23:14:33,978 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@adcfad9
23:14:33,978 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@adcfad9
23:14:33,979 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@adcfad9
23:14:33,980 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2553d9
23:14:33,982 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c9a6717
23:14:33,983 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@7c663eaf
23:14:33,985 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46039a21
23:14:33,985 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46039a21
23:14:33,985 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46039a21
23:14:33,987 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@5f36c8e3
23:14:33,987 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@5f36c8e3
23:14:33,988 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5f36c8e3
23:14:33,989 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6ef60295
23:14:33,990 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@6ef60295
23:14:33,990 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6ef60295
23:14:33,991 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3252747e
23:14:33,992 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3252747e
23:14:33,993 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3252747e
23:14:33,995 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@71adfedd
23:14:33,995 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@71adfedd
23:14:33,995 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@71adfedd
23:14:33,997 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a6045c6
23:14:33,998 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3a6045c6
23:14:33,999 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3a6045c6
23:14:34,000 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d97e06c
23:14:34,000 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@7d97e06c
23:14:34,001 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d97e06c
23:14:34,003 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5e99b9c
23:14:34,003 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5e99b9c
23:14:34,005 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@73aeef7d
23:14:34,005 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@73aeef7d
23:14:34,006 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@7a3b7122
23:14:34,006 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7a3b7122
23:14:34,008 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@67022ea
23:14:34,011 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1fbf088b
23:14:34,013 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7ec95456
23:14:34,013 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7ec95456
23:14:34,016 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@1835dc92
23:14:34,016 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1835dc92
23:14:34,018 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@43c57161
23:14:34,019 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@43c57161
23:14:34,021 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4d84049a
23:14:34,021 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4d84049a
23:14:34,021 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4d84049a
23:14:34,024 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c6b4ed7
23:14:34,025 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@4cb702ce
23:14:34,025 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4cb702ce
23:14:34,026 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4cb702ce
23:14:34,027 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71ed560f
23:14:34,028 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@5a545b0f
23:14:34,028 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5a545b0f
23:14:34,030 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@40247d48
23:14:34,030 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40247d48
23:14:34,031 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14924f41
23:14:34,031 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14924f41
23:14:34,032 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@67536ae0
23:14:34,033 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@67536ae0
23:14:34,035 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6d67f5eb
23:14:34,036 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6d67f5eb
23:14:34,037 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7112ce6
23:14:34,039 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@7134b8a7
23:14:34,039 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7134b8a7
23:14:34,040 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@7134b8a7
23:14:34,042 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
23:14:34,042 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
23:14:34,042 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ba3d4b6
23:14:34,044 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2f10f633
23:14:34,045 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1163a27
23:14:34,045 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1163a27
23:14:34,046 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1163a27
23:14:34,047 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@92d1782
23:14:34,047 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@92d1782
23:14:34,047 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@92d1782
23:14:34,048 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@e280403
23:14:34,049 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@6968c1d6
23:14:34,054 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3472947a
23:14:34,054 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3472947a
23:14:34,055 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1984212d
23:14:34,059 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@f9cab00
23:14:34,060 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@f9cab00
23:14:34,062 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@771a7d53
23:14:34,063 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@771a7d53
23:14:34,063 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5a917723
23:14:34,064 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d94a2dc
23:14:34,065 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@40c2ce52
23:14:34,071 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1860f3be
23:14:34,071 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1860f3be
23:14:34,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3408f695
23:14:34,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2b6a0ea9
23:14:34,072 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4dde8976
23:14:34,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4887de2b
23:14:34,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3b4825f0
23:14:34,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40ac6b76
23:14:34,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7980cf2c
23:14:34,073 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f0020b1
23:14:34,563  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
23:14:34,615  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
23:14:36,340  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:14:32 PDT 2015]; root of context hierarchy
23:14:36,385  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:14:32 PDT 2015]; root of context hierarchy
23:14:36,657  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4243341e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d1c5cf2, org.springframework.security.web.header.HeaderWriterFilter@7e0986c9, org.springframework.security.web.csrf.CsrfFilter@1377b1a0, org.courseregistration.auth.CustomRestSecurityFilter@48cf8414, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27dbaa33, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15d65fcf, org.springframework.security.web.access.ExceptionTranslationFilter@3b021664, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f59da34]
23:14:36,741  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:14:32 PDT 2015]; root of context hierarchy
23:14:36,858  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4082 ms
23:14:50,892 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@13a8162f
23:14:50,894  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
23:14:50,934 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:14:50,946 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

23:14:50,947 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:50,997 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
23:14:51,042 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
23:14:51,045 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:14:51,049 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:14:51,052 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@7a3b7122
23:14:51,053 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
23:14:51,057 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
23:14:51,058 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
23:14:51,070 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
23:14:51,071 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
23:14:51,073 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@7a3b7122}

23:14:51,074 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:51,083 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:14:51,083 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:14:51,084 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:51,124 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:14:51,199 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
23:14:51,223 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
23:14:51,312 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
23:14:51,315 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

23:14:51,315 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:51,316 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
23:14:51,317 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
23:14:51,318 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
23:14:51,319 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@7a3b7122
23:14:51,319 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
23:14:51,320 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
23:14:51,320 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
23:14:51,322 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
23:14:51,323 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
23:14:51,324 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
23:14:51,325 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

23:14:51,326 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:51,326 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
23:14:51,327 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
23:14:51,327 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:14:51,328 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
23:15:06,401 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:15:06,420 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
23:15:06,423 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
23:15:06,433 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
23:41:54,074  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
23:41:54,164  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 23:41:54 PDT 2015]; root of context hierarchy
23:41:54,205  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
23:41:54,558  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
23:41:54,561  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
23:41:54,600  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
23:41:54,618  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
23:41:54,850  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
23:41:54,852  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
23:41:55,002  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
23:41:55,094  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
23:41:55,135  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
23:41:55,165  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
23:41:55,250  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
23:41:55,253  INFO Environment:213 - HHH000206: hibernate.properties not found
23:41:55,255  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
23:41:55,307  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
23:41:55,379 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ebf9c2d
23:41:55,380 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@6ebf9c2d
23:41:55,380 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6ebf9c2d
23:41:55,382 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d529dbf
23:41:55,383 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3c577368
23:41:55,384 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2c8c42c
23:41:55,386 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@e7ddf8d
23:41:55,386 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@e7ddf8d
23:41:55,386 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e7ddf8d
23:41:55,388 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@13f10967
23:41:55,388 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@13f10967
23:41:55,388 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@13f10967
23:41:55,389 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ba50851
23:41:55,390 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@3ba50851
23:41:55,390 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ba50851
23:41:55,391 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6c399d4
23:41:55,392 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6c399d4
23:41:55,392 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6c399d4
23:41:55,393 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@cf0bc92
23:41:55,394 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@cf0bc92
23:41:55,394 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@cf0bc92
23:41:55,396 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28ffa527
23:41:55,397 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@28ffa527
23:41:55,397 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@28ffa527
23:41:55,399 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2723b0d0
23:41:55,399 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2723b0d0
23:41:55,399 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2723b0d0
23:41:55,401 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@309b8144
23:41:55,401 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@309b8144
23:41:55,402 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@222dc36c
23:41:55,403 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@222dc36c
23:41:55,404 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@77e1b84c
23:41:55,404 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@77e1b84c
23:41:55,405 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@255482cb
23:41:55,406 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@53086bdc
23:41:55,408 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@1d1da00b
23:41:55,409 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1d1da00b
23:41:55,411 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@5418a659
23:41:55,411 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5418a659
23:41:55,413 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@68303aad
23:41:55,413 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68303aad
23:41:55,415 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@5b27d03d
23:41:55,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5b27d03d
23:41:55,415 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5b27d03d
23:41:55,418 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4cc28ad0
23:41:55,420 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@2ffaa711
23:41:55,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2ffaa711
23:41:55,420 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2ffaa711
23:41:55,422 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f7bf0f6
23:41:55,424 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@28d37d43
23:41:55,425 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@28d37d43
23:41:55,427 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@20a2930f
23:41:55,428 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20a2930f
23:41:55,429 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@23e1f610
23:41:55,429 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@23e1f610
23:41:55,431 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@dc24732
23:41:55,431 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@dc24732
23:41:55,433 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ab6ec33
23:41:55,434 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ab6ec33
23:41:55,435 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78839c2e
23:41:55,437 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@14764fdd
23:41:55,438 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@14764fdd
23:41:55,438 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@14764fdd
23:41:55,440 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@26a004ed
23:41:55,440 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@26a004ed
23:41:55,440 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@26a004ed
23:41:55,441 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7e1ae693
23:41:55,443 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@30f99ca1
23:41:55,444 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@30f99ca1
23:41:55,444 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@30f99ca1
23:41:55,446 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@d8751de
23:41:55,446 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@d8751de
23:41:55,447 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@d8751de
23:41:55,448 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@61c644fe
23:41:55,449 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@44bd7f24
23:41:55,453 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@6f076c53
23:41:55,454 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f076c53
23:41:55,454 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2e8eafb2
23:41:55,459 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@2f408960
23:41:55,459 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2f408960
23:41:55,462 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@a165c11
23:41:55,462 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a165c11
23:41:55,462 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@193792e6
23:41:55,463 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@aaf4375
23:41:55,464 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@62f3ad90
23:41:55,468 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@87df88d
23:41:55,469 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@87df88d
23:41:55,469 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7c928399
23:41:55,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bcca516
23:41:55,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@cef23a8
23:41:55,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@762d2e4c
23:41:55,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1e4bf55b
23:41:55,470 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@60510791
23:41:55,471 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@15d68a50
23:41:55,471 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a1689e8
23:41:55,920  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
23:41:55,958  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
23:41:57,887  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:41:54 PDT 2015]; root of context hierarchy
23:41:57,933  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:41:54 PDT 2015]; root of context hierarchy
23:41:58,195  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@6b862f17, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7e3b101b, org.springframework.security.web.header.HeaderWriterFilter@62284954, org.springframework.security.web.csrf.CsrfFilter@4ca50bb9, org.courseregistration.auth.CustomRestSecurityFilter@16817bad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@301c0aae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@105e8710, org.springframework.security.web.access.ExceptionTranslationFilter@7442be61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6903ef57]
23:41:58,273  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:41:54 PDT 2015]; root of context hierarchy
23:41:58,387  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4310 ms
23:42:23,281 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@603c002d
23:42:23,283  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
23:42:23,312 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:42:23,323 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

23:42:23,323 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:23,348 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
23:42:23,381 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
23:42:23,382 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:42:23,386 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:42:23,388 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@77e1b84c
23:42:23,389 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
23:42:23,391 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
23:42:23,392 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
23:42:23,400 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
23:42:23,401 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
23:42:23,402 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@77e1b84c}

23:42:23,403 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:23,411 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:42:23,412 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:42:23,412 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:23,496 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:42:23,544 ERROR UserDAO:27 - Error occurred finding an entity of type:User
javax.persistence.NoResultException: No entity found for query
	at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:485)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:364)
	at com.sun.proxy.$Proxy117.getSingleResult(Unknown Source)
	at org.courseregistration.dao.UserDAO.findByCollegeId(UserDAO.java:25)
	at org.courseregistration.dao.UserDAO$$FastClassBySpringCGLIB$$dd12befb.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)
	at org.courseregistration.dao.UserDAO$$EnhancerBySpringCGLIB$$6377e61.findByCollegeId(<generated>)
	at org.courseregistration.auth.RestAuthenticationProvider.authenticate(RestAuthenticationProvider.java:30)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:167)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:59)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
23:42:57,140 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:42:57,244 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
23:42:57,277 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
23:42:57,355 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
23:42:57,357 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

23:42:57,357 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:57,357 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
23:42:57,358 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
23:42:57,359 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
23:42:57,359 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@77e1b84c
23:42:57,360 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
23:42:57,360 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
23:42:57,360 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
23:42:57,361 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
23:42:57,362 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
23:42:57,362 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
23:42:57,363 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

23:42:57,363 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:57,363 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
23:42:57,364 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
23:42:57,364 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:42:57,364 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
23:53:06,673  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
23:53:06,765  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Tue Oct 27 23:53:06 PDT 2015]; root of context hierarchy
23:53:06,809  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
23:53:07,156  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
23:53:07,158  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
23:53:07,187  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
23:53:07,206  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
23:53:07,364  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
23:53:07,366  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
23:53:07,493  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
23:53:07,587  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
23:53:07,636  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
23:53:07,669  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
23:53:07,754  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
23:53:07,757  INFO Environment:213 - HHH000206: hibernate.properties not found
23:53:07,759  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
23:53:07,813  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
23:53:07,888 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@76641439
23:53:07,889 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@76641439
23:53:07,889 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@76641439
23:53:07,891 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38991781
23:53:07,892 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@70ca8e72
23:53:07,892 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2ae07dbd
23:53:07,893 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@76ffd052
23:53:07,893 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@76ffd052
23:53:07,894 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@76ffd052
23:53:07,894 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4bd39edc
23:53:07,895 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4bd39edc
23:53:07,895 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bd39edc
23:53:07,896 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@726dd367
23:53:07,897 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@726dd367
23:53:07,897 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@726dd367
23:53:07,899 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@1cdb280b
23:53:07,900 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@1cdb280b
23:53:07,900 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1cdb280b
23:53:07,903 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3305897c
23:53:07,904 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3305897c
23:53:07,904 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3305897c
23:53:07,908 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e729d46
23:53:07,909 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3e729d46
23:53:07,909 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3e729d46
23:53:07,912 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fb05c07
23:53:07,913 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5fb05c07
23:53:07,913 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5fb05c07
23:53:07,916 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@222dc36c
23:53:07,917 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@222dc36c
23:53:07,919 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12d8e6b6
23:53:07,920 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12d8e6b6
23:53:07,922 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@40ecead5
23:53:07,922 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40ecead5
23:53:07,923 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@254210b1
23:53:07,924 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2db4a84a
23:53:07,927 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@55a29589
23:53:07,927 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55a29589
23:53:07,930 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@7cf166db
23:53:07,930 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7cf166db
23:53:07,932 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@64a8851a
23:53:07,932 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@64a8851a
23:53:07,933 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@56fc2cea
23:53:07,933 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56fc2cea
23:53:07,934 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56fc2cea
23:53:07,935 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3abb6aa
23:53:07,937 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@1500edf3
23:53:07,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1500edf3
23:53:07,937 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1500edf3
23:53:07,938 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2c02cf78
23:53:07,940 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@609edb55
23:53:07,940 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@609edb55
23:53:07,942 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@73dc7db0
23:53:07,942 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@73dc7db0
23:53:07,943 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44a1ae4e
23:53:07,943 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44a1ae4e
23:53:07,944 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@6c0bf8f4
23:53:07,945 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6c0bf8f4
23:53:07,946 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1c96bf1e
23:53:07,946 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1c96bf1e
23:53:07,946 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@402fdef1
23:53:07,947 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@26a004ed
23:53:07,948 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@26a004ed
23:53:07,948 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@26a004ed
23:53:07,949 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e0600a4
23:53:07,949 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e0600a4
23:53:07,950 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e0600a4
23:53:07,951 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@edb8f0c
23:53:07,952 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@d8751de
23:53:07,953 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@d8751de
23:53:07,953 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@d8751de
23:53:07,955 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@cbaabfb
23:53:07,955 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@cbaabfb
23:53:07,956 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@cbaabfb
23:53:07,956 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@6e3acd7
23:53:07,957 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1a3272e0
23:53:07,962 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@1a3611b1
23:53:07,962 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1a3611b1
23:53:07,963 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@238d27ef
23:53:07,967 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@439b0198
23:53:07,968 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@439b0198
23:53:07,971 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@aaf4375
23:53:07,971 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@aaf4375
23:53:07,972 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6fe33512
23:53:07,972 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@18d63996
23:53:07,973 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@2c7ac998
23:53:07,977 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@762d2e4c
23:53:07,977 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@762d2e4c
23:53:07,978 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15d68a50
23:53:07,978 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a1689e8
23:53:07,978 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4bb644dc
23:53:07,979 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23b3afb4
23:53:07,979 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2162598
23:53:07,979 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cf1b5fb
23:53:07,979 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4598961d
23:53:07,979 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7be85f15
23:53:08,366  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
23:53:08,399  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
23:53:10,274  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:53:06 PDT 2015]; root of context hierarchy
23:53:10,319  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:53:06 PDT 2015]; root of context hierarchy
23:53:10,580  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@25bfc558, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d837af7, org.springframework.security.web.header.HeaderWriterFilter@446dc997, org.springframework.security.web.csrf.CsrfFilter@32cfd722, org.courseregistration.auth.CustomRestSecurityFilter@69815126, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ff3ca23, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65f8933b, org.springframework.security.web.access.ExceptionTranslationFilter@29422e61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4a29520e]
23:53:10,662  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Tue Oct 27 23:53:06 PDT 2015]; root of context hierarchy
23:53:10,746  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4070 ms
23:54:07,866 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3a7ac9cb
23:54:07,868  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
23:54:07,899 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:54:07,913 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

23:54:07,913 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:54:07,941 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
23:54:07,961 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
23:54:07,963 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:54:07,967 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
23:54:07,970 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@40ecead5
23:54:07,971 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
23:54:07,973 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
23:54:07,973 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
23:54:07,988 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
23:54:07,989 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
23:54:07,990 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@40ecead5}

23:54:07,991 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:54:07,999 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
23:54:07,999 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:54:08,000 DEBUG ErrorCounter:95 - throwQueryException() : no errors
23:54:08,029 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
23:54:08,095 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
23:54:08,113 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
23:54:08,184 DEBUG SQL:92 - select course0_.course_id as course_i1_1_0_, course0_.code as code2_1_0_, course0_.department as departme3_1_0_, course0_.description as descript4_1_0_, course0_.name as name5_1_0_, course0_.no_of_credits as no_of_cr6_1_0_, course0_.pre_requisite_course as pre_requ7_1_0_, course0_.program as program8_1_0_ from course_details course0_ where course0_.course_id=?
07:22:41,417  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:22:41,520  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:22:41 PDT 2015]; root of context hierarchy
07:22:41,555  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:22:41,718 ERROR ContextLoader:353 - Context initialization failed
org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 49 in XML document from ServletContext resource [/WEB-INF/applicationContext.xml] is invalid; nested exception is org.xml.sax.SAXParseException; lineNumber: 49; columnNumber: 28; cvc-complex-type.2.4.a: Invalid content was found starting with element 'csrf'. One of '{"http://www.springframework.org/schema/security":intercept-url, "http://www.springframework.org/schema/security":access-denied-handler, "http://www.springframework.org/schema/security":form-login, "http://www.springframework.org/schema/security":openid-login, "http://www.springframework.org/schema/security":x509, "http://www.springframework.org/schema/security":jee, "http://www.springframework.org/schema/security":http-basic, "http://www.springframework.org/schema/security":logout, "http://www.springframework.org/schema/security":session-management, "http://www.springframework.org/schema/security":remember-me, "http://www.springframework.org/schema/security":anonymous, "http://www.springframework.org/schema/security":port-mappings, "http://www.springframework.org/schema/security":custom-filter, "http://www.springframework.org/schema/security":request-cache, "http://www.springframework.org/schema/security":expression-handler, "http://www.springframework.org/schema/security":headers, "http://www.springframework.org/schema/security":csrf}' is expected.
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:399)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:336)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:304)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:181)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:217)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:188)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:125)
	at org.springframework.web.context.support.XmlWebApplicationContext.loadBeanDefinitions(XmlWebApplicationContext.java:94)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:129)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:605)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:509)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:446)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:328)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:835)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:530)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:808)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:342)
	at org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1380)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.startWebapp(JettyWebAppContext.java:320)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:772)
	at org.eclipse.jetty.servlet.ServletContextHandler.doStart(ServletContextHandler.java:259)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:518)
	at org.eclipse.jetty.maven.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:403)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:161)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)
	at org.eclipse.jetty.server.Server.start(Server.java:405)
	at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)
	at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)
	at org.eclipse.jetty.server.Server.doStart(Server.java:372)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:457)
	at org.eclipse.jetty.maven.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:328)
	at org.eclipse.jetty.maven.plugin.JettyRunMojo.execute(JettyRunMojo.java:170)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
	at org.codehaus.classworlds.Launcher.main(Launcher.java:47)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
Caused by: org.xml.sax.SAXParseException; lineNumber: 49; columnNumber: 28; cvc-complex-type.2.4.a: Invalid content was found starting with element 'csrf'. One of '{"http://www.springframework.org/schema/security":intercept-url, "http://www.springframework.org/schema/security":access-denied-handler, "http://www.springframework.org/schema/security":form-login, "http://www.springframework.org/schema/security":openid-login, "http://www.springframework.org/schema/security":x509, "http://www.springframework.org/schema/security":jee, "http://www.springframework.org/schema/security":http-basic, "http://www.springframework.org/schema/security":logout, "http://www.springframework.org/schema/security":session-management, "http://www.springframework.org/schema/security":remember-me, "http://www.springframework.org/schema/security":anonymous, "http://www.springframework.org/schema/security":port-mappings, "http://www.springframework.org/schema/security":custom-filter, "http://www.springframework.org/schema/security":request-cache, "http://www.springframework.org/schema/security":expression-handler, "http://www.springframework.org/schema/security":headers, "http://www.springframework.org/schema/security":csrf}' is expected.
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:134)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:437)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:368)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:325)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator$XSIErrorReporter.reportError(XMLSchemaValidator.java:458)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.reportSchemaError(XMLSchemaValidator.java:3237)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1796)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.emptyElement(XMLSchemaValidator.java:766)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:356)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2786)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:348)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:76)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:429)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:391)
	... 70 more
07:25:30,208  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:25:30,300  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:25:30 PDT 2015]; root of context hierarchy
07:25:30,344  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:25:30,734  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
07:25:30,737  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
07:25:30,772  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
07:25:30,791  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
07:25:31,002  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
07:25:31,003  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
07:25:31,227  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
07:25:31,303  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:25:31,356  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
07:25:31,394  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
07:25:31,479  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
07:25:31,484  INFO Environment:213 - HHH000206: hibernate.properties not found
07:25:31,486  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
07:25:31,537  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
07:25:31,625 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@439b0198
07:25:31,626 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@439b0198
07:25:31,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@439b0198
07:25:31,627 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5390862e
07:25:31,628 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@489c15e2
07:25:31,629 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@220d7eb7
07:25:31,631 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@aaf4375
07:25:31,631 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@aaf4375
07:25:31,632 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@aaf4375
07:25:31,633 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@62f3ad90
07:25:31,634 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@62f3ad90
07:25:31,634 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62f3ad90
07:25:31,636 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7f6936cc
07:25:31,636 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@7f6936cc
07:25:31,636 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f6936cc
07:25:31,638 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@2b0d818d
07:25:31,638 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@2b0d818d
07:25:31,638 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b0d818d
07:25:31,640 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1bcca516
07:25:31,640 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@1bcca516
07:25:31,641 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bcca516
07:25:31,643 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2162598
07:25:31,643 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@2162598
07:25:31,644 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2162598
07:25:31,645 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@410e043b
07:25:31,646 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@410e043b
07:25:31,646 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@410e043b
07:25:31,648 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@27c49f54
07:25:31,649 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@27c49f54
07:25:31,650 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6662974a
07:25:31,651 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6662974a
07:25:31,652 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2662e3ff
07:25:31,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2662e3ff
07:25:31,653 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2c1a0f82
07:25:31,654 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@83bbab
07:25:31,656 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@24bc06dd
07:25:31,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@24bc06dd
07:25:31,659 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@434a2a10
07:25:31,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@434a2a10
07:25:31,661 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@721fc228
07:25:31,661 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@721fc228
07:25:31,662 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@491f3fb0
07:25:31,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@491f3fb0
07:25:31,662 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@491f3fb0
07:25:31,665 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2b569858
07:25:31,666 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@3c2e73ce
07:25:31,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3c2e73ce
07:25:31,667 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3c2e73ce
07:25:31,668 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7925e772
07:25:31,669 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@44c54463
07:25:31,669 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@44c54463
07:25:31,670 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@6bf34912
07:25:31,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6bf34912
07:25:31,671 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@34a482d0
07:25:31,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34a482d0
07:25:31,672 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2eb0932c
07:25:31,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2eb0932c
07:25:31,674 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e75bae7
07:25:31,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e75bae7
07:25:31,675 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f2b1a2f
07:25:31,676 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@6e5df971
07:25:31,676 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e5df971
07:25:31,676 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@6e5df971
07:25:31,678 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@493489dd
07:25:31,678 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@493489dd
07:25:31,678 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@493489dd
07:25:31,679 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@7e916dc2
07:25:31,680 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@679886ad
07:25:31,680 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@679886ad
07:25:31,680 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@679886ad
07:25:31,681 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23307c6c
07:25:31,681 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23307c6c
07:25:31,682 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23307c6c
07:25:31,682 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@643fed50
07:25:31,683 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7d086485
07:25:31,686 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@5d10e2b6
07:25:31,686 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d10e2b6
07:25:31,686 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b69ff13
07:25:31,689 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5bbf3869
07:25:31,689 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5bbf3869
07:25:31,691 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@55ba4bff
07:25:31,691 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@55ba4bff
07:25:31,691 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5b11d0d8
07:25:31,692 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44846c76
07:25:31,693 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@22b4ad0c
07:25:31,696 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2f70d78c
07:25:31,696 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f70d78c
07:25:31,696 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58fadccb
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@711fbcef
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@43d2c8e3
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8bb5c2a
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6a9d572
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@a5df98c
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f1dadf4
07:25:31,697 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@d15f031
07:25:31,986  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:25:32,021  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:25:34,108  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:25:30 PDT 2015]; root of context hierarchy
07:25:34,150  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:25:30 PDT 2015]; root of context hierarchy
07:25:34,416  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@283645fa, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70a81b4e, org.springframework.security.web.header.HeaderWriterFilter@48c56b42, org.springframework.security.web.csrf.CsrfFilter@5c6fae3c, org.courseregistration.auth.CustomRestSecurityFilter@466c39de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@762e3836, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15d2c2ca, org.springframework.security.web.access.ExceptionTranslationFilter@346d8002, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1368ed98]
07:25:34,538  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:25:30 PDT 2015]; root of context hierarchy
07:25:34,648  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 4435 ms
07:29:06,717  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:29:06,812  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:29:06 PDT 2015]; root of context hierarchy
07:29:06,854  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:29:07,263  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
07:29:07,266  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
07:29:07,304  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
07:29:07,321  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
07:29:07,546  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
07:29:07,547  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
07:29:07,695  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
07:29:07,816  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:29:07,866  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
07:29:07,899  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
07:29:07,991  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
07:29:07,996  INFO Environment:213 - HHH000206: hibernate.properties not found
07:29:07,999  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
07:29:08,076  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
07:29:08,165 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5a004dd4
07:29:08,166 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@5a004dd4
07:29:08,166 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5a004dd4
07:29:08,167 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@33e80a27
07:29:08,168 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6ea4b4b2
07:29:08,169 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6237927a
07:29:08,171 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@301c0aae
07:29:08,171 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@301c0aae
07:29:08,171 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@301c0aae
07:29:08,173 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@4ac7927a
07:29:08,173 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@4ac7927a
07:29:08,174 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ac7927a
07:29:08,176 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5a3bba
07:29:08,176 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1b5a3bba
07:29:08,177 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1b5a3bba
07:29:08,179 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@6eacf3be
07:29:08,179 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@6eacf3be
07:29:08,180 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6eacf3be
07:29:08,183 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ae5a507
07:29:08,184 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@5ae5a507
07:29:08,184 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ae5a507
07:29:08,186 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1464a177
07:29:08,186 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1464a177
07:29:08,187 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1464a177
07:29:08,189 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@626e5554
07:29:08,189 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@626e5554
07:29:08,190 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@626e5554
07:29:08,193 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@8850865
07:29:08,193 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@8850865
07:29:08,195 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@65a03c19
07:29:08,195 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@65a03c19
07:29:08,197 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@59eff566
07:29:08,197 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@59eff566
07:29:08,198 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@c105912
07:29:08,200 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4b548913
07:29:08,201 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@42c3b02e
07:29:08,201 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42c3b02e
07:29:08,204 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@70c3c5d7
07:29:08,204 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@70c3c5d7
07:29:08,206 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@795ce9b5
07:29:08,207 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@795ce9b5
07:29:08,209 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2e04dbc1
07:29:08,209 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2e04dbc1
07:29:08,210 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2e04dbc1
07:29:08,213 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@36ce48bc
07:29:08,215 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@b61aa50
07:29:08,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@b61aa50
07:29:08,215 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@b61aa50
07:29:08,217 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5cd5e1b6
07:29:08,220 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@109a462e
07:29:08,221 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@109a462e
07:29:08,222 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@57f31caf
07:29:08,223 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57f31caf
07:29:08,225 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2778a7c3
07:29:08,225 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2778a7c3
07:29:08,227 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@54aacbc7
07:29:08,228 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54aacbc7
07:29:08,229 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@28ec92c9
07:29:08,229 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@28ec92c9
07:29:08,230 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@138d85f8
07:29:08,232 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1b513ce8
07:29:08,232 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b513ce8
07:29:08,232 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1b513ce8
07:29:08,233 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d8de155
07:29:08,234 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d8de155
07:29:08,234 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d8de155
07:29:08,235 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@70b037ac
07:29:08,237 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@46a5aff
07:29:08,238 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@46a5aff
07:29:08,238 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@46a5aff
07:29:08,239 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@58f27c37
07:29:08,240 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@58f27c37
07:29:08,240 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@58f27c37
07:29:08,241 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@63236968
07:29:08,242 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@4ce4c097
07:29:08,247 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3647b274
07:29:08,247 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3647b274
07:29:08,248 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2898cd46
07:29:08,255 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@63d8590c
07:29:08,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@63d8590c
07:29:08,259 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@11c68269
07:29:08,260 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@11c68269
07:29:08,260 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f15d346
07:29:08,261 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f2d4ffc
07:29:08,263 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@24e0bdb
07:29:08,267 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1f7653ae
07:29:08,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1f7653ae
07:29:08,268 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1737acc0
07:29:08,268 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@30ffc3c0
07:29:08,268 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@76b8b6a6
07:29:08,269 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@47e02a89
07:29:08,269 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6d9bcf19
07:29:08,269 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@23b4f0a9
07:29:08,270 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@108a7fff
07:29:08,270 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@56f8ab05
07:29:08,636  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:29:08,691  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:29:11,388  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:29:06 PDT 2015]; root of context hierarchy
07:29:11,446  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:29:06 PDT 2015]; root of context hierarchy
07:29:11,830  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@4c55d3ce, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3bafa95b, org.springframework.security.web.header.HeaderWriterFilter@6bbcb69f, org.springframework.security.web.csrf.CsrfFilter@31360632, org.courseregistration.auth.CustomRestSecurityFilter@531f6879, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@153ce630, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b3aa246, org.springframework.security.web.access.ExceptionTranslationFilter@1abc3085, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@32c8df0b]
07:29:12,004  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:29:06 PDT 2015]; root of context hierarchy
07:29:12,179  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5459 ms
07:33:30,221  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:33:30,365  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:33:30 PDT 2015]; root of context hierarchy
07:33:30,416  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:33:30,899  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
07:33:30,903  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
07:33:30,943  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
07:33:30,963  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
07:33:31,215  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
07:33:31,215  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
07:33:31,365  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
07:33:31,473  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:33:31,524  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
07:33:31,550  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
07:33:31,629  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
07:33:31,632  INFO Environment:213 - HHH000206: hibernate.properties not found
07:33:31,633  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
07:33:31,695  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
07:33:31,767 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@27115d45
07:33:31,768 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@27115d45
07:33:31,768 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@27115d45
07:33:31,769 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7b7268db
07:33:31,771 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@29e8c09c
07:33:31,772 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2ce7d43
07:33:31,773 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46a5aff
07:33:31,774 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@46a5aff
07:33:31,774 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@46a5aff
07:33:31,775 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@58f27c37
07:33:31,775 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@58f27c37
07:33:31,776 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@58f27c37
07:33:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4e0a5606
07:33:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4e0a5606
07:33:31,778 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4e0a5606
07:33:31,779 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@472d7f34
07:33:31,780 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@472d7f34
07:33:31,780 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@472d7f34
07:33:31,782 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@358bbbe2
07:33:31,782 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@358bbbe2
07:33:31,783 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@358bbbe2
07:33:31,786 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@ae4a043
07:33:31,786 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@ae4a043
07:33:31,787 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ae4a043
07:33:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3647b274
07:33:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@3647b274
07:33:31,789 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3647b274
07:33:31,791 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15d2c2ca
07:33:31,792 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15d2c2ca
07:33:31,793 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@bf0025d
07:33:31,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@bf0025d
07:33:31,794 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@23bf19c9
07:33:31,795 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@23bf19c9
07:33:31,796 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50c442a5
07:33:31,797 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@109fff4a
07:33:31,799 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@63fe055
07:33:31,799 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@63fe055
07:33:31,801 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@3debeb5e
07:33:31,802 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3debeb5e
07:33:31,804 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@4e132a9b
07:33:31,804 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4e132a9b
07:33:31,806 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2aa85cc4
07:33:31,806 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2aa85cc4
07:33:31,807 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2aa85cc4
07:33:31,810 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17524c36
07:33:31,811 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@588b02a0
07:33:31,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@588b02a0
07:33:31,812 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@588b02a0
07:33:31,813 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@83b39c3
07:33:31,814 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@76b8b6a6
07:33:31,814 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@76b8b6a6
07:33:31,815 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@619dc070
07:33:31,816 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@619dc070
07:33:31,817 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4a2c69a6
07:33:31,817 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4a2c69a6
07:33:31,818 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@42014a
07:33:31,818 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42014a
07:33:31,820 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@e62d757
07:33:31,820 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@e62d757
07:33:31,821 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@252459b2
07:33:31,823 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2be49c8c
07:33:31,823 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2be49c8c
07:33:31,823 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2be49c8c
07:33:31,825 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3e5d10fc
07:33:31,825 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3e5d10fc
07:33:31,825 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3e5d10fc
07:33:31,826 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@4569b6a9
07:33:31,828 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@655008a2
07:33:31,828 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@655008a2
07:33:31,828 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@655008a2
07:33:31,829 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3726fc3b
07:33:31,830 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3726fc3b
07:33:31,830 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3726fc3b
07:33:31,831 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@915c47b
07:33:31,832 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@1c8d9ac9
07:33:31,836 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@37672aa7
07:33:31,837 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@37672aa7
07:33:31,837 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4aa4bfa1
07:33:31,841 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@289fff3c
07:33:31,842 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@289fff3c
07:33:31,845 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2daf650b
07:33:31,845 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2daf650b
07:33:31,846 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5180f430
07:33:31,847 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@23b260ed
07:33:31,849 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@5910c67e
07:33:31,852 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1014c825
07:33:31,852 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1014c825
07:33:31,853 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a479c0c
07:33:31,854 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33d75081
07:33:31,854 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@327af731
07:33:31,854 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2fb171f5
07:33:31,854 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@19203ff3
07:33:31,854 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@10fa270e
07:33:31,855 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75dc995f
07:33:31,855 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@51c660c8
07:33:32,159  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:33:32,195  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:33:34,722  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:33:30 PDT 2015]; root of context hierarchy
07:33:34,774  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:33:30 PDT 2015]; root of context hierarchy
07:33:35,188  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@63031e98, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b521697, org.springframework.security.web.header.HeaderWriterFilter@569242a8, org.springframework.security.web.csrf.CsrfFilter@5cc12274, org.courseregistration.auth.CustomRestSecurityFilter@274d10aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c304c7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78f3ce56, org.springframework.security.web.access.ExceptionTranslationFilter@2df491be, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62f30cea]
07:33:35,359  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:33:30 PDT 2015]; root of context hierarchy
07:33:35,528  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5304 ms
07:35:20,627 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5778d904
07:35:20,629  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
07:35:20,669 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
07:35:20,683 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

07:35:20,683 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:20,710 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
07:35:20,741 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
07:35:20,743 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
07:35:20,747 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
07:35:20,749 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@23bf19c9
07:35:20,751 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
07:35:20,755 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
07:35:20,757 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
07:35:20,769 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
07:35:20,770 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
07:35:20,771 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@23bf19c9}

07:35:20,772 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:20,784 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
07:35:20,784 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
07:35:20,785 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:20,825 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
07:35:20,901 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
07:35:20,927 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
07:35:20,989 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
07:35:20,992 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

07:35:20,992 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:20,993 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
07:35:20,993 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
07:35:20,995 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
07:35:20,996 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@23bf19c9
07:35:20,996 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
07:35:20,996 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
07:35:20,997 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
07:35:20,998 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
07:35:20,998 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
07:35:20,999 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
07:35:20,999 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

07:35:20,999 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:21,000 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
07:35:21,000 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
07:35:21,000 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:35:21,001 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
07:36:46,107 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
07:36:46,119 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
07:36:46,121 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
07:38:26,606 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
07:56:43,191  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:56:43,305  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:56:43 PDT 2015]; root of context hierarchy
07:56:43,353  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:56:43,857  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
07:56:43,860  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
07:56:43,889  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
07:56:43,905  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
07:56:44,104  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
07:56:44,105  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
07:56:44,260  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
07:56:44,368  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:56:44,409  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
07:56:44,433  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
07:56:44,515  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
07:56:44,520  INFO Environment:213 - HHH000206: hibernate.properties not found
07:56:44,522  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
07:56:44,610  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
07:56:44,705 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@457547a1
07:56:44,705 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@457547a1
07:56:44,705 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457547a1
07:56:44,707 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65bc50c9
07:56:44,709 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d287f7c
07:56:44,710 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@233bfc46
07:56:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c52c362
07:56:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c52c362
07:56:44,713 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@c52c362
07:56:44,715 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1c4335c8
07:56:44,716 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1c4335c8
07:56:44,716 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c4335c8
07:56:44,718 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d45acab
07:56:44,718 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d45acab
07:56:44,719 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d45acab
07:56:44,720 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5ce34685
07:56:44,720 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5ce34685
07:56:44,721 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ce34685
07:56:44,722 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@349504d5
07:56:44,723 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@349504d5
07:56:44,723 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@349504d5
07:56:44,725 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1d8230cd
07:56:44,725 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1d8230cd
07:56:44,725 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d8230cd
07:56:44,727 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5d8de155
07:56:44,727 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5d8de155
07:56:44,727 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d8de155
07:56:44,730 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46a5aff
07:56:44,730 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46a5aff
07:56:44,731 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58f27c37
07:56:44,732 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58f27c37
07:56:44,733 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@63236968
07:56:44,733 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@63236968
07:56:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce4c097
07:56:44,734 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f4e235e
07:56:44,736 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7b9e7633
07:56:44,736 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b9e7633
07:56:44,738 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2ea8f277
07:56:44,739 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ea8f277
07:56:44,741 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@23471f48
07:56:44,741 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23471f48
07:56:44,743 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15d2c2ca
07:56:44,743 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d2c2ca
07:56:44,743 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d2c2ca
07:56:44,749 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17c7cc93
07:56:44,750 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@93cc5eb
07:56:44,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@93cc5eb
07:56:44,750 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@93cc5eb
07:56:44,751 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14501070
07:56:44,753 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@63d8590c
07:56:44,753 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63d8590c
07:56:44,755 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@532782f5
07:56:44,755 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@532782f5
07:56:44,756 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@640a80aa
07:56:44,756 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@640a80aa
07:56:44,758 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@123fd460
07:56:44,758 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@123fd460
07:56:44,760 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fb70e94
07:56:44,760 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fb70e94
07:56:44,761 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38293d23
07:56:44,762 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1495f70
07:56:44,763 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1495f70
07:56:44,763 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1495f70
07:56:44,764 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@730a140b
07:56:44,764 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@730a140b
07:56:44,765 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@730a140b
07:56:44,766 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2100b770
07:56:44,767 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6bd5aa8b
07:56:44,768 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6bd5aa8b
07:56:44,768 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6bd5aa8b
07:56:44,769 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:56:44,769 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:56:44,769 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:56:44,770 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1639ec7a
07:56:44,771 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@57ac220f
07:56:44,777 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3e5d10fc
07:56:44,777 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e5d10fc
07:56:44,778 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@61f62b80
07:56:44,781 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4005e63a
07:56:44,782 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4005e63a
07:56:44,785 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4be171d1
07:56:44,785 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4be171d1
07:56:44,786 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37672aa7
07:56:44,786 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4aa4bfa1
07:56:44,788 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@500e995b
07:56:44,793 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1fcef7
07:56:44,793 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fcef7
07:56:44,794 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57d6f569
07:56:44,794 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5854e526
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@289fff3c
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6872201
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@669ae205
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19984625
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e293c35
07:56:44,795 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@718198db
07:56:45,125  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:56:45,168  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:56:47,788  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:56:43 PDT 2015]; root of context hierarchy
07:56:47,842  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:56:43 PDT 2015]; root of context hierarchy
07:56:48,209  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@78605670, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6022cf7e, org.springframework.security.web.header.HeaderWriterFilter@5d05bb29, org.springframework.security.web.csrf.CsrfFilter@3298e1d, org.courseregistration.auth.CustomRestSecurityFilter@79009bde, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@faff2bf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7f83cc90, org.springframework.security.web.access.ExceptionTranslationFilter@3015fc1b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4db65fac]
07:56:48,370  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:56:43 PDT 2015]; root of context hierarchy
07:56:48,537  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5343 ms
07:57:15,937 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6add6ade
07:57:15,938  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
07:57:15,983 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
07:57:15,996 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

07:57:15,997 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:16,023 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
07:57:16,046 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
07:57:16,047 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
07:57:16,053 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
07:57:16,054 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@63236968
07:57:16,056 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
07:57:16,058 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
07:57:16,058 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
07:57:16,069 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
07:57:16,070 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
07:57:16,071 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@63236968}

07:57:16,071 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:16,082 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
07:57:16,082 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
07:57:16,083 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:16,120 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
07:57:16,178 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
07:57:16,201 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
07:57:18,717 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
07:57:18,720 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

07:57:18,720 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:18,721 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
07:57:18,722 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
07:57:18,724 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
07:57:18,724 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@63236968
07:57:18,725 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
07:57:18,726 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
07:57:18,726 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
07:57:18,727 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
07:57:18,728 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
07:57:18,728 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
07:57:18,729 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

07:57:18,729 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:18,730 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
07:57:18,730 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
07:57:18,731 DEBUG ErrorCounter:95 - throwQueryException() : no errors
07:57:18,733 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
07:59:42,781  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
07:59:42,885  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 07:59:42 PDT 2015]; root of context hierarchy
07:59:42,932  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
07:59:43,346  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
07:59:43,350  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
07:59:43,387  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
07:59:43,405  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
07:59:43,623  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
07:59:43,624  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
07:59:43,781  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
07:59:43,883  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
07:59:43,942  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
07:59:43,973  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
07:59:44,074  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
07:59:44,077  INFO Environment:213 - HHH000206: hibernate.properties not found
07:59:44,079  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
07:59:44,152  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
07:59:44,245 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@457547a1
07:59:44,246 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@457547a1
07:59:44,246 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457547a1
07:59:44,248 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@65bc50c9
07:59:44,250 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3d287f7c
07:59:44,251 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@233bfc46
07:59:44,253 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c52c362
07:59:44,253 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@c52c362
07:59:44,253 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@c52c362
07:59:44,255 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@1c4335c8
07:59:44,255 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@1c4335c8
07:59:44,255 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c4335c8
07:59:44,258 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d45acab
07:59:44,259 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@d45acab
07:59:44,259 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@d45acab
07:59:44,261 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@5ce34685
07:59:44,261 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@5ce34685
07:59:44,261 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5ce34685
07:59:44,263 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@349504d5
07:59:44,264 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@349504d5
07:59:44,264 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@349504d5
07:59:44,266 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1d8230cd
07:59:44,266 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@1d8230cd
07:59:44,267 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1d8230cd
07:59:44,268 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5d8de155
07:59:44,269 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@5d8de155
07:59:44,269 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d8de155
07:59:44,272 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46a5aff
07:59:44,272 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46a5aff
07:59:44,273 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58f27c37
07:59:44,274 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58f27c37
07:59:44,276 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@63236968
07:59:44,276 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@63236968
07:59:44,278 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce4c097
07:59:44,279 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f4e235e
07:59:44,281 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@7b9e7633
07:59:44,281 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7b9e7633
07:59:44,283 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2ea8f277
07:59:44,284 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ea8f277
07:59:44,286 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@23471f48
07:59:44,287 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@23471f48
07:59:44,289 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@15d2c2ca
07:59:44,289 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d2c2ca
07:59:44,290 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d2c2ca
07:59:44,294 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@17c7cc93
07:59:44,295 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@93cc5eb
07:59:44,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@93cc5eb
07:59:44,296 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@93cc5eb
07:59:44,298 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14501070
07:59:44,300 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@63d8590c
07:59:44,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@63d8590c
07:59:44,302 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@532782f5
07:59:44,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@532782f5
07:59:44,303 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@640a80aa
07:59:44,304 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@640a80aa
07:59:44,305 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@123fd460
07:59:44,305 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@123fd460
07:59:44,307 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fb70e94
07:59:44,307 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fb70e94
07:59:44,308 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38293d23
07:59:44,310 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1495f70
07:59:44,310 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1495f70
07:59:44,311 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1495f70
07:59:44,313 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@730a140b
07:59:44,313 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@730a140b
07:59:44,313 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@730a140b
07:59:44,315 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@2100b770
07:59:44,316 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@6bd5aa8b
07:59:44,317 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6bd5aa8b
07:59:44,317 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@6bd5aa8b
07:59:44,318 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:59:44,319 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:59:44,319 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23b4f0a9
07:59:44,320 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1639ec7a
07:59:44,323 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@57ac220f
07:59:44,328 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@3e5d10fc
07:59:44,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e5d10fc
07:59:44,330 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@61f62b80
07:59:44,334 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@4005e63a
07:59:44,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4005e63a
07:59:44,338 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@4be171d1
07:59:44,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4be171d1
07:59:44,340 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37672aa7
07:59:44,341 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4aa4bfa1
07:59:44,342 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@500e995b
07:59:44,347 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@1fcef7
07:59:44,347 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1fcef7
07:59:44,348 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@57d6f569
07:59:44,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5854e526
07:59:44,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@289fff3c
07:59:44,349 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6872201
07:59:44,350 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@669ae205
07:59:44,350 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19984625
07:59:44,351 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e293c35
07:59:44,351 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@718198db
07:59:44,710  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
07:59:44,766  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
07:59:47,054  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:59:42 PDT 2015]; root of context hierarchy
07:59:47,105  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:59:42 PDT 2015]; root of context hierarchy
07:59:47,473  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3015fc1b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4db65fac, org.springframework.security.web.header.HeaderWriterFilter@3d7c76af, org.springframework.security.web.csrf.CsrfFilter@5cfadadc, org.courseregistration.auth.CustomRestSecurityFilter@4310007c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c247c8d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6233bca8, org.springframework.security.web.access.ExceptionTranslationFilter@6895b608, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b454886]
07:59:47,642  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 07:59:42 PDT 2015]; root of context hierarchy
07:59:47,806  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5022 ms
08:00:27,670 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2e7f4361
08:00:27,672  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
08:00:27,869 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:00:27,885 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

08:00:27,886 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:27,927 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
08:00:27,961 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
08:00:27,963 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:00:27,968 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:00:27,971 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@63236968
08:00:27,973 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
08:00:27,983 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
08:00:27,984 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
08:00:28,003 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
08:00:28,004 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
08:00:28,008 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@63236968}

08:00:28,009 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:28,025 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:00:28,026 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:00:28,026 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:28,091 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:00:28,173 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:00:28,203 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:00:30,226 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by name asc
08:00:30,228 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'name'
       \-[ASCENDING] Node: 'asc'

08:00:30,228 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:30,229 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
08:00:30,229 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
08:00:30,231 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
08:00:30,231 DEBUG DotNode:654 - getDataType() : name -> org.hibernate.type.StringType@63236968
08:00:30,232 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.name -> course0_.name
08:00:30,233 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
08:00:30,234 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.name {synthetic-alias} name ) asc ) )
08:00:30,235 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
08:00:30,235 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
08:00:30,236 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
08:00:30,236 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path={synthetic-alias}.name,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'name' {originalText=name}
       \-[ASCENDING] SqlNode: 'asc'

08:00:30,237 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:30,238 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by name asc
08:00:30,238 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
08:00:30,238 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:00:30,239 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.name asc
08:01:22,074 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:01:22,083 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:01:22,085 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:01:22,101 ERROR GenericExceptionMapper:21 - HTTP 405 Method Not Allowed
javax.ws.rs.WebApplicationException: HTTP 405 Method Not Allowed
	at com.sun.jersey.server.impl.uri.rules.TerminatingRule.accept(TerminatingRule.java:66)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
08:02:43,828  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
08:02:43,925  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 08:02:43 PDT 2015]; root of context hierarchy
08:02:43,971  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
08:02:44,355  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
08:02:44,358  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
08:02:44,396  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
08:02:44,414  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, Root bean: class [org.springframework.security.web.csrf.CsrfFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 600, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
08:02:44,646  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
08:02:44,646  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
08:02:44,805  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:02:44,917  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
08:02:44,979  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
08:02:45,013  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
08:02:45,117  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
08:02:45,122  INFO Environment:213 - HHH000206: hibernate.properties not found
08:02:45,124  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
08:02:45,191  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
08:02:45,289 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@52b7a3e1
08:02:45,289 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@52b7a3e1
08:02:45,289 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52b7a3e1
08:02:45,291 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@108b2321
08:02:45,292 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50cb64d5
08:02:45,293 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3d287f7c
08:02:45,295 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@eb65fc8
08:02:45,295 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@eb65fc8
08:02:45,295 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@eb65fc8
08:02:45,297 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@a49cdd6
08:02:45,297 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@a49cdd6
08:02:45,298 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@a49cdd6
08:02:45,299 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bda93f1
08:02:45,300 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@4bda93f1
08:02:45,300 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bda93f1
08:02:45,302 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@643947d1
08:02:45,302 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@643947d1
08:02:45,302 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@643947d1
08:02:45,304 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@8d0253b
08:02:45,305 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@8d0253b
08:02:45,305 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@8d0253b
08:02:45,307 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3edb09b9
08:02:45,308 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@3edb09b9
08:02:45,308 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3edb09b9
08:02:45,310 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@297bbd41
08:02:45,310 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@297bbd41
08:02:45,310 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@297bbd41
08:02:45,313 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64f34c91
08:02:45,314 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64f34c91
08:02:45,315 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4b2ca159
08:02:45,316 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4b2ca159
08:02:45,317 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@19070326
08:02:45,317 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@19070326
08:02:45,318 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4e0a5606
08:02:45,320 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@472d7f34
08:02:45,321 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@a589070
08:02:45,322 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a589070
08:02:45,324 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@6e620fa9
08:02:45,324 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e620fa9
08:02:45,326 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@6442c2dd
08:02:45,327 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6442c2dd
08:02:45,329 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@48c56b42
08:02:45,329 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@48c56b42
08:02:45,330 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@48c56b42
08:02:45,333 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@15d2c2ca
08:02:45,334 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@227ae4e4
08:02:45,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@227ae4e4
08:02:45,335 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@227ae4e4
08:02:45,336 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3ef7064b
08:02:45,337 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@440309c5
08:02:45,338 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@440309c5
08:02:45,339 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@31aec04a
08:02:45,339 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@31aec04a
08:02:45,340 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6960e7a6
08:02:45,340 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6960e7a6
08:02:45,341 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@363751f2
08:02:45,342 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@363751f2
08:02:45,344 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b237c2c
08:02:45,344 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b237c2c
08:02:45,345 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7fb70e94
08:02:45,346 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@2d05d022
08:02:45,347 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2d05d022
08:02:45,347 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@2d05d022
08:02:45,348 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@348d1a5e
08:02:45,348 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@348d1a5e
08:02:45,349 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@348d1a5e
08:02:45,350 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@48d6248d
08:02:45,351 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@2ca4b010
08:02:45,351 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@2ca4b010
08:02:45,352 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@2ca4b010
08:02:45,353 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30ffc3c0
08:02:45,353 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30ffc3c0
08:02:45,354 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30ffc3c0
08:02:45,355 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@652855c4
08:02:45,356 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@132f1d85
08:02:45,360 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@56a8b19f
08:02:45,361 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56a8b19f
08:02:45,361 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e5d10fc
08:02:45,366 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@5502f74c
08:02:45,366 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5502f74c
08:02:45,369 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@2b0df4ba
08:02:45,370 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2b0df4ba
08:02:45,370 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4be171d1
08:02:45,371 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37672aa7
08:02:45,373 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@361a618e
08:02:45,376 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@62a89e92
08:02:45,377 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62a89e92
08:02:45,377 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fcef7
08:02:45,378 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f341732
08:02:45,378 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@236a6a2a
08:02:45,378 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2940eec0
08:02:45,378 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@57d6f569
08:02:45,378 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5854e526
08:02:45,379 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@289fff3c
08:02:45,379 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6872201
08:02:45,722  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
08:02:45,770  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
08:02:48,101  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:02:43 PDT 2015]; root of context hierarchy
08:02:48,159  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:02:43 PDT 2015]; root of context hierarchy
08:02:48,521  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@3464d24c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@341f2f4c, org.springframework.security.web.header.HeaderWriterFilter@68754439, org.springframework.security.web.csrf.CsrfFilter@44bd11a2, org.courseregistration.auth.CustomRestSecurityFilter@56595dcb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1b717d03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@59e7a6d8, org.springframework.security.web.access.ExceptionTranslationFilter@757b8c47, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69503026]
08:02:48,736  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:02:43 PDT 2015]; root of context hierarchy
08:02:48,915  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5084 ms
08:02:59,856 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@44411098
08:02:59,858  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
08:02:59,894 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:02:59,910 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

08:02:59,911 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:02:59,940 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
08:02:59,968 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
08:02:59,970 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:02:59,973 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:02:59,975 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@19070326
08:02:59,977 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
08:02:59,980 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
08:02:59,980 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
08:02:59,997 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
08:02:59,998 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
08:02:59,999 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@19070326}

08:02:59,999 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:03:00,010 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:03:00,011 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:03:00,011 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:03:00,055 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:03:00,121 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,147 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,216 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
08:03:00,220 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

08:03:00,221 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:03:00,221 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
08:03:00,222 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
08:03:00,223 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
08:03:00,224 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@19070326
08:03:00,224 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
08:03:00,224 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
08:03:00,224 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
08:03:00,226 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
08:03:00,226 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
08:03:00,227 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
08:03:00,227 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.date_of_birth as date_of_2_8_, student0_1_.email_id as email_id3_8_, student0_1_.first_name as first_na4_8_, student0_1_.password as password5_8_, student0_1_.last_name as last_nam6_8_, student0_1_.middle_name as middle_n7_8_, student0_1_.phone_number as phone_nu8_8_, student0_1_.username as username9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

08:03:00,228 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:03:00,228 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
08:03:00,229 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.date_of_birth as date_of_2_8_, student0_1_.email_id as email_id3_8_, student0_1_.first_name as first_na4_8_, student0_1_.password as password5_8_, student0_1_.last_name as last_nam6_8_, student0_1_.middle_name as middle_n7_8_, student0_1_.phone_number as phone_nu8_8_, student0_1_.username as username9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
08:03:00,229 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:03:00,230 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.date_of_birth as date_of_2_8_, student0_1_.email_id as email_id3_8_, student0_1_.first_name as first_na4_8_, student0_1_.password as password5_8_, student0_1_.last_name as last_nam6_8_, student0_1_.middle_name as middle_n7_8_, student0_1_.phone_number as phone_nu8_8_, student0_1_.username as username9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
08:03:00,243 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,246 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,248 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,250 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,252 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,254 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,255 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,256 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,258 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,260 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,261 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:03:00,263 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,269 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,271 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,273 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,274 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,282 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,284 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,285 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,287 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,289 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,291 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,293 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,294 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,295 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,296 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,298 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,299 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,301 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,302 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,303 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,304 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,306 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:03:00,307 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_13_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.price as price7_5_1_, section1_.professor_id as profess14_5_1_, section1_.room_number as room_num8_5_1_, section1_.semester as semester9_5_1_, section1_.class_start_date as class_s10_5_1_, section1_.total_capacity as total_c11_5_1_, section1_.wait_list_capacity as wait_li12_5_1_, course2_.course_id as course_i1_1_2_, course2_.code as code2_1_2_, course2_.department as departme3_1_2_, course2_.description as descript4_1_2_, course2_.name as name5_1_2_, course2_.no_of_credits as no_of_cr6_1_2_, course2_.pre_requisite_course as pre_requ7_1_2_, course2_.program as program8_1_2_, professor3_.user_id as user_id1_8_3_, professor3_1_.address_id as address10_8_3_, professor3_1_.date_of_birth as date_of_2_8_3_, professor3_1_.email_id as email_id3_8_3_, professor3_1_.first_name as first_na4_8_3_, professor3_1_.password as password5_8_3_, professor3_1_.last_name as last_nam6_8_3_, professor3_1_.middle_name as middle_n7_8_3_, professor3_1_.phone_number as phone_nu8_8_3_, professor3_1_.username as username9_8_3_, professor3_.faculty_type as faculty_1_3_3_, professor3_.office_hours_from_time as office_h2_3_3_, professor3_.office_hours_to_time as office_h3_3_3_, professor3_.years_of_experience as years_of4_3_3_, address4_.address_id as address_1_0_4_, address4_.apt_no as apt_no2_0_4_, address4_.city as city3_0_4_, address4_.state as state4_0_4_, address4_.street_name as street_n5_0_4_, address4_.zip_code as zip_code6_0_4_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id left outer join course_details course2_ on section1_.course_id=course2_.course_id left outer join professor_details professor3_ on section1_.professor_id=professor3_.user_id left outer join users professor3_1_ on professor3_.user_id=professor3_1_.user_id left outer join address address4_ on professor3_1_.address_id=address4_.address_id where sections0_.student_id=?
08:03:00,308 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:10:26,929  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
08:10:27,034  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 08:10:27 PDT 2015]; root of context hierarchy
08:10:27,078  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
08:10:27,573  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
08:10:27,576  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
08:10:27,612  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
08:10:27,632  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
08:10:27,893  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'requestDataValueProcessor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration; factoryMethodName=requestDataValueProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebMvcSecurityConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.security.config.annotation.web.servlet.configuration.WebMvcSecurityConfiguration; factoryMethodName=requestDataValueProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/security/config/annotation/web/servlet/configuration/WebMvcSecurityConfiguration.class]]
08:10:27,894  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
08:10:27,895  INFO ConfigurationClassBeanDefinitionReader:298 - Skipping bean definition for [BeanMethod:name=mvcUriComponentsContributor,declaringClass=org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport]: a definition for bean 'mvcUriComponentsContributor' already exists. This top-level bean definition is considered as an override.
08:10:28,050  INFO AutowiredAnnotationBeanPostProcessor:153 - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
08:10:28,160  INFO DriverManagerDataSource:133 - Loaded JDBC driver: com.mysql.jdbc.Driver
08:10:28,221  INFO LocalContainerEntityManagerFactoryBean:339 - Building JPA container EntityManagerFactory for persistence unit 'student_registration_system'
08:10:28,254  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
08:10:28,351  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
08:10:28,355  INFO Environment:213 - HHH000206: hibernate.properties not found
08:10:28,358  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
08:10:28,434  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
08:10:28,524 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f15d346
08:10:28,524 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@1f15d346
08:10:28,524 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1f15d346
08:10:28,525 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4973dacf
08:10:28,527 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7f746160
08:10:28,527 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@2f29046b
08:10:28,529 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f7653ae
08:10:28,529 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@1f7653ae
08:10:28,530 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1f7653ae
08:10:28,531 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@47e02a89
08:10:28,531 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@47e02a89
08:10:28,531 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47e02a89
08:10:28,533 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1928208d
08:10:28,533 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1928208d
08:10:28,534 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1928208d
08:10:28,535 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@7e641005
08:10:28,535 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@7e641005
08:10:28,535 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7e641005
08:10:28,537 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c5de17c
08:10:28,537 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@3c5de17c
08:10:28,537 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3c5de17c
08:10:28,539 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@593d5f39
08:10:28,539 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@593d5f39
08:10:28,539 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@593d5f39
08:10:28,541 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@36c45b54
08:10:28,541 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@36c45b54
08:10:28,542 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36c45b54
08:10:28,546 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2da273b3
08:10:28,546 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2da273b3
08:10:28,548 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7641d70
08:10:28,548 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7641d70
08:10:28,550 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@2a742ee4
08:10:28,550 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2a742ee4
08:10:28,553 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2aea7775
08:10:28,555 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@717b4de2
08:10:28,556 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@4dc10682
08:10:28,557 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc10682
08:10:28,559 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@59a49dbc
08:10:28,560 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59a49dbc
08:10:28,562 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@670199c5
08:10:28,562 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@670199c5
08:10:28,564 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@500e995b
08:10:28,564 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@500e995b
08:10:28,564 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@500e995b
08:10:28,568 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3459ccd9
08:10:28,569 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@670e6fa3
08:10:28,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@670e6fa3
08:10:28,570 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@670e6fa3
08:10:28,571 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6ba8859b
08:10:28,572 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@57d6f569
08:10:28,572 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57d6f569
08:10:28,574 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@718198db
08:10:28,574 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@718198db
08:10:28,575 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@aec9672
08:10:28,575 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@aec9672
08:10:28,577 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@1eb3a6a3
08:10:28,577 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1eb3a6a3
08:10:28,579 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7d14efc
08:10:28,579 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7d14efc
08:10:28,580 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75452b01
08:10:28,584 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@1d0b4b69
08:10:28,584 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d0b4b69
08:10:28,587 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@1d0b4b69
08:10:28,590 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@697797e4
08:10:28,591 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@697797e4
08:10:28,592 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@697797e4
08:10:28,593 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@54b88247
08:10:28,594 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@1014c825
08:10:28,594 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@1014c825
08:10:28,595 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@1014c825
08:10:28,596 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2fb171f5
08:10:28,596 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2fb171f5
08:10:28,597 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2fb171f5
08:10:28,598 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@1985f8e3
08:10:28,602 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@bc85538
08:10:28,608 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@4fdea2de
08:10:28,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4fdea2de
08:10:28,609 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7356ec91
08:10:28,614 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@475454ae
08:10:28,614 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@475454ae
08:10:28,619 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@674b2703
08:10:28,620 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@674b2703
08:10:28,621 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7cbcd27e
08:10:28,622 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@56ed9270
08:10:28,623 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@7cba8293
08:10:28,627 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@2cb95c6c
08:10:28,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2cb95c6c
08:10:28,628 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3edc999f
08:10:28,629 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cb03360
08:10:28,629 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a8ae302
08:10:28,629 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@65134e6c
08:10:28,629 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fd93330
08:10:28,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@32ff3c98
08:10:28,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f804b36
08:10:28,630 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@201f0e84
08:10:29,035  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
08:10:29,089  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
08:10:31,619  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:10:27 PDT 2015]; root of context hierarchy
08:10:31,676  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:10:27 PDT 2015]; root of context hierarchy
08:10:32,044  INFO DefaultSecurityFilterChain:28 - Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.SecurityContextPersistenceFilter@54610a47, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7669fc90, org.springframework.security.web.header.HeaderWriterFilter@a538180, org.courseregistration.auth.CustomRestSecurityFilter@21b4a7d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e744b4b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6740b169, org.springframework.security.web.access.ExceptionTranslationFilter@71897380, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2919976e]
08:10:32,246  INFO RequestMappingHandlerAdapter:532 - Looking for @ControllerAdvice: Root WebApplicationContext: startup date [Wed Oct 28 08:10:27 PDT 2015]; root of context hierarchy
08:10:32,433  INFO ContextLoader:347 - Root WebApplicationContext: initialization completed in 5501 ms
08:10:57,665 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7ada92e9
08:10:57,667  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
08:10:57,712 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:10:57,728 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

08:10:57,729 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:10:57,759 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
08:10:57,792 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.User (u) -> user0_
08:10:57,794 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:10:57,801 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
08:10:57,803 DEBUG DotNode:654 - getDataType() : username -> org.hibernate.type.StringType@2a742ee4
08:10:57,804 DEBUG FromReferenceNode:60 - Resolved : u.username -> user0_.username
08:10:57,806 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
08:10:57,807 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username user0_.user_id username ) ? ) ) )
08:10:57,821 DEBUG JoinProcessor:169 - Using FROM fragment [users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id]
08:10:57,822 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
08:10:57,823 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_8_' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=org.courseregistration.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=org.courseregistration.model.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=org.courseregistration.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@2a742ee4}

08:10:57,823 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:10:57,834 DEBUG QueryTranslatorImpl:247 - HQL: select u from org.courseregistration.model.User as u where u.username=:username
08:10:57,835 DEBUG QueryTranslatorImpl:248 - SQL: select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:10:57,835 DEBUG ErrorCounter:95 - throwQueryException() : no errors
08:10:57,879 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:10:57,951 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:10:57,982 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:10:58,335 ERROR GenericExceptionMapper:21 - Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@6ae1956[c=430,s=STREAM]; line: 16, column: 2]
org.codehaus.jackson.JsonParseException: Unexpected character ('}' (code 125)): was expecting double-quote to start field name
 at [Source: HttpInputOverHTTP@6ae1956[c=430,s=STREAM]; line: 16, column: 2]
	at org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1432)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:385)
	at org.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:306)
	at org.codehaus.jackson.impl.Utf8StreamParser._handleUnusualFieldName(Utf8StreamParser.java:1531)
	at org.codehaus.jackson.impl.Utf8StreamParser._parseFieldName(Utf8StreamParser.java:1221)
	at org.codehaus.jackson.impl.Utf8StreamParser.nextToken(Utf8StreamParser.java:489)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:690)
	at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)
	at org.codehaus.jackson.map.ObjectMapper._readValue(ObjectMapper.java:2695)
	at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1308)
	at org.codehaus.jackson.jaxrs.JacksonJsonProvider.readFrom(JacksonJsonProvider.java:419)
	at com.sun.jersey.json.impl.provider.entity.JacksonProviderProxy.readFrom(JacksonProviderProxy.java:139)
	at com.sun.jersey.spi.container.ContainerRequest.getEntity(ContainerRequest.java:490)
	at com.sun.jersey.server.impl.model.method.dispatch.EntityParamDispatchProvider$EntityInjectable.getValue(EntityParamDispatchProvider.java:123)
	at com.sun.jersey.server.impl.inject.InjectableValuesProvider.getInjectableValues(InjectableValuesProvider.java:86)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$EntityParamInInvoker.getParams(AbstractResourceMethodDispatchProvider.java:153)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:203)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
08:11:15,295 DEBUG SQL:92 - select user0_.user_id as user_id1_8_, user0_.address_id as address10_8_, user0_.date_of_birth as date_of_2_8_, user0_.email_id as email_id3_8_, user0_.first_name as first_na4_8_, user0_.password as password5_8_, user0_.last_name as last_nam6_8_, user0_.middle_name as middle_n7_8_, user0_.phone_number as phone_nu8_8_, user0_.username as username9_8_, user0_1_.admissionType as admissio1_6_, user0_1_.previous_degree as previous2_6_, user0_2_.faculty_type as faculty_1_3_, user0_2_.office_hours_from_time as office_h2_3_, user0_2_.office_hours_to_time as office_h3_3_, user0_2_.years_of_experience as years_of4_3_, case when user0_1_.user_id is not null then 1 when user0_2_.user_id is not null then 2 when user0_.user_id is not null then 0 end as clazz_ from users user0_ left outer join student_details user0_1_ on user0_.user_id=user0_1_.user_id left outer join professor_details user0_2_ on user0_.user_id=user0_2_.user_id where user0_.username=?
08:11:15,304 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
08:11:15,306 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
08:11:15,370 DEBUG SQL:92 - select next_val as id_val from sequence for update
08:11:15,373 DEBUG SQL:92 - update sequence set next_val= ? where next_val=?
08:11:15,405 DEBUG SQL:92 - insert into course_details (code, department, description, name, no_of_credits, pre_requisite_course, program, course_id) values (?, ?, ?, ?, ?, ?, ?, ?)
08:11:15,412 ERROR GenericExceptionMapper:21 - 
java.lang.NullPointerException
	at org.courseregistration.rest.CourseResource.createCourse(CourseResource.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)
	at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)
	at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)
	at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)
	at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)
	at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)
	at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:927)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:875)
	at com.sun.jersey.spi.container.servlet.ServletContainer.doFilter(ServletContainer.java:829)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.courseregistration.auth.CustomRestSecurityFilter.doFilter(CustomRestSecurityFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1668)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:226)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1158)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1090)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:109)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:119)
	at org.eclipse.jetty.server.Server.handle(Server.java:517)
	at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:306)
	at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:242)
	at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:261)
	at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
	at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:75)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:213)
	at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:147)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
	at java.lang.Thread.run(Thread.java:745)
08:12:34,438  INFO ContextLoader:307 - Root WebApplicationContext: initialization started
08:12:34,553  INFO XmlWebApplicationContext:574 - Refreshing Root WebApplicationContext: startup date [Wed Oct 28 08:12:34 PDT 2015]; root of context hierarchy
08:12:34,595  INFO XmlBeanDefinitionReader:317 - Loading XML bean definitions from ServletContext resource [/WEB-INF/applicationContext.xml]
08:12:35,073  INFO SpringSecurityCoreVersion:59 - You are running with Spring Security Core 4.0.2.RELEASE
08:12:35,076  INFO SecurityNamespaceHandler:78 - Spring Security 'config' module version is 4.0.2.RELEASE
08:12:35,110  INFO FilterInvocationSecurityMetadataSourceParser:158 - Creating access control expression attribute 'hasRole('ROLE_USER')' for /**
08:12:35,129  INFO HttpSecurityBeanDefinitionParser:306 - Checking sorted filter chain: [Root bean: class [org.springframework.security.web.context.SecurityContextPersistenceFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 200, Root bean: class [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 400, Root bean: class [org.springframework.security.web.header.HeaderWriterFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 500, <customRestFilter>, order = 1500, Root bean: class [org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 1700, Root bean: class [org.springframework.security.web.authentication.AnonymousAuthenticationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2000, Root bean: class [org.springframework.security.web.access.ExceptionTranslationFilter]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null, order = 2200, <org.springframework.security.web.access.intercept.FilterSecurityInterceptor#0>, order = 2300]
08:12:35,323  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'requestDataValueProcessor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration; factoryMethodName=requestDataValueProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/security/config/annotation/web/configuration/WebMvcSecurityConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.security.config.annotation.web.servlet.configuration.WebMvcSecurityConfiguration; factoryMethodName=requestDataValueProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/security/config/annotation/web/servlet/configuration/WebMvcSecurityConfiguration.class]]
08:12:35,323  INFO DefaultListableBeanFactory:839 - Overriding bean definition for bean 'mvcContentNegotiationManager' with a different definition: replacing [Root bean: class [org.springframework.web.accept.ContentNegotiationManagerFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration; factoryMethodName=mvcContentNegotiationManager; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]]
>>>>>>> branch 'master' of git@github.com:shruti514/CMPE-272-CourseRegistrationSystem.git
