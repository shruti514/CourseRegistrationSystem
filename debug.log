12:59:48,932  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
12:59:48,990  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
12:59:48,993  INFO Environment:213 - HHH000206: hibernate.properties not found
12:59:48,994  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
12:59:49,026  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
12:59:49,100 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
12:59:49,101 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
12:59:49,101 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74a10858
12:59:49,101 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d371b2d
12:59:49,102 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fc2b765
12:59:49,102 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@289d1c02
12:59:49,103 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
12:59:49,103 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
12:59:49,103 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12c8a2c0
12:59:49,104 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@782663d3
12:59:49,104 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@782663d3
12:59:49,105 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@782663d3
12:59:49,106 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
12:59:49,107 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
12:59:49,107 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1786f9d5
12:59:49,107 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3578436e
12:59:49,108 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3578436e
12:59:49,108 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3578436e
12:59:49,109 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
12:59:49,109 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
12:59:49,109 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@954b04f
12:59:49,110 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
12:59:49,110 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
12:59:49,110 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@548ad73b
12:59:49,111 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
12:59:49,111 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
12:59:49,111 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
12:59:49,112 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fd66ad3
12:59:49,112 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fd66ad3
12:59:49,114 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10d59286
12:59:49,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10d59286
12:59:49,114 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@52525845
12:59:49,114 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@52525845
12:59:49,115 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35a50a4c
12:59:49,115 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ae82894
12:59:49,116 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@44a3ec6b
12:59:49,116 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44a3ec6b
12:59:49,117 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f8f5f62
12:59:49,117 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f8f5f62
12:59:49,118 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@b9afc07
12:59:49,118 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b9afc07
12:59:49,119 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@57f23557
12:59:49,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57f23557
12:59:49,119 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57f23557
12:59:49,120 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44f75083
12:59:49,121 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5f71c76a
12:59:49,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f71c76a
12:59:49,121 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f71c76a
12:59:49,121 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e4a7dd4
12:59:49,122 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1ad282e0
12:59:49,122 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ad282e0
12:59:49,123 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@60438a68
12:59:49,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60438a68
12:59:49,123 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c9f5c0d
12:59:49,123 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c9f5c0d
12:59:49,124 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2df32bf7
12:59:49,124 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2df32bf7
12:59:49,125 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2f490758
12:59:49,125 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2f490758
12:59:49,125 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40f08448
12:59:49,126 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@46238e3f
12:59:49,126 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@46238e3f
12:59:49,126 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@46238e3f
12:59:49,127 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ee807c6
12:59:49,127 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ee807c6
12:59:49,127 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ee807c6
12:59:49,127 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@679b62af
12:59:49,128 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@49c43f4e
12:59:49,128 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@49c43f4e
12:59:49,128 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@49c43f4e
12:59:49,128 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bbaf4f0
12:59:49,129 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bbaf4f0
12:59:49,129 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bbaf4f0
12:59:49,129 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@33cb5951
12:59:49,130 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7fad8c79
12:59:49,132 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@314c508a
12:59:49,132 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@314c508a
12:59:49,132 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16267862
12:59:49,134 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77be656f
12:59:49,135 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77be656f
12:59:49,136 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@61d47554
12:59:49,136 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61d47554
12:59:49,137 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d339552
12:59:49,137 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6591f517
12:59:49,138 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@58134517
12:59:49,139 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3b2c72c2
12:59:49,139 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b2c72c2
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@971d0d8
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51931956
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b4a2ec7
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@564718df
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51b7e5df
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18a70f16
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62e136d3
12:59:49,140 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8e4bb0
12:59:49,146  WARN DriverManagerConnectionProviderImpl:76 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
12:59:49,149  INFO DriverManagerConnectionProviderImpl:149 - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3307/student_registration_database]
12:59:49,149  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=root, password=****, autocommit=false}
12:59:49,149  INFO DriverManagerConnectionProviderImpl:163 - HHH000006: Autocommit mode: false
12:59:49,150  INFO DriverManagerConnectionProviderImpl:168 - HHH000149: JDBC isolation level: READ_COMMITTED
12:59:49,150  INFO DriverManagerConnectionProviderImpl:85 - HHH000115: Hibernate connection pool size: 20 (min=1)
12:59:49,348  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
12:59:49,371  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:00:10,222 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e3f95fe
13:00:10,222  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:00:10,240 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
13:00:10,245 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

13:00:10,245 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:10,260 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:10,268 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
13:00:10,269 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:00:10,269 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:00:10,270 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
13:00:10,270 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:10,270 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
13:00:10,272 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:00:10,274 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
13:00:10,274 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:10,275 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

13:00:10,275 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:10,279 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
13:00:10,279 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
13:00:10,279 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:10,289 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
13:00:10,318 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,322 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,323 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,323 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,324 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,324 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,325 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:10,326 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,328 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,328 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,329 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,330 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,330 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:10,331 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:19,892 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by code asc
13:00:19,893 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

13:00:19,893 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:19,894 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:19,894 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
13:00:19,894 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:00:19,894 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:00:19,894 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.code -> course0_.code
13:00:19,894 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:19,895 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.code {synthetic-alias} code ) asc ) )
13:00:19,895 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:00:19,895 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
13:00:19,895 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:19,895 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path={synthetic-alias}.code,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

13:00:19,895 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:19,896 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by code asc
13:00:19,896 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
13:00:19,896 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:19,896 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
13:00:30,091 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
13:00:30,092 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

13:00:30,093 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:30,093 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:30,093 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
13:00:30,094 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:00:30,094 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:00:30,094 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
13:00:30,094 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:30,094 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
13:00:30,094 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:00:30,095 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
13:00:30,095 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:30,095 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

13:00:30,095 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:30,095 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
13:00:30,095 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:00:30,096 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:30,096 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:00:30,099 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,101 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,101 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,102 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,103 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,103 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:00:30,104 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:30,105 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:30,105 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:30,106 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:30,107 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:30,107 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:00:41,534 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias1.code=:param0
13:00:41,536 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

13:00:41,536 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:41,536 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:41,536 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
13:00:41,537 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:41,537 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
13:00:41,537 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
13:00:41,538 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
13:00:41,538 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
13:00:41,538 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
13:00:41,538 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

13:00:41,539 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:41,539 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
13:00:41,539 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
13:00:41,539 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
13:00:41,539 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
13:00:41,539 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
13:00:41,540 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

13:00:41,540 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:41,541 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
13:00:41,541 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:00:41,542 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
13:00:41,542 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:41,542 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( = ( course1_.code course1_.course_id code ) ? ) ) )
13:00:41,543 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
13:00:41,543 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
13:00:41,543 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
13:00:41,543 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:41,544 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52525845}

13:00:41,544 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:41,544 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias1.code=:param0
13:00:41,544 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=?
13:00:41,544 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:41,547 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=?
13:00:55,086 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select s from org.courseregistration.model.Student s where s.firstName=:firstName
13:00:55,088 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Student'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'firstName'

13:00:55,088 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,088 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:55,088 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (s) -> student0_
13:00:55,089 DEBUG FromReferenceNode:60 - Resolved : s -> student0_.user_id
13:00:55,089 DEBUG FromReferenceNode:60 - Resolved : s -> student0_.user_id
13:00:55,089 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:00:55,089 DEBUG FromReferenceNode:60 - Resolved : s.firstName -> student0_1_.first_name
13:00:55,089 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:55,089 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} student0_.user_id ) ( FromClause{level=1} student_details student0_ ) ( where ( = ( student0_1_.first_name student0_.user_id firstName ) ? ) ) )
13:00:55,089 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
13:00:55,090 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:55,090 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'student0_.user_id as user_id1_8_' {alias=s, className=org.courseregistration.model.Student, tableAlias=student0_}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=s.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'student0_.user_id' {alias=s, className=org.courseregistration.model.Student, tableAlias=student0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=firstName, expectedType=org.hibernate.type.StringType@52525845}

13:00:55,090 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,090 DEBUG QueryTranslatorImpl:247 - HQL: select s from org.courseregistration.model.Student s where s.firstName=:firstName
13:00:55,090 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:00:55,090 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,090 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:00:55,092 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias2.lastName=:param1 )
13:00:55,093 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'generatedAlias1'
          |  |  \-[IDENT] Node: 'code'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'param0'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[IDENT] Node: 'generatedAlias2'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'param1'

13:00:55,093 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,094 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:00:55,094 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
13:00:55,094 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:55,094 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
13:00:55,094 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
13:00:55,094 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
13:00:55,094 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
13:00:55,095 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
13:00:55,095 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

13:00:55,095 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:55,095 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
13:00:55,095 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
13:00:55,095 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
13:00:55,096 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
13:00:55,096 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
13:00:55,096 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

13:00:55,096 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:00:55,096 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
13:00:55,096 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:00:55,096 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
13:00:55,097 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2 -> professor2_.user_id
13:00:55,097 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@52525845
13:00:55,097 DEBUG FromReferenceNode:60 - Resolved : generatedAlias2.lastName -> professor2_1_.last_name
13:00:55,097 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:00:55,097 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( and ( = ( course1_.code course1_.course_id code ) ? ) ( = ( professor2_1_.last_name professor2_.user_id lastName ) ? ) ) ) )
13:00:55,097 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
13:00:55,097 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
13:00:55,098 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
13:00:55,098 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:00:55,098 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52525845}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=generatedAlias2.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=generatedAlias2}
             |  +-[ALIAS_REF] IdentNode: 'professor2_.user_id' {alias=generatedAlias2, className=org.courseregistration.model.Professor, tableAlias=professor2_}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=param1, expectedType=org.hibernate.type.StringType@52525845}

13:00:55,098 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,098 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where ( generatedAlias1.code=:param0 ) and ( generatedAlias2.lastName=:param1 )
13:00:55,098 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and professor2_1_.last_name=?
13:00:55,098 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:00:55,099 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and professor2_1_.last_name=?
13:00:55,100 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_12_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.professor_id as profess13_5_1_, section1_.room_number as room_num7_5_1_, section1_.semester as semester8_5_1_, section1_.class_start_date as class_st9_5_1_, section1_.total_capacity as total_c10_5_1_, section1_.wait_list_capacity as wait_li11_5_1_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id where sections0_.student_id=?
13:00:55,122 DEBUG SQL:92 - delete from enrolled_student where student_id=?
13:00:55,122 DEBUG SQL:92 - insert into enrolled_student (student_id, section_id) values (?, ?)
13:00:55,123 DEBUG SQL:92 - insert into enrolled_student (student_id, section_id) values (?, ?)
13:01:38,115 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:01:38,116 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and professor2_1_.last_name=?
13:01:50,615 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:01:50,617 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and professor2_1_.last_name=?
13:01:50,621 DEBUG SQL:92 - delete from enrolled_student where student_id=?
13:01:50,622 DEBUG SQL:92 - insert into enrolled_student (student_id, section_id) values (?, ?)
13:01:54,099 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:01:54,100 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=? and professor2_1_.last_name=?
13:02:04,774 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select s from org.courseregistration.model.Section s where s.course.code=:courseId and s.professor.lastName=:lastname
13:02:04,776 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Section'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[EQ] Node: '='
          |  +-[DOT] Node: '.'
          |  |  +-[DOT] Node: '.'
          |  |  |  +-[IDENT] Node: 's'
          |  |  |  \-[IDENT] Node: 'course'
          |  |  \-[IDENT] Node: 'code'
          |  \-[COLON] Node: ':'
          |     \-[IDENT] Node: 'courseId'
          \-[EQ] Node: '='
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[IDENT] Node: 's'
             |  |  \-[IDENT] Node: 'professor'
             |  \-[IDENT] Node: 'lastName'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'lastname'

13:02:04,776 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:02:04,777 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:02:04,777 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (s) -> section0_
13:02:04,777 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
13:02:04,777 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
13:02:04,777 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
13:02:04,778 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id course ) code ) ]
13:02:04,778 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course1_
13:02:04,778 DEBUG FromClause:265 - addJoinByPathMap() : s.course -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
13:02:04,778 DEBUG FromReferenceNode:60 - Resolved : s.course -> section0_.course_id
13:02:04,779 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:02:04,779 DEBUG FromReferenceNode:60 - Resolved : s.course.code -> course1_.code
13:02:04,779 DEBUG FromReferenceNode:60 - Resolved : s -> section0_.section_id
13:02:04,779 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
13:02:04,779 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (<no alias>) parent = [  ( . ( . section0_.section_id professor ) lastName ) ]
13:02:04,779 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor2_
13:02:04,779 DEBUG FromClause:265 - addJoinByPathMap() : s.professor -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
13:02:04,780 DEBUG FromElementFactory:258 - createEntityJoin() : Implied multi-table entity join
13:02:04,780 DEBUG FromReferenceNode:60 - Resolved : s.professor -> section0_.professor_id
13:02:04,780 DEBUG DotNode:654 - getDataType() : lastName -> org.hibernate.type.StringType@52525845
13:02:04,780 DEBUG FromReferenceNode:60 - Resolved : s.professor.lastName -> professor2_1_.last_name
13:02:04,780 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:02:04,780 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} section_info section0_ course_details course1_ professor_details professor2_ ) ( where ( and ( = ( course1_.code ( section0_.course_id section0_.section_id course ) code ) ? ) ( = ( professor2_1_.last_name ( section0_.professor_id section0_.section_id professor ) lastName ) ? ) ) ) )
13:02:04,781 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
13:02:04,781 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.course_id=course1_.course_id]
13:02:04,781 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.course_id=course1_.course_id]
13:02:04,781 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor2_ inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
13:02:04,781 DEBUG SyntheticAndFactory:73 - Using unprocessed WHERE-fragment [section0_.professor_id=professor2_.user_id]
13:02:04,781 DEBUG SyntheticAndFactory:105 - Using processed WHERE-fragment [section0_.professor_id=professor2_.user_id]
13:02:04,781 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:02:04,782 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[s], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[s.professor, s.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  +-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |  +-[FROM_FRAGMENT] ImpliedFromElement: 'course_details course1_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |  \-[FROM_FRAGMENT] ImpliedFromElement: 'professor_details professor2_ inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       +-[THETA_JOINS] SqlNode: '{theta joins}'
       |  +-[SQL_TOKEN] SqlFragment: 'section0_.course_id=course1_.course_id'
       |  \-[SQL_TOKEN] SqlFragment: 'section0_.professor_id=professor2_.user_id'
       \-[AND] SqlNode: 'and'
          +-[EQ] BinaryLogicOperatorNode: '='
          |  +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=s.course.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
          |  |  +-[DOT] DotNode: 'section0_.course_id' {propertyName=course,dereferenceType=ENTITY,getPropertyPath=course,path=s.course,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=null}
          |  |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
          |  |  |  \-[IDENT] IdentNode: 'course' {originalText=course}
          |  |  \-[IDENT] IdentNode: 'code' {originalText=code}
          |  \-[NAMED_PARAM] ParameterNode: '?' {name=courseId, expectedType=org.hibernate.type.StringType@52525845}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'professor2_1_.last_name' {propertyName=lastName,dereferenceType=PRIMITIVE,getPropertyPath=lastName,path=s.professor.lastName,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=null}
             |  +-[DOT] DotNode: 'section0_.professor_id' {propertyName=professor,dereferenceType=ENTITY,getPropertyPath=professor,path=s.professor,tableAlias=professor2_,className=org.courseregistration.model.Professor,classAlias=null}
             |  |  +-[ALIAS_REF] IdentNode: 'section0_.section_id' {alias=s, className=org.courseregistration.model.Section, tableAlias=section0_}
             |  |  \-[IDENT] IdentNode: 'professor' {originalText=professor}
             |  \-[IDENT] IdentNode: 'lastName' {originalText=lastName}
             \-[NAMED_PARAM] ParameterNode: '?' {name=lastname, expectedType=org.hibernate.type.StringType@52525845}

13:02:04,782 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:02:04,782 DEBUG QueryTranslatorImpl:247 - HQL: select s from org.courseregistration.model.Section s where s.course.code=:courseId and s.professor.lastName=:lastname
13:02:04,782 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ cross join course_details course1_ cross join professor_details professor2_ inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.course_id=course1_.course_id and section0_.professor_id=professor2_.user_id and course1_.code=? and professor2_1_.last_name=?
13:02:04,782 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:02:04,783 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ cross join course_details course1_ cross join professor_details professor2_ inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.course_id=course1_.course_id and section0_.professor_id=professor2_.user_id and course1_.code=? and professor2_1_.last_name=?
13:02:04,784 DEBUG SQL:92 - select students0_.section_id as section_2_2_0_, students0_.student_id as student_1_2_0_, student1_.user_id as user_id1_8_1_, student1_1_.address_id as address10_8_1_, student1_1_.college_id as college_2_8_1_, student1_1_.date_of_birth as date_of_3_8_1_, student1_1_.email_id as email_id4_8_1_, student1_1_.first_name as first_na5_8_1_, student1_1_.password as password6_8_1_, student1_1_.last_name as last_nam7_8_1_, student1_1_.middle_name as middle_n8_8_1_, student1_1_.phone_number as phone_nu9_8_1_, student1_.admissionType as admissio1_6_1_, student1_.previous_degree as previous2_6_1_ from enrolled_student students0_ inner join student_details student1_ on students0_.student_id=student1_.user_id left outer join users student1_1_ on student1_.user_id=student1_1_.user_id where students0_.section_id=?
13:02:24,230 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:02:53,670 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ cross join course_details course1_ cross join professor_details professor2_ inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where section0_.course_id=course1_.course_id and section0_.professor_id=professor2_.user_id and course1_.code=? and professor2_1_.last_name=?
13:10:03,428  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:10:03,490  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:10:03,493  INFO Environment:213 - HHH000206: hibernate.properties not found
13:10:03,494  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:10:03,525  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:10:03,600 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
13:10:03,601 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
13:10:03,601 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74a10858
13:10:03,601 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d371b2d
13:10:03,602 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fc2b765
13:10:03,602 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@289d1c02
13:10:03,603 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
13:10:03,603 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
13:10:03,604 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12c8a2c0
13:10:03,604 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@782663d3
13:10:03,604 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@782663d3
13:10:03,605 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@782663d3
13:10:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
13:10:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
13:10:03,606 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1786f9d5
13:10:03,607 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3578436e
13:10:03,607 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3578436e
13:10:03,607 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3578436e
13:10:03,608 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
13:10:03,608 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
13:10:03,608 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@954b04f
13:10:03,609 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
13:10:03,609 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
13:10:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@548ad73b
13:10:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
13:10:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
13:10:03,610 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
13:10:03,612 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fd66ad3
13:10:03,612 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fd66ad3
13:10:03,613 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10d59286
13:10:03,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10d59286
13:10:03,613 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@52525845
13:10:03,613 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@52525845
13:10:03,614 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35a50a4c
13:10:03,614 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ae82894
13:10:03,615 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@44a3ec6b
13:10:03,615 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44a3ec6b
13:10:03,616 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f8f5f62
13:10:03,616 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f8f5f62
13:10:03,617 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@b9afc07
13:10:03,617 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b9afc07
13:10:03,618 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@57f23557
13:10:03,618 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57f23557
13:10:03,618 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57f23557
13:10:03,620 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44f75083
13:10:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5f71c76a
13:10:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f71c76a
13:10:03,621 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f71c76a
13:10:03,622 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e4a7dd4
13:10:03,623 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1ad282e0
13:10:03,623 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ad282e0
13:10:03,624 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@60438a68
13:10:03,624 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60438a68
13:10:03,625 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c9f5c0d
13:10:03,625 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c9f5c0d
13:10:03,625 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2df32bf7
13:10:03,626 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2df32bf7
13:10:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2f490758
13:10:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2f490758
13:10:03,627 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40f08448
13:10:03,628 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@46238e3f
13:10:03,628 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@46238e3f
13:10:03,628 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@46238e3f
13:10:03,629 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:10:03,629 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:10:03,629 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:10:03,630 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@679b62af
13:10:03,630 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@49c43f4e
13:10:03,631 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@49c43f4e
13:10:03,631 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@49c43f4e
13:10:03,631 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:10:03,631 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:10:03,632 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:10:03,632 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@33cb5951
13:10:03,632 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7fad8c79
13:10:03,635 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@314c508a
13:10:03,635 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@314c508a
13:10:03,635 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16267862
13:10:03,637 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77be656f
13:10:03,637 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77be656f
13:10:03,639 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@61d47554
13:10:03,639 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61d47554
13:10:03,639 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d339552
13:10:03,639 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6591f517
13:10:03,640 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@58134517
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3b2c72c2
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b2c72c2
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@971d0d8
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51931956
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b4a2ec7
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@564718df
13:10:03,642 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51b7e5df
13:10:03,643 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18a70f16
13:10:03,643 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62e136d3
13:10:03,643 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8e4bb0
13:10:03,648  WARN DriverManagerConnectionProviderImpl:76 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
13:10:03,651  INFO DriverManagerConnectionProviderImpl:149 - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3307/student_registration_database]
13:10:03,651  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=root, password=****, autocommit=false}
13:10:03,651  INFO DriverManagerConnectionProviderImpl:163 - HHH000006: Autocommit mode: false
13:10:03,651  INFO DriverManagerConnectionProviderImpl:168 - HHH000149: JDBC isolation level: READ_COMMITTED
13:10:03,652  INFO DriverManagerConnectionProviderImpl:85 - HHH000115: Hibernate connection pool size: 20 (min=1)
13:10:03,851  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:10:03,874  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:15:22,489  INFO LogHelper:31 - HHH000204: Processing PersistenceUnitInfo [
	name: student_registration_system
	...]
13:15:22,545  INFO Version:37 - HHH000412: Hibernate Core {5.0.1.Final}
13:15:22,547  INFO Environment:213 - HHH000206: hibernate.properties not found
13:15:22,549  INFO Environment:317 - HHH000021: Bytecode provider name : javassist
13:15:22,578  INFO Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
13:15:22,651 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
13:15:22,651 DEBUG BasicTypeRegistry:135 - Adding type registration boolean -> org.hibernate.type.BooleanType@74a10858
13:15:22,652 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@74a10858
13:15:22,652 DEBUG BasicTypeRegistry:135 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d371b2d
13:15:22,653 DEBUG BasicTypeRegistry:135 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fc2b765
13:15:22,653 DEBUG BasicTypeRegistry:135 - Adding type registration yes_no -> org.hibernate.type.YesNoType@289d1c02
13:15:22,654 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
13:15:22,654 DEBUG BasicTypeRegistry:135 - Adding type registration byte -> org.hibernate.type.ByteType@12c8a2c0
13:15:22,654 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@12c8a2c0
13:15:22,655 DEBUG BasicTypeRegistry:135 - Adding type registration character -> org.hibernate.type.CharacterType@782663d3
13:15:22,655 DEBUG BasicTypeRegistry:135 - Adding type registration char -> org.hibernate.type.CharacterType@782663d3
13:15:22,656 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@782663d3
13:15:22,657 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
13:15:22,657 DEBUG BasicTypeRegistry:135 - Adding type registration short -> org.hibernate.type.ShortType@1786f9d5
13:15:22,657 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1786f9d5
13:15:22,658 DEBUG BasicTypeRegistry:135 - Adding type registration integer -> org.hibernate.type.IntegerType@3578436e
13:15:22,658 DEBUG BasicTypeRegistry:135 - Adding type registration int -> org.hibernate.type.IntegerType@3578436e
13:15:22,658 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3578436e
13:15:22,659 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
13:15:22,659 DEBUG BasicTypeRegistry:135 - Adding type registration long -> org.hibernate.type.LongType@954b04f
13:15:22,659 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@954b04f
13:15:22,660 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
13:15:22,660 DEBUG BasicTypeRegistry:135 - Adding type registration float -> org.hibernate.type.FloatType@548ad73b
13:15:22,661 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@548ad73b
13:15:22,661 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
13:15:22,661 DEBUG BasicTypeRegistry:135 - Adding type registration double -> org.hibernate.type.DoubleType@2f0a87b3
13:15:22,661 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f0a87b3
13:15:22,663 DEBUG BasicTypeRegistry:135 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fd66ad3
13:15:22,663 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fd66ad3
13:15:22,664 DEBUG BasicTypeRegistry:135 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10d59286
13:15:22,664 DEBUG BasicTypeRegistry:135 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10d59286
13:15:22,664 DEBUG BasicTypeRegistry:135 - Adding type registration string -> org.hibernate.type.StringType@52525845
13:15:22,664 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.String -> org.hibernate.type.StringType@52525845
13:15:22,665 DEBUG BasicTypeRegistry:135 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35a50a4c
13:15:22,665 DEBUG BasicTypeRegistry:135 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ae82894
13:15:22,666 DEBUG BasicTypeRegistry:135 - Adding type registration url -> org.hibernate.type.UrlType@44a3ec6b
13:15:22,666 DEBUG BasicTypeRegistry:135 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@44a3ec6b
13:15:22,667 DEBUG BasicTypeRegistry:135 - Adding type registration date -> org.hibernate.type.DateType@2f8f5f62
13:15:22,668 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f8f5f62
13:15:22,669 DEBUG BasicTypeRegistry:135 - Adding type registration time -> org.hibernate.type.TimeType@b9afc07
13:15:22,669 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@b9afc07
13:15:22,669 DEBUG BasicTypeRegistry:135 - Adding type registration timestamp -> org.hibernate.type.TimestampType@57f23557
13:15:22,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@57f23557
13:15:22,670 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@57f23557
13:15:22,671 DEBUG BasicTypeRegistry:135 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@44f75083
13:15:22,671 DEBUG BasicTypeRegistry:135 - Adding type registration calendar -> org.hibernate.type.CalendarType@5f71c76a
13:15:22,671 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f71c76a
13:15:22,672 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f71c76a
13:15:22,672 DEBUG BasicTypeRegistry:135 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1e4a7dd4
13:15:22,673 DEBUG BasicTypeRegistry:135 - Adding type registration locale -> org.hibernate.type.LocaleType@1ad282e0
13:15:22,673 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ad282e0
13:15:22,674 DEBUG BasicTypeRegistry:135 - Adding type registration currency -> org.hibernate.type.CurrencyType@60438a68
13:15:22,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@60438a68
13:15:22,674 DEBUG BasicTypeRegistry:135 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c9f5c0d
13:15:22,674 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c9f5c0d
13:15:22,675 DEBUG BasicTypeRegistry:135 - Adding type registration class -> org.hibernate.type.ClassType@2df32bf7
13:15:22,675 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2df32bf7
13:15:22,676 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2f490758
13:15:22,676 DEBUG BasicTypeRegistry:135 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2f490758
13:15:22,676 DEBUG BasicTypeRegistry:135 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@40f08448
13:15:22,677 DEBUG BasicTypeRegistry:135 - Adding type registration binary -> org.hibernate.type.BinaryType@46238e3f
13:15:22,677 DEBUG BasicTypeRegistry:135 - Adding type registration byte[] -> org.hibernate.type.BinaryType@46238e3f
13:15:22,677 DEBUG BasicTypeRegistry:135 - Adding type registration [B -> org.hibernate.type.BinaryType@46238e3f
13:15:22,678 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:15:22,678 DEBUG BasicTypeRegistry:135 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:15:22,678 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ee807c6
13:15:22,678 DEBUG BasicTypeRegistry:135 - Adding type registration image -> org.hibernate.type.ImageType@679b62af
13:15:22,679 DEBUG BasicTypeRegistry:135 - Adding type registration characters -> org.hibernate.type.CharArrayType@49c43f4e
13:15:22,679 DEBUG BasicTypeRegistry:135 - Adding type registration char[] -> org.hibernate.type.CharArrayType@49c43f4e
13:15:22,679 DEBUG BasicTypeRegistry:135 - Adding type registration [C -> org.hibernate.type.CharArrayType@49c43f4e
13:15:22,679 DEBUG BasicTypeRegistry:135 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:15:22,680 DEBUG BasicTypeRegistry:135 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:15:22,680 DEBUG BasicTypeRegistry:135 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2bbaf4f0
13:15:22,680 DEBUG BasicTypeRegistry:135 - Adding type registration text -> org.hibernate.type.TextType@33cb5951
13:15:22,681 DEBUG BasicTypeRegistry:135 - Adding type registration ntext -> org.hibernate.type.NTextType@7fad8c79
13:15:22,683 DEBUG BasicTypeRegistry:135 - Adding type registration blob -> org.hibernate.type.BlobType@314c508a
13:15:22,683 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@314c508a
13:15:22,683 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@16267862
13:15:22,685 DEBUG BasicTypeRegistry:135 - Adding type registration clob -> org.hibernate.type.ClobType@77be656f
13:15:22,685 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@77be656f
13:15:22,687 DEBUG BasicTypeRegistry:135 - Adding type registration nclob -> org.hibernate.type.NClobType@61d47554
13:15:22,687 DEBUG BasicTypeRegistry:135 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61d47554
13:15:22,687 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d339552
13:15:22,687 DEBUG BasicTypeRegistry:135 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6591f517
13:15:22,688 DEBUG BasicTypeRegistry:135 - Adding type registration serializable -> org.hibernate.type.SerializableType@58134517
13:15:22,690 DEBUG BasicTypeRegistry:135 - Adding type registration object -> org.hibernate.type.ObjectType@3b2c72c2
13:15:22,690 DEBUG BasicTypeRegistry:135 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b2c72c2
13:15:22,690 DEBUG BasicTypeRegistry:135 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@971d0d8
13:15:22,690 DEBUG BasicTypeRegistry:135 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@51931956
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2b4a2ec7
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@564718df
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51b7e5df
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@18a70f16
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62e136d3
13:15:22,691 DEBUG BasicTypeRegistry:135 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@c8e4bb0
13:15:22,696  WARN DriverManagerConnectionProviderImpl:76 - HHH000402: Using Hibernate built-in connection pool (not for production use!)
13:15:22,699  INFO DriverManagerConnectionProviderImpl:149 - HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3307/student_registration_database]
13:15:22,699  INFO DriverManagerConnectionProviderImpl:158 - HHH000046: Connection properties: {user=root, password=****, autocommit=false}
13:15:22,699  INFO DriverManagerConnectionProviderImpl:163 - HHH000006: Autocommit mode: false
13:15:22,700  INFO DriverManagerConnectionProviderImpl:168 - HHH000149: JDBC isolation level: READ_COMMITTED
13:15:22,701  INFO DriverManagerConnectionProviderImpl:85 - HHH000115: Hibernate connection pool size: 20 (min=1)
13:15:22,912  INFO Dialect:154 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
13:15:22,940  INFO LobCreatorBuilderImpl:98 - HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
13:16:12,390 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@7e3f95fe
13:16:12,390  INFO QueryTranslatorFactoryInitiator:47 - HHH000397: Using ASTQueryTranslatorFactory
13:16:12,408 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Student order by firstName asc
13:16:12,413 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Student'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

13:16:12,413 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:12,427 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:16:12,435 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (<no alias>) -> student0_
13:16:12,436 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:16:12,437 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:16:12,438 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> student0_1_.first_name
13:16:12,438 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:16:12,438 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} student_details student0_ ) ( order ( student0_1_.first_name {synthetic-alias} firstName ) asc ) )
13:16:12,441 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:16:12,443 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
13:16:12,443 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:16:12,444 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'student0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

13:16:12,444 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:12,449 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Student order by firstName asc
13:16:12,449 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
13:16:12,449 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:12,460 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id order by student0_1_.first_name asc
13:16:12,489 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,493 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,494 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,494 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,495 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,495 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,496 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:16:12,497 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,499 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,499 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,500 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,501 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,501 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:12,502 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:16:41,956 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Course order by code asc
13:16:41,959 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Course'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'code'
       \-[ASCENDING] Node: 'asc'

13:16:41,959 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:41,960 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:16:41,960 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (<no alias>) -> course0_
13:16:41,960 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:16:41,961 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:16:41,961 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.code -> course0_.code
13:16:41,962 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:16:41,962 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} course_details course0_ ) ( order ( course0_.code {synthetic-alias} code ) asc ) )
13:16:41,963 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:16:41,963 DEBUG JoinProcessor:169 - Using FROM fragment [course_details course0_]
13:16:41,963 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:16:41,963 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (course_details)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'course0_.course_id as course_i1_1_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}}
    |  \-[SQL_TOKEN] SqlFragment: 'course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[course0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'course_details course0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=course_details,tableAlias=course0_,origin=null,columns={,className=org.courseregistration.model.Course}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'course0_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path={synthetic-alias}.code,tableAlias=course0_,className=org.courseregistration.model.Course,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'code' {originalText=code}
       \-[ASCENDING] SqlNode: 'asc'

13:16:41,963 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:41,963 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Course order by code asc
13:16:41,964 DEBUG QueryTranslatorImpl:248 - SQL: select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
13:16:41,964 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:16:41,964 DEBUG SQL:92 - select course0_.course_id as course_i1_1_, course0_.code as code2_1_, course0_.department as departme3_1_, course0_.description as descript4_1_, course0_.name as name5_1_, course0_.no_of_credits as no_of_cr6_1_, course0_.pre_requisite_course as pre_requ7_1_, course0_.program as program8_1_ from course_details course0_ order by course0_.code asc
13:17:23,646 DEBUG QueryTranslatorImpl:278 - parse() - HQL: from org.courseregistration.model.Professor order by firstName asc
13:17:23,647 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'org'
    |           |  |  \-[IDENT] Node: 'courseregistration'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Professor'
    \-[ORDER] Node: 'order'
       +-[IDENT] Node: 'firstName'
       \-[ASCENDING] Node: 'asc'

13:17:23,647 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:23,647 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:17:23,648 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (<no alias>) -> professor0_
13:17:23,648 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
13:17:23,648 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:17:23,648 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.firstName -> professor0_1_.first_name
13:17:23,649 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:17:23,649 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( FromClause{level=1} professor_details professor0_ ) ( order ( professor0_1_.first_name {synthetic-alias} firstName ) asc ) )
13:17:23,649 DEBUG HqlSqlWalker:930 - Derived SELECT clause created.
13:17:23,649 DEBUG JoinProcessor:169 - Using FROM fragment [professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id]
13:17:23,649 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:17:23,649 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'professor0_.user_id as user_id1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}}
    |  \-[SQL_TOKEN] SqlFragment: 'professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[professor0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=professor_details,tableAlias=professor0_,origin=null,columns={,className=org.courseregistration.model.Professor}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'professor0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path={synthetic-alias}.firstName,tableAlias=professor0_,className=org.courseregistration.model.Professor,classAlias=null}
       |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
       |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
       \-[ASCENDING] SqlNode: 'asc'

13:17:23,649 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:23,650 DEBUG QueryTranslatorImpl:247 - HQL: from org.courseregistration.model.Professor order by firstName asc
13:17:23,650 DEBUG QueryTranslatorImpl:248 - SQL: select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:17:23,650 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:23,650 DEBUG SQL:92 - select professor0_.user_id as user_id1_8_, professor0_1_.address_id as address10_8_, professor0_1_.college_id as college_2_8_, professor0_1_.date_of_birth as date_of_3_8_, professor0_1_.email_id as email_id4_8_, professor0_1_.first_name as first_na5_8_, professor0_1_.password as password6_8_, professor0_1_.last_name as last_nam7_8_, professor0_1_.middle_name as middle_n8_8_, professor0_1_.phone_number as phone_nu9_8_, professor0_.faculty_type as faculty_1_3_, professor0_.office_hours_from_time as office_h2_3_, professor0_.office_hours_to_time as office_h3_3_, professor0_.years_of_experience as years_of4_3_ from professor_details professor0_ inner join users professor0_1_ on professor0_.user_id=professor0_1_.user_id order by professor0_1_.first_name asc
13:17:23,653 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,654 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,655 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,656 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,656 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,657 DEBUG SQL:92 - select roles0_.user_id as user_id1_7_0_, roles0_.role_id as role_id2_7_0_, role1_.role_id as role_id1_4_1_, role1_.name as name2_4_1_ from user_role roles0_ inner join roles role1_ on roles0_.role_id=role1_.role_id where roles0_.user_id=?
13:17:23,658 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:23,658 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:23,659 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:23,660 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:23,661 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:23,661 DEBUG SQL:92 - select address0_.address_id as address_1_0_0_, address0_.apt_no as apt_no2_0_0_, address0_.city as city3_0_0_, address0_.state as state4_0_0_, address0_.street_name as street_n5_0_0_, address0_.zip_code as zip_code6_0_0_ from address address0_ where address0_.address_id=?
13:17:45,652 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select s from org.courseregistration.model.Student s where s.firstName=:firstName
13:17:45,654 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'org'
    |  |     |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Student'
    |  |     \-[ALIAS] Node: 's'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 's'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 's'
          |  \-[IDENT] Node: 'firstName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'firstName'

13:17:45,654 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:45,654 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:17:45,654 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Student (s) -> student0_
13:17:45,655 DEBUG FromReferenceNode:60 - Resolved : s -> student0_.user_id
13:17:45,657 DEBUG FromReferenceNode:60 - Resolved : s -> student0_.user_id
13:17:45,657 DEBUG DotNode:654 - getDataType() : firstName -> org.hibernate.type.StringType@52525845
13:17:45,657 DEBUG FromReferenceNode:60 - Resolved : s.firstName -> student0_1_.first_name
13:17:45,659 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:17:45,659 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} student0_.user_id ) ( FromClause{level=1} student_details student0_ ) ( where ( = ( student0_1_.first_name student0_.user_id firstName ) ? ) ) )
13:17:45,659 DEBUG JoinProcessor:169 - Using FROM fragment [student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id]
13:17:45,660 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:17:45,660 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (student_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'student0_.user_id as user_id1_8_' {alias=s, className=org.courseregistration.model.Student, tableAlias=student0_}
    |  \-[SQL_TOKEN] SqlFragment: 'student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[student0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=student_details,tableAlias=student0_,origin=null,columns={,className=org.courseregistration.model.Student}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'student0_1_.first_name' {propertyName=firstName,dereferenceType=PRIMITIVE,getPropertyPath=firstName,path=s.firstName,tableAlias=student0_,className=org.courseregistration.model.Student,classAlias=s}
          |  +-[ALIAS_REF] IdentNode: 'student0_.user_id' {alias=s, className=org.courseregistration.model.Student, tableAlias=student0_}
          |  \-[IDENT] IdentNode: 'firstName' {originalText=firstName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=firstName, expectedType=org.hibernate.type.StringType@52525845}

13:17:45,660 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:45,660 DEBUG QueryTranslatorImpl:247 - HQL: select s from org.courseregistration.model.Student s where s.firstName=:firstName
13:17:45,660 DEBUG QueryTranslatorImpl:248 - SQL: select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:17:45,661 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:17:45,664 DEBUG SQL:92 - select student0_.user_id as user_id1_8_, student0_1_.address_id as address10_8_, student0_1_.college_id as college_2_8_, student0_1_.date_of_birth as date_of_3_8_, student0_1_.email_id as email_id4_8_, student0_1_.first_name as first_na5_8_, student0_1_.password as password6_8_, student0_1_.last_name as last_nam7_8_, student0_1_.middle_name as middle_n8_8_, student0_1_.phone_number as phone_nu9_8_, student0_.admissionType as admissio1_6_, student0_.previous_degree as previous2_6_ from student_details student0_ inner join users student0_1_ on student0_.user_id=student0_1_.user_id where student0_1_.first_name=?
13:17:45,665 DEBUG SQL:92 - select sections0_.student_id as student_1_2_0_, sections0_.section_id as section_2_2_0_, section1_.section_id as section_1_5_1_, section1_.class_end_time as class_en2_5_1_, section1_.class_start_time as class_st3_5_1_, section1_.course_id as course_12_5_1_, section1_.day_of_week as day_of_w4_5_1_, section1_.class_end_date as class_en5_5_1_, section1_.mode_of_instruction as mode_of_6_5_1_, section1_.professor_id as profess13_5_1_, section1_.room_number as room_num7_5_1_, section1_.semester as semester8_5_1_, section1_.class_start_date as class_st9_5_1_, section1_.total_capacity as total_c10_5_1_, section1_.wait_list_capacity as wait_li11_5_1_ from enrolled_student sections0_ inner join section_info section1_ on sections0_.section_id=section1_.section_id where sections0_.student_id=?
13:20:15,225 DEBUG QueryTranslatorImpl:278 - parse() - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias1.code=:param0
13:20:15,226 DEBUG QueryTranslatorImpl:296 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  +-[DOT] Node: '.'
    |  |  |  |  |  |  +-[IDENT] Node: 'org'
    |  |  |  |  |  |  \-[IDENT] Node: 'courseregistration'
    |  |  |  |  |  \-[IDENT] Node: 'model'
    |  |  |  |  \-[IDENT] Node: 'Section'
    |  |  |  \-[ALIAS] Node: 'generatedAlias0'
    |  |  +-[JOIN] Node: 'join'
    |  |  |  +-[INNER] Node: 'inner'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'generatedAlias0'
    |  |  |  |  \-[IDENT] Node: 'course'
    |  |  |  \-[ALIAS] Node: 'generatedAlias1'
    |  |  \-[JOIN] Node: 'join'
    |  |     +-[INNER] Node: 'inner'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'generatedAlias0'
    |  |     |  \-[IDENT] Node: 'professor'
    |  |     \-[ALIAS] Node: 'generatedAlias2'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias1'
          |  \-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

13:20:15,227 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:20:15,227 DEBUG HqlSqlBaseWalker:121 - select << begin [level=1, statement=select]
13:20:15,227 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Section (generatedAlias0) -> section0_
13:20:15,227 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:20:15,228 DEBUG DotNode:654 - getDataType() : course -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Course)
13:20:15,228 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for course in org.courseregistration.model.Section (generatedAlias1) parent = [ {null} ]
13:20:15,228 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Course (generatedAlias1) -> course1_
13:20:15,228 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.course -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=null,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
13:20:15,228 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.course -> section0_.course_id
13:20:15,228 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'course_details course1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}

13:20:15,229 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:20:15,229 DEBUG DotNode:654 - getDataType() : professor -> org.hibernate.type.ManyToOneType(org.courseregistration.model.Professor)
13:20:15,229 DEBUG DotNode:420 - dereferenceEntityJoin() : generating join for professor in org.courseregistration.model.Section (generatedAlias2) parent = [ {null} ]
13:20:15,229 DEBUG FromElement:145 - FromClause{level=1} : org.courseregistration.model.Professor (generatedAlias2) -> professor2_
13:20:15,229 DEBUG FromClause:265 - addJoinByPathMap() : generatedAlias0.professor -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=null,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
13:20:15,229 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.professor -> section0_.professor_id
13:20:15,229 DEBUG HqlSqlWalker:408 - createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'professor_details professor2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}

13:20:15,230 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> section0_.section_id
13:20:15,230 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1 -> course1_.course_id
13:20:15,230 DEBUG DotNode:654 - getDataType() : code -> org.hibernate.type.StringType@52525845
13:20:15,230 DEBUG FromReferenceNode:60 - Resolved : generatedAlias1.code -> course1_.code
13:20:15,230 DEBUG HqlSqlBaseWalker:125 - select : finishing up [level=1, statement=select]
13:20:15,230 DEBUG HqlSqlWalker:654 - processQuery() :  ( SELECT ( {select clause} section0_.section_id ) ( FromClause{level=1} ( section_info section0_ course_details course1_ professor_details professor2_ ) ) ( where ( = ( course1_.code course1_.course_id code ) ? ) ) )
13:20:15,230 DEBUG JoinProcessor:169 - Using FROM fragment [section_info section0_]
13:20:15,230 DEBUG JoinProcessor:169 - Using FROM fragment [inner join course_details course1_ on section0_.course_id=course1_.course_id]
13:20:15,231 DEBUG JoinProcessor:169 - Using FROM fragment [inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id]
13:20:15,231 DEBUG HqlSqlBaseWalker:129 - select >> end [level=1, statement=select]
13:20:15,231 DEBUG QueryTranslatorImpl:265 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (section_info,course_details,professor_details,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'section0_.section_id as section_1_5_' {alias=generatedAlias0, className=org.courseregistration.model.Section, tableAlias=section0_}
    |  \-[SQL_TOKEN] SqlFragment: 'section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[generatedAlias0, generatedAlias2, generatedAlias1], fromElementByTableAlias=[course1_, professor2_, section0_], fromElementsByPath=[generatedAlias0.professor, generatedAlias0.course], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'section_info section0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=section_info,tableAlias=section0_,origin=null,columns={,className=org.courseregistration.model.Section}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join course_details course1_ on section0_.course_id=course1_.course_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias1,role=org.courseregistration.model.Section.course,tableName=course_details,tableAlias=course1_,origin=section_info section0_,columns={section0_.course_id ,className=org.courseregistration.model.Course}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias2,role=org.courseregistration.model.Section.professor,tableName=professor_details,tableAlias=professor2_,origin=section_info section0_,columns={section0_.professor_id ,className=org.courseregistration.model.Professor}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'course1_.code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=generatedAlias1.code,tableAlias=course1_,className=org.courseregistration.model.Course,classAlias=generatedAlias1}
          |  +-[ALIAS_REF] IdentNode: 'course1_.course_id' {alias=generatedAlias1, className=org.courseregistration.model.Course, tableAlias=course1_}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@52525845}

13:20:15,231 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:20:15,231 DEBUG QueryTranslatorImpl:247 - HQL: select generatedAlias0 from org.courseregistration.model.Section as generatedAlias0 inner join generatedAlias0.course as generatedAlias1 inner join generatedAlias0.professor as generatedAlias2 where generatedAlias1.code=:param0
13:20:15,231 DEBUG QueryTranslatorImpl:248 - SQL: select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=?
13:20:15,231 DEBUG ErrorCounter:95 - throwQueryException() : no errors
13:20:15,233 DEBUG SQL:92 - select section0_.section_id as section_1_5_, section0_.class_end_time as class_en2_5_, section0_.class_start_time as class_st3_5_, section0_.course_id as course_12_5_, section0_.day_of_week as day_of_w4_5_, section0_.class_end_date as class_en5_5_, section0_.mode_of_instruction as mode_of_6_5_, section0_.professor_id as profess13_5_, section0_.room_number as room_num7_5_, section0_.semester as semester8_5_, section0_.class_start_date as class_st9_5_, section0_.total_capacity as total_c10_5_, section0_.wait_list_capacity as wait_li11_5_ from section_info section0_ inner join course_details course1_ on section0_.course_id=course1_.course_id inner join professor_details professor2_ on section0_.professor_id=professor2_.user_id inner join users professor2_1_ on professor2_.user_id=professor2_1_.user_id where course1_.code=?
